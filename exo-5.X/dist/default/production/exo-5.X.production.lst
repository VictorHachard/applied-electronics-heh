

Microchip MPLAB XC8 Assembler V3.10 build 20250813170317 
                                                                                               Fri Oct 17 09:35:04 2025

Microchip MPLAB XC8 C Compiler v3.10 (Free license) build 20250813170317 Og1 
     1                           	processor	18F26K83
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=1
    15                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=1
    16                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27   000000                     
    28                           ; Generated 12/10/2023 GMT
    29                           ; 
    30                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F26K83 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62   003FE0                     bsr             equ	16352
    63   003FE9                     fsr0            equ	16361
    64   003FEA                     fsr0h           equ	16362
    65   003FE9                     fsr0l           equ	16361
    66   003FE1                     fsr1            equ	16353
    67   003FE2                     fsr1h           equ	16354
    68   003FE1                     fsr1l           equ	16353
    69   003FD9                     fsr2            equ	16345
    70   003FDA                     fsr2h           equ	16346
    71   003FD9                     fsr2l           equ	16345
    72   003FEF                     indf0           equ	16367
    73   003FE7                     indf1           equ	16359
    74   003FDF                     indf2           equ	16351
    75   003FD2                     intcon          equ	16338
    76   0039E5                     nvmcon          equ	14821
    77   003FF9                     pcl             equ	16377
    78   003FFA                     pclath          equ	16378
    79   003FFB                     pclatu          equ	16379
    80   003FEB                     plusw0          equ	16363
    81   003FE3                     plusw1          equ	16355
    82   003FDB                     plusw2          equ	16347
    83   003FED                     postdec0        equ	16365
    84   003FE5                     postdec1        equ	16357
    85   003FDD                     postdec2        equ	16349
    86   003FEE                     postinc0        equ	16366
    87   003FE6                     postinc1        equ	16358
    88   003FDE                     postinc2        equ	16350
    89   003FEC                     preinc0         equ	16364
    90   003FE4                     preinc1         equ	16356
    91   003FDC                     preinc2         equ	16348
    92   003FF3                     prod            equ	16371
    93   003FF4                     prodh           equ	16372
    94   003FF3                     prodl           equ	16371
    95   003FD8                     status          equ	16344
    96   003FF5                     tablat          equ	16373
    97   003FF6                     tblptr          equ	16374
    98   003FF7                     tblptrh         equ	16375
    99   003FF6                     tblptrl         equ	16374
   100   003FF8                     tblptru         equ	16376
   101   003FFD                     tosl            equ	16381
   102   003FE8                     wreg            equ	16360
   103   003700                     CIOCON          equ	14080	;# 
   104   003701                     RXERRCNT        equ	14081	;# 
   105   003702                     TXERRCNT        equ	14082	;# 
   106   003703                     BRGCON1         equ	14083	;# 
   107   003704                     BRGCON2         equ	14084	;# 
   108   003705                     BRGCON3         equ	14085	;# 
   109   003706                     RXFCON0         equ	14086	;# 
   110   003707                     RXFCON1         equ	14087	;# 
   111   003708                     RXF6SIDH        equ	14088	;# 
   112   003709                     RXF6SIDL        equ	14089	;# 
   113   00370A                     RXF6EIDH        equ	14090	;# 
   114   00370B                     RXF6EIDL        equ	14091	;# 
   115   00370C                     RXF7SIDH        equ	14092	;# 
   116   00370D                     RXF7SIDL        equ	14093	;# 
   117   00370E                     RXF7EIDH        equ	14094	;# 
   118   00370F                     RXF7EIDL        equ	14095	;# 
   119   003710                     RXF8SIDH        equ	14096	;# 
   120   003711                     RXF8SIDL        equ	14097	;# 
   121   003712                     RXF8EIDH        equ	14098	;# 
   122   003713                     RXF8EIDL        equ	14099	;# 
   123   003714                     RXF9SIDH        equ	14100	;# 
   124   003715                     RXF9SIDL        equ	14101	;# 
   125   003716                     RXF9EIDH        equ	14102	;# 
   126   003717                     RXF9EIDL        equ	14103	;# 
   127   003718                     RXF10SIDH       equ	14104	;# 
   128   003719                     RXF10SIDL       equ	14105	;# 
   129   00371A                     RXF10EIDH       equ	14106	;# 
   130   00371B                     RXF10EIDL       equ	14107	;# 
   131   00371C                     RXF11SIDH       equ	14108	;# 
   132   00371D                     RXF11SIDL       equ	14109	;# 
   133   00371E                     RXF11EIDH       equ	14110	;# 
   134   00371F                     RXF11EIDL       equ	14111	;# 
   135   003720                     RXF12SIDH       equ	14112	;# 
   136   003721                     RXF12SIDL       equ	14113	;# 
   137   003722                     RXF12EIDH       equ	14114	;# 
   138   003723                     RXF12EIDL       equ	14115	;# 
   139   003724                     RXF13SIDH       equ	14116	;# 
   140   003725                     RXF13SIDL       equ	14117	;# 
   141   003726                     RXF13EIDH       equ	14118	;# 
   142   003727                     RXF13EIDL       equ	14119	;# 
   143   003728                     RXF14SIDH       equ	14120	;# 
   144   003729                     RXF14SIDL       equ	14121	;# 
   145   00372A                     RXF14EIDH       equ	14122	;# 
   146   00372B                     RXF14EIDL       equ	14123	;# 
   147   00372C                     RXF15SIDH       equ	14124	;# 
   148   00372D                     RXF15SIDL       equ	14125	;# 
   149   00372E                     RXF15EIDH       equ	14126	;# 
   150   00372F                     RXF15EIDL       equ	14127	;# 
   151   003730                     SDFLC           equ	14128	;# 
   152   003731                     RXFBCON0        equ	14129	;# 
   153   003732                     RXFBCON1        equ	14130	;# 
   154   003733                     RXFBCON2        equ	14131	;# 
   155   003734                     RXFBCON3        equ	14132	;# 
   156   003735                     RXFBCON4        equ	14133	;# 
   157   003736                     RXFBCON5        equ	14134	;# 
   158   003737                     RXFBCON6        equ	14135	;# 
   159   003738                     RXFBCON7        equ	14136	;# 
   160   003739                     MSEL0           equ	14137	;# 
   161   00373A                     MSEL1           equ	14138	;# 
   162   00373B                     MSEL2           equ	14139	;# 
   163   00373C                     MSEL3           equ	14140	;# 
   164   00373D                     BSEL0           equ	14141	;# 
   165   00373E                     BIE0            equ	14142	;# 
   166   00373F                     TXBIE           equ	14143	;# 
   167   003740                     B0CON           equ	14144	;# 
   168   003741                     B0SIDH          equ	14145	;# 
   169   003742                     B0SIDL          equ	14146	;# 
   170   003743                     B0EIDH          equ	14147	;# 
   171   003744                     B0EIDL          equ	14148	;# 
   172   003745                     B0DLC           equ	14149	;# 
   173   003746                     B0D0            equ	14150	;# 
   174   003747                     B0D1            equ	14151	;# 
   175   003748                     B0D2            equ	14152	;# 
   176   003749                     B0D3            equ	14153	;# 
   177   00374A                     B0D4            equ	14154	;# 
   178   00374B                     B0D5            equ	14155	;# 
   179   00374C                     B0D6            equ	14156	;# 
   180   00374D                     B0D7            equ	14157	;# 
   181   00374E                     CANSTAT_RO9     equ	14158	;# 
   182   00374F                     CANCON_RO9      equ	14159	;# 
   183   003750                     B1CON           equ	14160	;# 
   184   003751                     B1SIDH          equ	14161	;# 
   185   003752                     B1SIDL          equ	14162	;# 
   186   003753                     B1EIDH          equ	14163	;# 
   187   003754                     B1EIDL          equ	14164	;# 
   188   003755                     B1DLC           equ	14165	;# 
   189   003756                     B1D0            equ	14166	;# 
   190   003757                     B1D1            equ	14167	;# 
   191   003758                     B1D2            equ	14168	;# 
   192   003759                     B1D3            equ	14169	;# 
   193   00375A                     B1D4            equ	14170	;# 
   194   00375B                     B1D5            equ	14171	;# 
   195   00375C                     B1D6            equ	14172	;# 
   196   00375D                     B1D7            equ	14173	;# 
   197   00375E                     CANSTAT_RO8     equ	14174	;# 
   198   00375F                     CANCON_RO8      equ	14175	;# 
   199   003760                     B2CON           equ	14176	;# 
   200   003761                     B2SIDH          equ	14177	;# 
   201   003762                     B2SIDL          equ	14178	;# 
   202   003763                     B2EIDH          equ	14179	;# 
   203   003764                     B2EIDL          equ	14180	;# 
   204   003765                     B2DLC           equ	14181	;# 
   205   003766                     B2D0            equ	14182	;# 
   206   003767                     B2D1            equ	14183	;# 
   207   003768                     B2D2            equ	14184	;# 
   208   003769                     B2D3            equ	14185	;# 
   209   00376A                     B2D4            equ	14186	;# 
   210   00376B                     B2D5            equ	14187	;# 
   211   00376C                     B2D6            equ	14188	;# 
   212   00376D                     B2D7            equ	14189	;# 
   213   00376E                     CANSTAT_RO7     equ	14190	;# 
   214   00376F                     CANCON_RO7      equ	14191	;# 
   215   003770                     B3CON           equ	14192	;# 
   216   003771                     B3SIDH          equ	14193	;# 
   217   003772                     B3SIDL          equ	14194	;# 
   218   003773                     B3EIDH          equ	14195	;# 
   219   003774                     B3EIDL          equ	14196	;# 
   220   003775                     B3DLC           equ	14197	;# 
   221   003776                     B3D0            equ	14198	;# 
   222   003777                     B3D1            equ	14199	;# 
   223   003778                     B3D2            equ	14200	;# 
   224   003779                     B3D3            equ	14201	;# 
   225   00377A                     B3D4            equ	14202	;# 
   226   00377B                     B3D5            equ	14203	;# 
   227   00377C                     B3D6            equ	14204	;# 
   228   00377D                     B3D7            equ	14205	;# 
   229   00377E                     CANSTAT_RO6     equ	14206	;# 
   230   00377F                     CANCON_RO6      equ	14207	;# 
   231   003780                     B4CON           equ	14208	;# 
   232   003781                     B4SIDH          equ	14209	;# 
   233   003782                     B4SIDL          equ	14210	;# 
   234   003783                     B4EIDH          equ	14211	;# 
   235   003784                     B4EIDL          equ	14212	;# 
   236   003785                     B4DLC           equ	14213	;# 
   237   003786                     B4D0            equ	14214	;# 
   238   003787                     B4D1            equ	14215	;# 
   239   003788                     B4D2            equ	14216	;# 
   240   003789                     B4D3            equ	14217	;# 
   241   00378A                     B4D4            equ	14218	;# 
   242   00378B                     B4D5            equ	14219	;# 
   243   00378C                     B4D6            equ	14220	;# 
   244   00378D                     B4D7            equ	14221	;# 
   245   00378E                     CANSTAT_RO5     equ	14222	;# 
   246   00378F                     CANCON_RO5      equ	14223	;# 
   247   003790                     B5CON           equ	14224	;# 
   248   003791                     B5SIDH          equ	14225	;# 
   249   003792                     B5SIDL          equ	14226	;# 
   250   003793                     B5EIDH          equ	14227	;# 
   251   003794                     B5EIDL          equ	14228	;# 
   252   003795                     B5DLC           equ	14229	;# 
   253   003796                     B5D0            equ	14230	;# 
   254   003797                     B5D1            equ	14231	;# 
   255   003798                     B5D2            equ	14232	;# 
   256   003799                     B5D3            equ	14233	;# 
   257   00379A                     B5D4            equ	14234	;# 
   258   00379B                     B5D5            equ	14235	;# 
   259   00379C                     B5D6            equ	14236	;# 
   260   00379D                     B5D7            equ	14237	;# 
   261   00379E                     CANSTAT_RO4     equ	14238	;# 
   262   00379F                     CANCON_RO4      equ	14239	;# 
   263   0037A0                     RXF0SIDH        equ	14240	;# 
   264   0037A1                     RXF0SIDL        equ	14241	;# 
   265   0037A2                     RXF0EIDH        equ	14242	;# 
   266   0037A3                     RXF0EIDL        equ	14243	;# 
   267   0037A4                     RXF1SIDH        equ	14244	;# 
   268   0037A5                     RXF1SIDL        equ	14245	;# 
   269   0037A6                     RXF1EIDH        equ	14246	;# 
   270   0037A7                     RXF1EIDL        equ	14247	;# 
   271   0037A8                     RXF2SIDH        equ	14248	;# 
   272   0037A9                     RXF2SIDL        equ	14249	;# 
   273   0037AA                     RXF2EIDH        equ	14250	;# 
   274   0037AB                     RXF2EIDL        equ	14251	;# 
   275   0037AC                     RXF3SIDH        equ	14252	;# 
   276   0037AD                     RXF3SIDL        equ	14253	;# 
   277   0037AE                     RXF3EIDH        equ	14254	;# 
   278   0037AF                     RXF3EIDL        equ	14255	;# 
   279   0037B0                     RXF4SIDH        equ	14256	;# 
   280   0037B1                     RXF4SIDL        equ	14257	;# 
   281   0037B2                     RXF4EIDH        equ	14258	;# 
   282   0037B3                     RXF4EIDL        equ	14259	;# 
   283   0037B4                     RXF5SIDH        equ	14260	;# 
   284   0037B5                     RXF5SIDL        equ	14261	;# 
   285   0037B6                     RXF5EIDH        equ	14262	;# 
   286   0037B7                     RXF5EIDL        equ	14263	;# 
   287   0037B8                     RXM0SIDH        equ	14264	;# 
   288   0037B9                     RXM0SIDL        equ	14265	;# 
   289   0037BA                     RXM0EIDH        equ	14266	;# 
   290   0037BB                     RXM0EIDL        equ	14267	;# 
   291   0037BC                     RXM1SIDH        equ	14268	;# 
   292   0037BD                     RXM1SIDL        equ	14269	;# 
   293   0037BE                     RXM1EIDH        equ	14270	;# 
   294   0037BF                     RXM1EIDL        equ	14271	;# 
   295   0037C0                     TXB2CON         equ	14272	;# 
   296   0037C1                     TXB2SIDH        equ	14273	;# 
   297   0037C2                     TXB2SIDL        equ	14274	;# 
   298   0037C3                     TXB2EIDH        equ	14275	;# 
   299   0037C4                     TXB2EIDL        equ	14276	;# 
   300   0037C5                     TXB2DLC         equ	14277	;# 
   301   0037C6                     TXB2D0          equ	14278	;# 
   302   0037C7                     TXB2D1          equ	14279	;# 
   303   0037C8                     TXB2D2          equ	14280	;# 
   304   0037C9                     TXB2D3          equ	14281	;# 
   305   0037CA                     TXB2D4          equ	14282	;# 
   306   0037CB                     TXB2D5          equ	14283	;# 
   307   0037CC                     TXB2D6          equ	14284	;# 
   308   0037CD                     TXB2D7          equ	14285	;# 
   309   0037CE                     CANSTAT_R03     equ	14286	;# 
   310   0037CF                     CANCON_R03      equ	14287	;# 
   311   0037D0                     TXB1CON         equ	14288	;# 
   312   0037D1                     TXB1SIDH        equ	14289	;# 
   313   0037D2                     TXB1SIDL        equ	14290	;# 
   314   0037D3                     TXB1EIDH        equ	14291	;# 
   315   0037D4                     TXB1EIDL        equ	14292	;# 
   316   0037D5                     TXB1DLC         equ	14293	;# 
   317   0037D6                     TXB1D0          equ	14294	;# 
   318   0037D7                     TXB1D1          equ	14295	;# 
   319   0037D8                     TXB1D2          equ	14296	;# 
   320   0037D9                     TXB1D3          equ	14297	;# 
   321   0037DA                     TXB1D4          equ	14298	;# 
   322   0037DB                     TXB1D5          equ	14299	;# 
   323   0037DC                     TXB1D6          equ	14300	;# 
   324   0037DD                     TXB1D7          equ	14301	;# 
   325   0037DE                     CANSTAT_RO2     equ	14302	;# 
   326   0037DF                     CANCON_RO2      equ	14303	;# 
   327   0037E0                     TXB0CON         equ	14304	;# 
   328   0037E1                     TXB0SIDH        equ	14305	;# 
   329   0037E2                     TXB0SIDL        equ	14306	;# 
   330   0037E3                     TXB0EIDH        equ	14307	;# 
   331   0037E4                     TXB0EIDL        equ	14308	;# 
   332   0037E5                     TXB0DLC         equ	14309	;# 
   333   0037E6                     TXB0D0          equ	14310	;# 
   334   0037E7                     TXB0D1          equ	14311	;# 
   335   0037E8                     TXB0D2          equ	14312	;# 
   336   0037E9                     TXB0D3          equ	14313	;# 
   337   0037EA                     TXB0D4          equ	14314	;# 
   338   0037EB                     TXB0D5          equ	14315	;# 
   339   0037EC                     TXB0D6          equ	14316	;# 
   340   0037ED                     TXB0D7          equ	14317	;# 
   341   0037EE                     CANSTAT_RO1     equ	14318	;# 
   342   0037EF                     CANCON_RO1      equ	14319	;# 
   343   0037F0                     RXB1CON         equ	14320	;# 
   344   0037F1                     RXB1SIDH        equ	14321	;# 
   345   0037F2                     RXB1SIDL        equ	14322	;# 
   346   0037F3                     RXB1EIDH        equ	14323	;# 
   347   0037F4                     RXB1EIDL        equ	14324	;# 
   348   0037F5                     RXB1DLC         equ	14325	;# 
   349   0037F6                     RXB1D0          equ	14326	;# 
   350   0037F7                     RXB1D1          equ	14327	;# 
   351   0037F8                     RXB1D2          equ	14328	;# 
   352   0037F9                     RXB1D3          equ	14329	;# 
   353   0037FA                     RXB1D4          equ	14330	;# 
   354   0037FB                     RXB1D5          equ	14331	;# 
   355   0037FC                     RXB1D6          equ	14332	;# 
   356   0037FD                     RXB1D7          equ	14333	;# 
   357   0037FE                     CANSTAT_RO0     equ	14334	;# 
   358   0037FF                     CANCON_RO0      equ	14335	;# 
   359   003880                     STATUS_CSHAD    equ	14464	;# 
   360   003881                     WREG_CSHAD      equ	14465	;# 
   361   003882                     BSR_CSHAD       equ	14466	;# 
   362   003883                     SHADCON         equ	14467	;# 
   363   003884                     STATUS_SHAD     equ	14468	;# 
   364   003885                     WREG_SHAD       equ	14469	;# 
   365   003886                     BSR_SHAD        equ	14470	;# 
   366   003887                     PCLATH_SHAD     equ	14471	;# 
   367   003888                     PCLATU_SHAD     equ	14472	;# 
   368   003889                     FSR0SH          equ	14473	;# 
   369   003889                     FSR0L_SHAD      equ	14473	;# 
   370   00388A                     FSR0H_SHAD      equ	14474	;# 
   371   00388B                     FSR1SH          equ	14475	;# 
   372   00388B                     FSR1L_SHAD      equ	14475	;# 
   373   00388C                     FSR1H_SHAD      equ	14476	;# 
   374   00388D                     FSR2SH          equ	14477	;# 
   375   00388D                     FSR2L_SHAD      equ	14477	;# 
   376   00388E                     FSR2H_SHAD      equ	14478	;# 
   377   00388F                     PRODSH          equ	14479	;# 
   378   00388F                     PRODL_SHAD      equ	14479	;# 
   379   003890                     PRODH_SHAD      equ	14480	;# 
   380   00389D                     IVTADL          equ	14493	;# 
   381   00389E                     IVTADH          equ	14494	;# 
   382   00389F                     IVTADU          equ	14495	;# 
   383   00395B                     WDTCON0         equ	14683	;# 
   384   00395C                     WDTCON1         equ	14684	;# 
   385   00395D                     WDTPSL          equ	14685	;# 
   386   00395E                     WDTPSH          equ	14686	;# 
   387   00395F                     WDTTMR          equ	14687	;# 
   388   003960                     CRCDATA         equ	14688	;# 
   389   003960                     CRCDATL         equ	14688	;# 
   390   003961                     CRCDATH         equ	14689	;# 
   391   003962                     CRCACC          equ	14690	;# 
   392   003962                     CRCACCL         equ	14690	;# 
   393   003963                     CRCACCH         equ	14691	;# 
   394   003964                     CRCSHFT         equ	14692	;# 
   395   003964                     CRCSHIFTL       equ	14692	;# 
   396   003965                     CRCSHIFTH       equ	14693	;# 
   397   003966                     CRCXOR          equ	14694	;# 
   398   003966                     CRCXORL         equ	14694	;# 
   399   003967                     CRCXORH         equ	14695	;# 
   400   003968                     CRCCON0         equ	14696	;# 
   401   003969                     CRCCON1         equ	14697	;# 
   402   003976                     SCANLADR        equ	14710	;# 
   403   003976                     SCANLADRL       equ	14710	;# 
   404   003977                     SCANLADRH       equ	14711	;# 
   405   003978                     SCANLADRU       equ	14712	;# 
   406   003979                     SCANHADR        equ	14713	;# 
   407   003979                     SCANHADRL       equ	14713	;# 
   408   00397A                     SCANHADRH       equ	14714	;# 
   409   00397B                     SCANHADRU       equ	14715	;# 
   410   00397C                     SCANCON0        equ	14716	;# 
   411   00397D                     SCANTRIG        equ	14717	;# 
   412   003980                     IPR0            equ	14720	;# 
   413   003981                     IPR1            equ	14721	;# 
   414   003982                     IPR2            equ	14722	;# 
   415   003983                     IPR3            equ	14723	;# 
   416   003984                     IPR4            equ	14724	;# 
   417   003985                     IPR5            equ	14725	;# 
   418   003986                     IPR6            equ	14726	;# 
   419   003987                     IPR7            equ	14727	;# 
   420   003988                     IPR8            equ	14728	;# 
   421   003989                     IPR9            equ	14729	;# 
   422   003990                     PIE0            equ	14736	;# 
   423   003991                     PIE1            equ	14737	;# 
   424   003992                     PIE2            equ	14738	;# 
   425   003993                     PIE3            equ	14739	;# 
   426   003994                     PIE4            equ	14740	;# 
   427   003995                     PIE5            equ	14741	;# 
   428   003996                     PIE6            equ	14742	;# 
   429   003997                     PIE7            equ	14743	;# 
   430   003998                     PIE8            equ	14744	;# 
   431   003999                     PIE9            equ	14745	;# 
   432   0039A0                     PIR0            equ	14752	;# 
   433   0039A1                     PIR1            equ	14753	;# 
   434   0039A2                     PIR2            equ	14754	;# 
   435   0039A3                     PIR3            equ	14755	;# 
   436   0039A4                     PIR4            equ	14756	;# 
   437   0039A5                     PIR5            equ	14757	;# 
   438   0039A6                     PIR6            equ	14758	;# 
   439   0039A7                     PIR7            equ	14759	;# 
   440   0039A8                     PIR8            equ	14760	;# 
   441   0039A9                     PIR9            equ	14761	;# 
   442   0039C0                     PMD0            equ	14784	;# 
   443   0039C1                     PMD1            equ	14785	;# 
   444   0039C2                     PMD2            equ	14786	;# 
   445   0039C3                     PMD3            equ	14787	;# 
   446   0039C4                     PMD4            equ	14788	;# 
   447   0039C5                     PMD5            equ	14789	;# 
   448   0039C6                     PMD6            equ	14790	;# 
   449   0039C7                     PMD7            equ	14791	;# 
   450   0039D0                     BORCON          equ	14800	;# 
   451   0039D1                     VREGCON         equ	14801	;# 
   452   0039D8                     CPUDOZE         equ	14808	;# 
   453   0039D9                     OSCCON1         equ	14809	;# 
   454   0039DA                     OSCCON2         equ	14810	;# 
   455   0039DB                     OSCCON3         equ	14811	;# 
   456   0039DC                     OSCSTAT         equ	14812	;# 
   457   0039DC                     OSCSTAT1        equ	14812	;# 
   458   0039DD                     OSCEN           equ	14813	;# 
   459   0039DE                     OSCTUNE         equ	14814	;# 
   460   0039DF                     OSCFRQ          equ	14815	;# 
   461   0039E0                     NVMADRL         equ	14816	;# 
   462   0039E1                     NVMADRH         equ	14817	;# 
   463   0039E3                     NVMDAT          equ	14819	;# 
   464   0039E5                     NVMCON1         equ	14821	;# 
   465   0039E6                     NVMCON2         equ	14822	;# 
   466   0039EF                     PRLOCK          equ	14831	;# 
   467   0039F1                     ISRPR           equ	14833	;# 
   468   0039F2                     MAINPR          equ	14834	;# 
   469   0039F3                     DMA1PR          equ	14835	;# 
   470   0039F4                     DMA2PR          equ	14836	;# 
   471   0039F7                     SCANPR          equ	14839	;# 
   472   003A00                     RA0PPS          equ	14848	;# 
   473   003A01                     RA1PPS          equ	14849	;# 
   474   003A02                     RA2PPS          equ	14850	;# 
   475   003A03                     RA3PPS          equ	14851	;# 
   476   003A04                     RA4PPS          equ	14852	;# 
   477   003A05                     RA5PPS          equ	14853	;# 
   478   003A06                     RA6PPS          equ	14854	;# 
   479   003A07                     RA7PPS          equ	14855	;# 
   480   003A08                     RB0PPS          equ	14856	;# 
   481   003A09                     RB1PPS          equ	14857	;# 
   482   003A0A                     RB2PPS          equ	14858	;# 
   483   003A0B                     RB3PPS          equ	14859	;# 
   484   003A0C                     RB4PPS          equ	14860	;# 
   485   003A0D                     RB5PPS          equ	14861	;# 
   486   003A0E                     RB6PPS          equ	14862	;# 
   487   003A0F                     RB7PPS          equ	14863	;# 
   488   003A10                     RC0PPS          equ	14864	;# 
   489   003A11                     RC1PPS          equ	14865	;# 
   490   003A12                     RC2PPS          equ	14866	;# 
   491   003A13                     RC3PPS          equ	14867	;# 
   492   003A14                     RC4PPS          equ	14868	;# 
   493   003A15                     RC5PPS          equ	14869	;# 
   494   003A16                     RC6PPS          equ	14870	;# 
   495   003A17                     RC7PPS          equ	14871	;# 
   496   003A40                     ANSELA          equ	14912	;# 
   497   003A41                     WPUA            equ	14913	;# 
   498   003A42                     ODCONA          equ	14914	;# 
   499   003A43                     SLRCONA         equ	14915	;# 
   500   003A44                     INLVLA          equ	14916	;# 
   501   003A45                     IOCAP           equ	14917	;# 
   502   003A46                     IOCAN           equ	14918	;# 
   503   003A47                     IOCAF           equ	14919	;# 
   504   003A50                     ANSELB          equ	14928	;# 
   505   003A51                     WPUB            equ	14929	;# 
   506   003A52                     ODCONB          equ	14930	;# 
   507   003A53                     SLRCONB         equ	14931	;# 
   508   003A54                     INLVLB          equ	14932	;# 
   509   003A55                     IOCBP           equ	14933	;# 
   510   003A56                     IOCBN           equ	14934	;# 
   511   003A57                     IOCBF           equ	14935	;# 
   512   003A5A                     RB1I2C          equ	14938	;# 
   513   003A5B                     RB2I2C          equ	14939	;# 
   514   003A60                     ANSELC          equ	14944	;# 
   515   003A61                     WPUC            equ	14945	;# 
   516   003A62                     ODCONC          equ	14946	;# 
   517   003A63                     SLRCONC         equ	14947	;# 
   518   003A64                     INLVLC          equ	14948	;# 
   519   003A65                     IOCCP           equ	14949	;# 
   520   003A66                     IOCCN           equ	14950	;# 
   521   003A67                     IOCCF           equ	14951	;# 
   522   003A6A                     RC3I2C          equ	14954	;# 
   523   003A6B                     RC4I2C          equ	14955	;# 
   524   003A81                     WPUE            equ	14977	;# 
   525   003A84                     INLVLE          equ	14980	;# 
   526   003A85                     IOCEP           equ	14981	;# 
   527   003A86                     IOCEN           equ	14982	;# 
   528   003A87                     IOCEF           equ	14983	;# 
   529   003ABF                     PPSLOCK         equ	15039	;# 
   530   003AC0                     INT0PPS         equ	15040	;# 
   531   003AC1                     INT1PPS         equ	15041	;# 
   532   003AC2                     INT2PPS         equ	15042	;# 
   533   003AC3                     T0CKIPPS        equ	15043	;# 
   534   003AC4                     T1CKIPPS        equ	15044	;# 
   535   003AC5                     T1GPPS          equ	15045	;# 
   536   003AC6                     T3CKIPPS        equ	15046	;# 
   537   003AC7                     T3GPPS          equ	15047	;# 
   538   003AC8                     T5CKIPPS        equ	15048	;# 
   539   003AC9                     T5GPPS          equ	15049	;# 
   540   003ACA                     T2INPPS         equ	15050	;# 
   541   003ACB                     T4INPPS         equ	15051	;# 
   542   003ACC                     T6INPPS         equ	15052	;# 
   543   003ACD                     CCP1PPS         equ	15053	;# 
   544   003ACE                     CCP2PPS         equ	15054	;# 
   545   003ACF                     CCP3PPS         equ	15055	;# 
   546   003AD0                     CCP4PPS         equ	15056	;# 
   547   003AD1                     SMT1WINPPS      equ	15057	;# 
   548   003AD2                     SMT1SIGPPS      equ	15058	;# 
   549   003AD3                     SMT2WINPPS      equ	15059	;# 
   550   003AD4                     SMT2SIGPPS      equ	15060	;# 
   551   003AD5                     CWG1INPPS       equ	15061	;# 
   552   003AD6                     CWG2INPPS       equ	15062	;# 
   553   003AD7                     CWG3INPPS       equ	15063	;# 
   554   003AD8                     MD1CARLPPS      equ	15064	;# 
   555   003AD9                     MD1CARHPPS      equ	15065	;# 
   556   003ADA                     MD1SRCPPS       equ	15066	;# 
   557   003ADB                     CLCIN0PPS       equ	15067	;# 
   558   003ADC                     CLCIN1PPS       equ	15068	;# 
   559   003ADD                     CLCIN2PPS       equ	15069	;# 
   560   003ADE                     CLCIN3PPS       equ	15070	;# 
   561   003ADF                     ADACTPPS        equ	15071	;# 
   562   003AE0                     SPI1SCKPPS      equ	15072	;# 
   563   003AE1                     SPI1SDIPPS      equ	15073	;# 
   564   003AE2                     SPI1SSPPS       equ	15074	;# 
   565   003AE3                     I2C1SCLPPS      equ	15075	;# 
   566   003AE4                     I2C1SDAPPS      equ	15076	;# 
   567   003AE5                     I2C2SCLPPS      equ	15077	;# 
   568   003AE6                     I2C2SDAPPS      equ	15078	;# 
   569   003AE7                     U1RXPPS         equ	15079	;# 
   570   003AE8                     U1CTSPPS        equ	15080	;# 
   571   003AEA                     U2RXPPS         equ	15082	;# 
   572   003AEB                     U2CTSPPS        equ	15083	;# 
   573   003AED                     CANRXPPS        equ	15085	;# 
   574   003BC9                     DMA2BUF         equ	15305	;# 
   575   003BCA                     DMA2DCNT        equ	15306	;# 
   576   003BCA                     DMA2DCNTL       equ	15306	;# 
   577   003BCB                     DMA2DCNTH       equ	15307	;# 
   578   003BCC                     DMA2DPTR        equ	15308	;# 
   579   003BCC                     DMA2DPTRL       equ	15308	;# 
   580   003BCD                     DMA2DPTRH       equ	15309	;# 
   581   003BCE                     DMA2DSZ         equ	15310	;# 
   582   003BCE                     DMA2DSZL        equ	15310	;# 
   583   003BCF                     DMA2DSZH        equ	15311	;# 
   584   003BD0                     DMA2DSA         equ	15312	;# 
   585   003BD0                     DMA2DSAL        equ	15312	;# 
   586   003BD1                     DMA2DSAH        equ	15313	;# 
   587   003BD2                     DMA2SCNT        equ	15314	;# 
   588   003BD2                     DMA2SCNTL       equ	15314	;# 
   589   003BD3                     DMA2SCNTH       equ	15315	;# 
   590   003BD4                     DMA2SPTR        equ	15316	;# 
   591   003BD4                     DMA2SPTRL       equ	15316	;# 
   592   003BD5                     DMA2SPTRH       equ	15317	;# 
   593   003BD6                     DMA2SPTRU       equ	15318	;# 
   594   003BD7                     DMA2SSZ         equ	15319	;# 
   595   003BD7                     DMA2SSZL        equ	15319	;# 
   596   003BD8                     DMA2SSZH        equ	15320	;# 
   597   003BD9                     DMA2SSA         equ	15321	;# 
   598   003BD9                     DMA2SSAL        equ	15321	;# 
   599   003BDA                     DMA2SSAH        equ	15322	;# 
   600   003BDB                     DMA2SSAU        equ	15323	;# 
   601   003BDC                     DMA2CON0        equ	15324	;# 
   602   003BDD                     DMA2CON1        equ	15325	;# 
   603   003BDE                     DMA2AIRQ        equ	15326	;# 
   604   003BDF                     DMA2SIRQ        equ	15327	;# 
   605   003BE9                     DMA1BUF         equ	15337	;# 
   606   003BEA                     DMA1DCNT        equ	15338	;# 
   607   003BEA                     DMA1DCNTL       equ	15338	;# 
   608   003BEB                     DMA1DCNTH       equ	15339	;# 
   609   003BEC                     DMA1DPTR        equ	15340	;# 
   610   003BEC                     DMA1DPTRL       equ	15340	;# 
   611   003BED                     DMA1DPTRH       equ	15341	;# 
   612   003BEE                     DMA1DSZ         equ	15342	;# 
   613   003BEE                     DMA1DSZL        equ	15342	;# 
   614   003BEF                     DMA1DSZH        equ	15343	;# 
   615   003BF0                     DMA1DSA         equ	15344	;# 
   616   003BF0                     DMA1DSAL        equ	15344	;# 
   617   003BF1                     DMA1DSAH        equ	15345	;# 
   618   003BF2                     DMA1SCNT        equ	15346	;# 
   619   003BF2                     DMA1SCNTL       equ	15346	;# 
   620   003BF3                     DMA1SCNTH       equ	15347	;# 
   621   003BF4                     DMA1SPTR        equ	15348	;# 
   622   003BF4                     DMA1SPTRL       equ	15348	;# 
   623   003BF5                     DMA1SPTRH       equ	15349	;# 
   624   003BF6                     DMA1SPTRU       equ	15350	;# 
   625   003BF7                     DMA1SSZ         equ	15351	;# 
   626   003BF7                     DMA1SSZL        equ	15351	;# 
   627   003BF8                     DMA1SSZH        equ	15352	;# 
   628   003BF9                     DMA1SSA         equ	15353	;# 
   629   003BF9                     DMA1SSAL        equ	15353	;# 
   630   003BFA                     DMA1SSAH        equ	15354	;# 
   631   003BFB                     DMA1SSAU        equ	15355	;# 
   632   003BFC                     DMA1CON0        equ	15356	;# 
   633   003BFD                     DMA1CON1        equ	15357	;# 
   634   003BFE                     DMA1AIRQ        equ	15358	;# 
   635   003BFF                     DMA1SIRQ        equ	15359	;# 
   636   003C56                     CLC4CON         equ	15446	;# 
   637   003C57                     CLC4POL         equ	15447	;# 
   638   003C58                     CLC4SEL0        equ	15448	;# 
   639   003C59                     CLC4SEL1        equ	15449	;# 
   640   003C5A                     CLC4SEL2        equ	15450	;# 
   641   003C5B                     CLC4SEL3        equ	15451	;# 
   642   003C5C                     CLC4GLS0        equ	15452	;# 
   643   003C5D                     CLC4GLS1        equ	15453	;# 
   644   003C5E                     CLC4GLS2        equ	15454	;# 
   645   003C5F                     CLC4GLS3        equ	15455	;# 
   646   003C60                     CLC3CON         equ	15456	;# 
   647   003C61                     CLC3POL         equ	15457	;# 
   648   003C62                     CLC3SEL0        equ	15458	;# 
   649   003C63                     CLC3SEL1        equ	15459	;# 
   650   003C64                     CLC3SEL2        equ	15460	;# 
   651   003C65                     CLC3SEL3        equ	15461	;# 
   652   003C66                     CLC3GLS0        equ	15462	;# 
   653   003C67                     CLC3GLS1        equ	15463	;# 
   654   003C68                     CLC3GLS2        equ	15464	;# 
   655   003C69                     CLC3GLS3        equ	15465	;# 
   656   003C6A                     CLC2CON         equ	15466	;# 
   657   003C6B                     CLC2POL         equ	15467	;# 
   658   003C6C                     CLC2SEL0        equ	15468	;# 
   659   003C6D                     CLC2SEL1        equ	15469	;# 
   660   003C6E                     CLC2SEL2        equ	15470	;# 
   661   003C6F                     CLC2SEL3        equ	15471	;# 
   662   003C70                     CLC2GLS0        equ	15472	;# 
   663   003C71                     CLC2GLS1        equ	15473	;# 
   664   003C72                     CLC2GLS2        equ	15474	;# 
   665   003C73                     CLC2GLS3        equ	15475	;# 
   666   003C74                     CLC1CON         equ	15476	;# 
   667   003C75                     CLC1POL         equ	15477	;# 
   668   003C76                     CLC1SEL0        equ	15478	;# 
   669   003C77                     CLC1SEL1        equ	15479	;# 
   670   003C78                     CLC1SEL2        equ	15480	;# 
   671   003C79                     CLC1SEL3        equ	15481	;# 
   672   003C7A                     CLC1GLS0        equ	15482	;# 
   673   003C7B                     CLC1GLS1        equ	15483	;# 
   674   003C7C                     CLC1GLS2        equ	15484	;# 
   675   003C7D                     CLC1GLS3        equ	15485	;# 
   676   003C7E                     CLCDATA0        equ	15486	;# 
   677   003CE5                     CLKRCON         equ	15589	;# 
   678   003CE6                     CLKRCLK         equ	15590	;# 
   679   003CFA                     MD1CON0         equ	15610	;# 
   680   003CFB                     MD1CON1         equ	15611	;# 
   681   003CFC                     MD1SRC          equ	15612	;# 
   682   003CFD                     MD1CARL         equ	15613	;# 
   683   003CFE                     MD1CARH         equ	15614	;# 
   684   003D10                     SPI1RXB         equ	15632	;# 
   685   003D11                     SPI1TXB         equ	15633	;# 
   686   003D12                     SPI1TCNT        equ	15634	;# 
   687   003D12                     SPI1TCNTL       equ	15634	;# 
   688   003D13                     SPI1TCNTH       equ	15635	;# 
   689   003D14                     SPI1CON0        equ	15636	;# 
   690   003D15                     SPI1CON1        equ	15637	;# 
   691   003D16                     SPI1CON2        equ	15638	;# 
   692   003D17                     SPI1STATUS      equ	15639	;# 
   693   003D18                     SPI1TWIDTH      equ	15640	;# 
   694   003D19                     SPI1BAUD        equ	15641	;# 
   695   003D1A                     SPI1INTF        equ	15642	;# 
   696   003D1B                     SPI1INTE        equ	15643	;# 
   697   003D1C                     SPI1CLK         equ	15644	;# 
   698   003D54                     I2C2RXB         equ	15700	;# 
   699   003D55                     I2C2TXB         equ	15701	;# 
   700   003D56                     I2C2CNT         equ	15702	;# 
   701   003D57                     I2C2ADB0        equ	15703	;# 
   702   003D58                     I2C2ADB1        equ	15704	;# 
   703   003D59                     I2C2ADR0        equ	15705	;# 
   704   003D5A                     I2C2ADR1        equ	15706	;# 
   705   003D5B                     I2C2ADR2        equ	15707	;# 
   706   003D5C                     I2C2ADR3        equ	15708	;# 
   707   003D5D                     I2C2CON0        equ	15709	;# 
   708   003D5E                     I2C2CON1        equ	15710	;# 
   709   003D5F                     I2C2CON2        equ	15711	;# 
   710   003D60                     I2C2ERR         equ	15712	;# 
   711   003D61                     I2C2STAT0       equ	15713	;# 
   712   003D62                     I2C2STAT1       equ	15714	;# 
   713   003D63                     I2C2PIR         equ	15715	;# 
   714   003D64                     I2C2PIE         equ	15716	;# 
   715   003D65                     I2C2CLK         equ	15717	;# 
   716   003D66                     I2C2BTO         equ	15718	;# 
   717   003D6A                     I2C1RXB         equ	15722	;# 
   718   003D6B                     I2C1TXB         equ	15723	;# 
   719   003D6C                     I2C1CNT         equ	15724	;# 
   720   003D6D                     I2C1ADB0        equ	15725	;# 
   721   003D6E                     I2C1ADB1        equ	15726	;# 
   722   003D6F                     I2C1ADR0        equ	15727	;# 
   723   003D70                     I2C1ADR1        equ	15728	;# 
   724   003D71                     I2C1ADR2        equ	15729	;# 
   725   003D72                     I2C1ADR3        equ	15730	;# 
   726   003D73                     I2C1CON0        equ	15731	;# 
   727   003D74                     I2C1CON1        equ	15732	;# 
   728   003D75                     I2C1CON2        equ	15733	;# 
   729   003D76                     I2C1ERR         equ	15734	;# 
   730   003D77                     I2C1STAT0       equ	15735	;# 
   731   003D78                     I2C1STAT1       equ	15736	;# 
   732   003D79                     I2C1PIR         equ	15737	;# 
   733   003D7A                     I2C1PIE         equ	15738	;# 
   734   003D7B                     I2C1CLK         equ	15739	;# 
   735   003D7C                     I2C1BTO         equ	15740	;# 
   736   003DD0                     U2RXB           equ	15824	;# 
   737   003DD0                     U2RXBL          equ	15824	;# 
   738   003DD1                     U2RXCHK         equ	15825	;# 
   739   003DD2                     U2TXB           equ	15826	;# 
   740   003DD2                     U2TXBL          equ	15826	;# 
   741   003DD3                     U2TXCHK         equ	15827	;# 
   742   003DD4                     U2P1            equ	15828	;# 
   743   003DD4                     U2P1L           equ	15828	;# 
   744   003DD5                     U2P1H           equ	15829	;# 
   745   003DD6                     U2P2            equ	15830	;# 
   746   003DD6                     U2P2L           equ	15830	;# 
   747   003DD7                     U2P2H           equ	15831	;# 
   748   003DD8                     U2P3            equ	15832	;# 
   749   003DD8                     U2P3L           equ	15832	;# 
   750   003DD9                     U2P3H           equ	15833	;# 
   751   003DDA                     U2CON0          equ	15834	;# 
   752   003DDB                     U2CON1          equ	15835	;# 
   753   003DDC                     U2CON2          equ	15836	;# 
   754   003DDD                     U2BRG           equ	15837	;# 
   755   003DDD                     U2BRGL          equ	15837	;# 
   756   003DDE                     U2BRGH          equ	15838	;# 
   757   003DDF                     U2FIFO          equ	15839	;# 
   758   003DE0                     U2UIR           equ	15840	;# 
   759   003DE1                     U2ERRIR         equ	15841	;# 
   760   003DE2                     U2ERRIE         equ	15842	;# 
   761   003DE8                     U1RXB           equ	15848	;# 
   762   003DE8                     U1RXBL          equ	15848	;# 
   763   003DE9                     U1RXCHK         equ	15849	;# 
   764   003DEA                     U1TXB           equ	15850	;# 
   765   003DEA                     U1TXBL          equ	15850	;# 
   766   003DEB                     U1TXCHK         equ	15851	;# 
   767   003DEC                     U1P1            equ	15852	;# 
   768   003DEC                     U1P1L           equ	15852	;# 
   769   003DED                     U1P1H           equ	15853	;# 
   770   003DEE                     U1P2            equ	15854	;# 
   771   003DEE                     U1P2L           equ	15854	;# 
   772   003DEF                     U1P2H           equ	15855	;# 
   773   003DF0                     U1P3            equ	15856	;# 
   774   003DF0                     U1P3L           equ	15856	;# 
   775   003DF1                     U1P3H           equ	15857	;# 
   776   003DF2                     U1CON0          equ	15858	;# 
   777   003DF3                     U1CON1          equ	15859	;# 
   778   003DF4                     U1CON2          equ	15860	;# 
   779   003DF5                     U1BRG           equ	15861	;# 
   780   003DF5                     U1BRGL          equ	15861	;# 
   781   003DF6                     U1BRGH          equ	15862	;# 
   782   003DF7                     U1FIFO          equ	15863	;# 
   783   003DF8                     U1UIR           equ	15864	;# 
   784   003DF9                     U1ERRIR         equ	15865	;# 
   785   003DFA                     U1ERRIE         equ	15866	;# 
   786   003E9C                     DAC1CON1        equ	16028	;# 
   787   003E9E                     DAC1CON0        equ	16030	;# 
   788   003EB8                     CM2CON0         equ	16056	;# 
   789   003EB9                     CM2CON1         equ	16057	;# 
   790   003EBA                     CM2NCH          equ	16058	;# 
   791   003EBB                     CM2PCH          equ	16059	;# 
   792   003EBC                     CM1CON0         equ	16060	;# 
   793   003EBD                     CM1CON1         equ	16061	;# 
   794   003EBE                     CM1NCH          equ	16062	;# 
   795   003EBF                     CM1PCH          equ	16063	;# 
   796   003EC0                     CMOUT           equ	16064	;# 
   797   003EC1                     FVRCON          equ	16065	;# 
   798   003EC3                     ZCDCON          equ	16067	;# 
   799   003EC9                     HLVDCON0        equ	16073	;# 
   800   003ECA                     HLVDCON1        equ	16074	;# 
   801   003ED7                     ADCP            equ	16087	;# 
   802   003EDE                     ADLTH           equ	16094	;# 
   803   003EDE                     ADLTHL          equ	16094	;# 
   804   003EDF                     ADLTHH          equ	16095	;# 
   805   003EE0                     ADUTH           equ	16096	;# 
   806   003EE0                     ADUTHL          equ	16096	;# 
   807   003EE1                     ADUTHH          equ	16097	;# 
   808   003EE2                     ADERR           equ	16098	;# 
   809   003EE2                     ADERRL          equ	16098	;# 
   810   003EE3                     ADERRH          equ	16099	;# 
   811   003EE4                     ADSTPT          equ	16100	;# 
   812   003EE4                     ADSTPTL         equ	16100	;# 
   813   003EE5                     ADSTPTH         equ	16101	;# 
   814   003EE6                     ADFLTR          equ	16102	;# 
   815   003EE6                     ADFLTRL         equ	16102	;# 
   816   003EE7                     ADFLTRH         equ	16103	;# 
   817   003EE8                     ADACC           equ	16104	;# 
   818   003EE8                     ADACCL          equ	16104	;# 
   819   003EE9                     ADACCH          equ	16105	;# 
   820   003EEA                     ADACCU          equ	16106	;# 
   821   003EEB                     ADCNT           equ	16107	;# 
   822   003EEC                     ADRPT           equ	16108	;# 
   823   003EED                     ADPREV          equ	16109	;# 
   824   003EED                     ADPREVL         equ	16109	;# 
   825   003EEE                     ADPREVH         equ	16110	;# 
   826   003EEF                     ADRES           equ	16111	;# 
   827   003EEF                     ADRESL          equ	16111	;# 
   828   003EF0                     ADRESH          equ	16112	;# 
   829   003EF1                     ADPCH           equ	16113	;# 
   830   003EF3                     ADACQ           equ	16115	;# 
   831   003EF3                     ADACQL          equ	16115	;# 
   832   003EF4                     ADACQH          equ	16116	;# 
   833   003EF5                     ADCAP           equ	16117	;# 
   834   003EF6                     ADPRE           equ	16118	;# 
   835   003EF6                     ADPREL          equ	16118	;# 
   836   003EF7                     ADPREH          equ	16119	;# 
   837   003EF8                     ADCON0          equ	16120	;# 
   838   003EF9                     ADCON1          equ	16121	;# 
   839   003EFA                     ADCON2          equ	16122	;# 
   840   003EFB                     ADCON3          equ	16123	;# 
   841   003EFC                     ADSTAT          equ	16124	;# 
   842   003EFD                     ADREF           equ	16125	;# 
   843   003EFE                     ADACT           equ	16126	;# 
   844   003EFF                     ADCLK           equ	16127	;# 
   845   003F00                     SMT2TMR         equ	16128	;# 
   846   003F00                     SMT2TMRL        equ	16128	;# 
   847   003F01                     SMT2TMRH        equ	16129	;# 
   848   003F02                     SMT2TMRU        equ	16130	;# 
   849   003F03                     SMT2CPR         equ	16131	;# 
   850   003F03                     SMT2CPRL        equ	16131	;# 
   851   003F04                     SMT2CPRH        equ	16132	;# 
   852   003F05                     SMT2CPRU        equ	16133	;# 
   853   003F06                     SMT2CPW         equ	16134	;# 
   854   003F06                     SMT2CPWL        equ	16134	;# 
   855   003F07                     SMT2CPWH        equ	16135	;# 
   856   003F08                     SMT2CPWU        equ	16136	;# 
   857   003F09                     SMT2PR          equ	16137	;# 
   858   003F09                     SMT2PRL         equ	16137	;# 
   859   003F0A                     SMT2PRH         equ	16138	;# 
   860   003F0B                     SMT2PRU         equ	16139	;# 
   861   003F0C                     SMT2CON0        equ	16140	;# 
   862   003F0D                     SMT2CON1        equ	16141	;# 
   863   003F0E                     SMT2STAT        equ	16142	;# 
   864   003F0F                     SMT2CLK         equ	16143	;# 
   865   003F10                     SMT2SIG         equ	16144	;# 
   866   003F11                     SMT2WIN         equ	16145	;# 
   867   003F12                     SMT1TMR         equ	16146	;# 
   868   003F12                     SMT1TMRL        equ	16146	;# 
   869   003F13                     SMT1TMRH        equ	16147	;# 
   870   003F14                     SMT1TMRU        equ	16148	;# 
   871   003F15                     SMT1CPR         equ	16149	;# 
   872   003F15                     SMT1CPRL        equ	16149	;# 
   873   003F16                     SMT1CPRH        equ	16150	;# 
   874   003F17                     SMT1CPRU        equ	16151	;# 
   875   003F18                     SMT1CPW         equ	16152	;# 
   876   003F18                     SMT1CPWL        equ	16152	;# 
   877   003F19                     SMT1CPWH        equ	16153	;# 
   878   003F1A                     SMT1CPWU        equ	16154	;# 
   879   003F1B                     SMT1PR          equ	16155	;# 
   880   003F1B                     SMT1PRL         equ	16155	;# 
   881   003F1C                     SMT1PRH         equ	16156	;# 
   882   003F1D                     SMT1PRU         equ	16157	;# 
   883   003F1E                     SMT1CON0        equ	16158	;# 
   884   003F1F                     SMT1CON1        equ	16159	;# 
   885   003F20                     SMT1STAT        equ	16160	;# 
   886   003F21                     SMT1CLK         equ	16161	;# 
   887   003F22                     SMT1SIG         equ	16162	;# 
   888   003F23                     SMT1WIN         equ	16163	;# 
   889   003F38                     NCO1ACC         equ	16184	;# 
   890   003F38                     NCO1ACCL        equ	16184	;# 
   891   003F39                     NCO1ACCH        equ	16185	;# 
   892   003F3A                     NCO1ACCU        equ	16186	;# 
   893   003F3B                     NCO1INC         equ	16187	;# 
   894   003F3B                     NCO1INCL        equ	16187	;# 
   895   003F3C                     NCO1INCH        equ	16188	;# 
   896   003F3D                     NCO1INCU        equ	16189	;# 
   897   003F3E                     NCO1CON         equ	16190	;# 
   898   003F3F                     NCO1CLK         equ	16191	;# 
   899   003F40                     CWG3CLK         equ	16192	;# 
   900   003F40                     CWG3CLKCON      equ	16192	;# 
   901   003F41                     CWG3ISM         equ	16193	;# 
   902   003F42                     CWG3DBR         equ	16194	;# 
   903   003F43                     CWG3DBF         equ	16195	;# 
   904   003F44                     CWG3CON0        equ	16196	;# 
   905   003F45                     CWG3CON1        equ	16197	;# 
   906   003F46                     CWG3AS0         equ	16198	;# 
   907   003F47                     CWG3AS1         equ	16199	;# 
   908   003F48                     CWG3STR         equ	16200	;# 
   909   003F49                     CWG2CLK         equ	16201	;# 
   910   003F49                     CWG2CLKCON      equ	16201	;# 
   911   003F4A                     CWG2ISM         equ	16202	;# 
   912   003F4B                     CWG2DBR         equ	16203	;# 
   913   003F4C                     CWG2DBF         equ	16204	;# 
   914   003F4D                     CWG2CON0        equ	16205	;# 
   915   003F4E                     CWG2CON1        equ	16206	;# 
   916   003F4F                     CWG2AS0         equ	16207	;# 
   917   003F50                     CWG2AS1         equ	16208	;# 
   918   003F51                     CWG2STR         equ	16209	;# 
   919   003F52                     CWG1CLK         equ	16210	;# 
   920   003F52                     CWG1CLKCON      equ	16210	;# 
   921   003F53                     CWG1ISM         equ	16211	;# 
   922   003F54                     CWG1DBR         equ	16212	;# 
   923   003F55                     CWG1DBF         equ	16213	;# 
   924   003F56                     CWG1CON0        equ	16214	;# 
   925   003F57                     CWG1CON1        equ	16215	;# 
   926   003F58                     CWG1AS0         equ	16216	;# 
   927   003F59                     CWG1AS1         equ	16217	;# 
   928   003F5A                     CWG1STR         equ	16218	;# 
   929   003F5E                     CCPTMRS0        equ	16222	;# 
   930   003F5F                     CCPTMRS1        equ	16223	;# 
   931   003F60                     PWM8DC          equ	16224	;# 
   932   003F60                     PWM8DCL         equ	16224	;# 
   933   003F61                     PWM8DCH         equ	16225	;# 
   934   003F62                     PWM8CON         equ	16226	;# 
   935   003F64                     PWM7DC          equ	16228	;# 
   936   003F64                     PWM7DCL         equ	16228	;# 
   937   003F65                     PWM7DCH         equ	16229	;# 
   938   003F66                     PWM7CON         equ	16230	;# 
   939   003F68                     PWM6DC          equ	16232	;# 
   940   003F68                     PWM6DCL         equ	16232	;# 
   941   003F69                     PWM6DCH         equ	16233	;# 
   942   003F6A                     PWM6CON         equ	16234	;# 
   943   003F6C                     PWM5DC          equ	16236	;# 
   944   003F6C                     PWM5DCL         equ	16236	;# 
   945   003F6D                     PWM5DCH         equ	16237	;# 
   946   003F6E                     PWM5CON         equ	16238	;# 
   947   003F70                     CCPR4           equ	16240	;# 
   948   003F70                     CCPR4L          equ	16240	;# 
   949   003F71                     CCPR4H          equ	16241	;# 
   950   003F72                     CCP4CON         equ	16242	;# 
   951   003F73                     CCP4CAP         equ	16243	;# 
   952   003F74                     CCPR3           equ	16244	;# 
   953   003F74                     CCPR3L          equ	16244	;# 
   954   003F75                     CCPR3H          equ	16245	;# 
   955   003F76                     CCP3CON         equ	16246	;# 
   956   003F77                     CCP3CAP         equ	16247	;# 
   957   003F78                     CCPR2           equ	16248	;# 
   958   003F78                     CCPR2L          equ	16248	;# 
   959   003F79                     CCPR2H          equ	16249	;# 
   960   003F7A                     CCP2CON         equ	16250	;# 
   961   003F7B                     CCP2CAP         equ	16251	;# 
   962   003F7C                     CCPR1           equ	16252	;# 
   963   003F7C                     CCPR1L          equ	16252	;# 
   964   003F7D                     CCPR1H          equ	16253	;# 
   965   003F7E                     CCP1CON         equ	16254	;# 
   966   003F7F                     CCP1CAP         equ	16255	;# 
   967   003F80                     RXB0CON         equ	16256	;# 
   968   003F81                     RXB0SIDH        equ	16257	;# 
   969   003F82                     RXB0SIDL        equ	16258	;# 
   970   003F83                     RXB0EIDH        equ	16259	;# 
   971   003F84                     RXB0EIDL        equ	16260	;# 
   972   003F85                     RXB0DLC         equ	16261	;# 
   973   003F86                     RXB0D0          equ	16262	;# 
   974   003F87                     RXB0D1          equ	16263	;# 
   975   003F88                     RXB0D2          equ	16264	;# 
   976   003F89                     RXB0D3          equ	16265	;# 
   977   003F8A                     RXB0D4          equ	16266	;# 
   978   003F8B                     RXB0D5          equ	16267	;# 
   979   003F8C                     RXB0D6          equ	16268	;# 
   980   003F8D                     RXB0D7          equ	16269	;# 
   981   003F8E                     CANSTAT         equ	16270	;# 
   982   003F8F                     CANCON          equ	16271	;# 
   983   003F90                     COMSTAT         equ	16272	;# 
   984   003F91                     ECANCON         equ	16273	;# 
   985   003F92                     T6TMR           equ	16274	;# 
   986   003F92                     TMR6            equ	16274	;# 
   987   003F93                     T6PR            equ	16275	;# 
   988   003F93                     PR6             equ	16275	;# 
   989   003F94                     T6CON           equ	16276	;# 
   990   003F95                     T6HLT           equ	16277	;# 
   991   003F96                     T6CLKCON        equ	16278	;# 
   992   003F96                     T6CLK           equ	16278	;# 
   993   003F97                     T6RST           equ	16279	;# 
   994   003F98                     TMR5            equ	16280	;# 
   995   003F98                     TMR5L           equ	16280	;# 
   996   003F99                     TMR5H           equ	16281	;# 
   997   003F9A                     T5CON           equ	16282	;# 
   998   003F9A                     TMR5CON         equ	16282	;# 
   999   003F9B                     T5GCON          equ	16283	;# 
  1000   003F9B                     TMR5GCON        equ	16283	;# 
  1001   003F9C                     T5GATE          equ	16284	;# 
  1002   003F9C                     TMR5GATE        equ	16284	;# 
  1003   003F9D                     T5CLK           equ	16285	;# 
  1004   003F9D                     TMR5CLK         equ	16285	;# 
  1005   003F9D                     PR5             equ	16285	;# 
  1006   003F9E                     T4TMR           equ	16286	;# 
  1007   003F9E                     TMR4            equ	16286	;# 
  1008   003F9F                     T4PR            equ	16287	;# 
  1009   003F9F                     PR4             equ	16287	;# 
  1010   003FA0                     T4CON           equ	16288	;# 
  1011   003FA1                     T4HLT           equ	16289	;# 
  1012   003FA2                     T4CLKCON        equ	16290	;# 
  1013   003FA2                     T4CLK           equ	16290	;# 
  1014   003FA3                     T4RST           equ	16291	;# 
  1015   003FA4                     TMR3            equ	16292	;# 
  1016   003FA4                     TMR3L           equ	16292	;# 
  1017   003FA5                     TMR3H           equ	16293	;# 
  1018   003FA6                     T3CON           equ	16294	;# 
  1019   003FA6                     TMR3CON         equ	16294	;# 
  1020   003FA7                     T3GCON          equ	16295	;# 
  1021   003FA7                     TMR3GCON        equ	16295	;# 
  1022   003FA8                     T3GATE          equ	16296	;# 
  1023   003FA8                     TMR3GATE        equ	16296	;# 
  1024   003FA9                     T3CLK           equ	16297	;# 
  1025   003FA9                     TMR3CLK         equ	16297	;# 
  1026   003FA9                     PR3             equ	16297	;# 
  1027   003FAA                     T2TMR           equ	16298	;# 
  1028   003FAA                     TMR2            equ	16298	;# 
  1029   003FAB                     T2PR            equ	16299	;# 
  1030   003FAB                     PR2             equ	16299	;# 
  1031   003FAC                     T2CON           equ	16300	;# 
  1032   003FAD                     T2HLT           equ	16301	;# 
  1033   003FAE                     T2CLKCON        equ	16302	;# 
  1034   003FAE                     T2CLK           equ	16302	;# 
  1035   003FAF                     T2RST           equ	16303	;# 
  1036   003FB0                     TMR1            equ	16304	;# 
  1037   003FB0                     TMR1L           equ	16304	;# 
  1038   003FB1                     TMR1H           equ	16305	;# 
  1039   003FB2                     T1CON           equ	16306	;# 
  1040   003FB2                     TMR1CON         equ	16306	;# 
  1041   003FB3                     T1GCON          equ	16307	;# 
  1042   003FB3                     TMR1GCON        equ	16307	;# 
  1043   003FB4                     T1GATE          equ	16308	;# 
  1044   003FB4                     TMR1GATE        equ	16308	;# 
  1045   003FB5                     T1CLK           equ	16309	;# 
  1046   003FB5                     TMR1CLK         equ	16309	;# 
  1047   003FB5                     PR1             equ	16309	;# 
  1048   003FB6                     TMR0L           equ	16310	;# 
  1049   003FB6                     TMR0            equ	16310	;# 
  1050   003FB7                     TMR0H           equ	16311	;# 
  1051   003FB7                     PR0             equ	16311	;# 
  1052   003FB8                     T0CON0          equ	16312	;# 
  1053   003FB9                     T0CON1          equ	16313	;# 
  1054   003FBA                     LATA            equ	16314	;# 
  1055   003FBB                     LATB            equ	16315	;# 
  1056   003FBC                     LATC            equ	16316	;# 
  1057   003FC2                     TRISA           equ	16322	;# 
  1058   003FC3                     TRISB           equ	16323	;# 
  1059   003FC4                     TRISC           equ	16324	;# 
  1060   003FCA                     PORTA           equ	16330	;# 
  1061   003FCB                     PORTB           equ	16331	;# 
  1062   003FCC                     PORTC           equ	16332	;# 
  1063   003FCE                     PORTE           equ	16334	;# 
  1064   003FD2                     INTCON0         equ	16338	;# 
  1065   003FD3                     INTCON1         equ	16339	;# 
  1066   003FD4                     IVTLOCK         equ	16340	;# 
  1067   003FD5                     IVTBASE         equ	16341	;# 
  1068   003FD5                     IVTBASEL        equ	16341	;# 
  1069   003FD6                     IVTBASEH        equ	16342	;# 
  1070   003FD7                     IVTBASEU        equ	16343	;# 
  1071   003FD8                     STATUS          equ	16344	;# 
  1072   003FD9                     FSR2            equ	16345	;# 
  1073   003FD9                     FSR2L           equ	16345	;# 
  1074   003FDA                     FSR2H           equ	16346	;# 
  1075   003FDB                     PLUSW2          equ	16347	;# 
  1076   003FDC                     PREINC2         equ	16348	;# 
  1077   003FDD                     POSTDEC2        equ	16349	;# 
  1078   003FDE                     POSTINC2        equ	16350	;# 
  1079   003FDF                     INDF2           equ	16351	;# 
  1080   003FE0                     BSR             equ	16352	;# 
  1081   003FE1                     FSR1            equ	16353	;# 
  1082   003FE1                     FSR1L           equ	16353	;# 
  1083   003FE2                     FSR1H           equ	16354	;# 
  1084   003FE3                     PLUSW1          equ	16355	;# 
  1085   003FE4                     PREINC1         equ	16356	;# 
  1086   003FE5                     POSTDEC1        equ	16357	;# 
  1087   003FE6                     POSTINC1        equ	16358	;# 
  1088   003FE7                     INDF1           equ	16359	;# 
  1089   003FE8                     WREG            equ	16360	;# 
  1090   003FE9                     FSR0            equ	16361	;# 
  1091   003FE9                     FSR0L           equ	16361	;# 
  1092   003FEA                     FSR0H           equ	16362	;# 
  1093   003FEB                     PLUSW0          equ	16363	;# 
  1094   003FEC                     PREINC0         equ	16364	;# 
  1095   003FED                     POSTDEC0        equ	16365	;# 
  1096   003FEE                     POSTINC0        equ	16366	;# 
  1097   003FEF                     INDF0           equ	16367	;# 
  1098   003FF0                     PCON0           equ	16368	;# 
  1099   003FF1                     PCON1           equ	16369	;# 
  1100   003FF3                     PROD            equ	16371	;# 
  1101   003FF3                     PRODL           equ	16371	;# 
  1102   003FF4                     PRODH           equ	16372	;# 
  1103   003FF5                     TABLAT          equ	16373	;# 
  1104   003FF6                     TBLPTR          equ	16374	;# 
  1105   003FF6                     TBLPTRL         equ	16374	;# 
  1106   003FF7                     TBLPTRH         equ	16375	;# 
  1107   003FF8                     TBLPTRU         equ	16376	;# 
  1108   003FF9                     PCLAT           equ	16377	;# 
  1109   003FF9                     PCL             equ	16377	;# 
  1110   003FFA                     PCLATH          equ	16378	;# 
  1111   003FFB                     PCLATU          equ	16379	;# 
  1112   003FFC                     STKPTR          equ	16380	;# 
  1113   003FFD                     TOS             equ	16381	;# 
  1114   003FFD                     TOSL            equ	16381	;# 
  1115   003FFE                     TOSH            equ	16382	;# 
  1116   003FFF                     TOSU            equ	16383	;# 
  1117   0039A7                     _PIR7bits       set	14759
  1118   003A0A                     _RB2PPS         set	14858
  1119   003A09                     _RB1PPS         set	14857
  1120   003AE6                     _I2C2SDAPPS     set	15078
  1121   003AE5                     _I2C2SCLPPS     set	15077
  1122   003A16                     _RC6PPS         set	14870
  1123   003AE7                     _U1RXPPS        set	15079
  1124   003A0E                     _RB6PPS         set	14862
  1125   003AEA                     _U2RXPPS        set	15082
  1126   003A52                     _ODCONB         set	14930
  1127   003A60                     _ANSELC         set	14944
  1128   003A50                     _ANSELB         set	14928
  1129   003A40                     _ANSELA         set	14912
  1130   003DDD                     _U2BRG          set	15837
  1131   003DD0                     _U2RXB          set	15824
  1132   003DDF                     _U2FIFObits     set	15839
  1133   003DDA                     _U2CON0bits     set	15834
  1134   003D65                     _I2C2CLK        set	15717
  1135   003D5D                     _I2C2CON0       set	15709
  1136   003DDC                     _U2CON2         set	15836
  1137   003DDB                     _U2CON1         set	15835
  1138   003DDA                     _U2CON0         set	15834
  1139   003DD2                     _U2TXB          set	15826
  1140   003D54                     _I2C2RXB        set	15700
  1141   003D5E                     _I2C2CON1bits   set	15710
  1142   003D62                     _I2C2STAT1bits  set	15714
  1143   003D63                     _I2C2PIRbits    set	15715
  1144   003D5D                     _I2C2CON0bits   set	15709
  1145   003D55                     _I2C2TXB        set	15701
  1146   003D58                     _I2C2ADB1       set	15704
  1147   003D56                     _I2C2CNT        set	15702
  1148   003FCC                     _PORTCbits      set	16332
  1149   003FCC                     _PORTC          set	16332
  1150   003FCB                     _PORTB          set	16331
  1151   003FC4                     _TRISC          set	16324
  1152   003FC3                     _TRISB          set	16323
  1153   003FC2                     _TRISA          set	16322
  1154   003FCA                     _PORTAbits      set	16330
  1155                           
  1156                           	psect	smallconst
  1157   001000                     __psmallconst:
  1158                           	callstack 0
  1159   001000  00                 	db	0
  1160   001001                     STR_1:
  1161   001001  42                 	db	66	;'B'
  1162   001002  54                 	db	84	;'T'
  1163   001003  2B                 	db	43
  1164   001004  52                 	db	82	;'R'
  1165   001005  54                 	db	84	;'T'
  1166   001006  43                 	db	67	;'C'
  1167   001007  20                 	db	32
  1168   001008  52                 	db	82	;'R'
  1169   001009  65                 	db	101	;'e'
  1170   00100A  61                 	db	97	;'a'
  1171   00100B  64                 	db	100	;'d'
  1172   00100C  79                 	db	121	;'y'
  1173   00100D  00                 	db	0
  1174   00100E  00                 	db	0	; dummy byte at the end
  1175   001000                     __smallconst    set	__psmallconst
  1176   001000                     __mediumconst   set	__psmallconst
  1177   000002                     __activetblptr  equ	2
  1178                           
  1179                           ; #config settings
  1180                           
  1181                           	psect	cinit
  1182   00178C                     __pcinit:
  1183                           	callstack 0
  1184   00178C                     start_initialization:
  1185                           	callstack 0
  1186   00178C                     __initialization:
  1187                           	callstack 0
  1188   00178C                     end_of_initialization:
  1189                           	callstack 0
  1190   00178C                     __end_of__initialization:
  1191                           	callstack 0
  1192   00178C  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1193   00178E  6EF8               	movwf	tblptru,c
  1194   001790  0100               	movlb	0
  1195   001792  EF08  F008         	goto	_main	;jump to C main() function
  1196                           
  1197                           	psect	cstackCOMRAM
  1198   000001                     __pcstackCOMRAM:
  1199                           	callstack 0
  1200   000001                     ?___awdiv:
  1201                           	callstack 0
  1202   000001                     ?___awmod:
  1203                           	callstack 0
  1204   000001                     Lcd_Port@a:
  1205                           	callstack 0
  1206   000001                     bt_send_str@s:
  1207                           	callstack 0
  1208   000001                     rtc_read@reg_adress:
  1209                           	callstack 0
  1210   000001                     ___awdiv@dividend:
  1211                           	callstack 0
  1212   000001                     ___awmod@dividend:
  1213                           	callstack 0
  1214   000001                     
  1215                           ; 1 bytes @ 0x0
  1216   000001                     	ds	1
  1217   000002                     Lcd_Write_Char@temp:
  1218                           	callstack 0
  1219   000002                     ??_Lcd_Cmd:
  1220   000002                     
  1221                           ; 1 bytes @ 0x1
  1222   000002                     	ds	1
  1223   000003                     Lcd_Cmd@a:
  1224                           	callstack 0
  1225   000003                     Lcd_Write_Char@y:
  1226                           	callstack 0
  1227   000003                     rtc_read@result:
  1228                           	callstack 0
  1229   000003                     ___awdiv@divisor:
  1230                           	callstack 0
  1231   000003                     ___awmod@divisor:
  1232                           	callstack 0
  1233   000003                     
  1234                           ; 1 bytes @ 0x2
  1235   000003                     	ds	1
  1236   000004                     Lcd_Set_Cursor@b:
  1237                           	callstack 0
  1238   000004                     Lcd_Write_Char@a:
  1239                           	callstack 0
  1240   000004                     ??_Lcd_Init:
  1241   000004                     ??_rtc_read_dec:
  1242                           
  1243                           ; 1 bytes @ 0x3
  1244   000004                     	ds	1
  1245   000005                     Lcd_Set_Cursor@a:
  1246                           	callstack 0
  1247   000005                     rtc_read_dec@reg_address:
  1248                           	callstack 0
  1249   000005                     ___awdiv@counter:
  1250                           	callstack 0
  1251   000005                     ___awmod@counter:
  1252                           	callstack 0
  1253   000005                     Lcd_Write_String@a:
  1254                           	callstack 0
  1255   000005                     
  1256                           ; 1 bytes @ 0x4
  1257   000005                     	ds	1
  1258   000006                     Lcd_Set_Cursor@z:
  1259                           	callstack 0
  1260   000006                     rtc_read_dec@bcd:
  1261                           	callstack 0
  1262   000006                     ___awdiv@sign:
  1263                           	callstack 0
  1264   000006                     ___awmod@sign:
  1265                           	callstack 0
  1266                           
  1267                           ; 1 bytes @ 0x5
  1268   000006                     	ds	1
  1269   000007                     Lcd_Set_Cursor@y:
  1270                           	callstack 0
  1271   000007                     ___awdiv@quotient:
  1272                           	callstack 0
  1273   000007                     ??_Lcd_Write_String:
  1274                           
  1275                           ; 1 bytes @ 0x6
  1276   000007                     	ds	1
  1277   000008                     Lcd_Set_Cursor@temp:
  1278                           	callstack 0
  1279                           
  1280                           ; 1 bytes @ 0x7
  1281   000008                     	ds	1
  1282   000009                     format_time@buffer:
  1283                           	callstack 0
  1284   000009                     rtc_write@value:
  1285                           	callstack 0
  1286   000009                     Lcd_Write_String@i:
  1287                           	callstack 0
  1288                           
  1289                           ; 2 bytes @ 0x8
  1290   000009                     	ds	1
  1291   00000A                     format_time@hours:
  1292                           	callstack 0
  1293   00000A                     rtc_write@reg_address:
  1294                           	callstack 0
  1295   00000A                     
  1296                           ; 1 bytes @ 0x9
  1297   00000A                     	ds	1
  1298   00000B                     format_time@minutes:
  1299                           	callstack 0
  1300   00000B                     rtc_write_dec@value_dec:
  1301                           	callstack 0
  1302                           
  1303                           ; 1 bytes @ 0xA
  1304   00000B                     	ds	1
  1305   00000C                     format_time@seconds:
  1306                           	callstack 0
  1307   00000C                     ??_rtc_write_dec:
  1308                           
  1309                           ; 1 bytes @ 0xB
  1310   00000C                     	ds	1
  1311   00000D                     
  1312                           ; 1 bytes @ 0xC
  1313   00000D                     	ds	1
  1314   00000E                     rtc_write_dec@reg_address:
  1315                           	callstack 0
  1316                           
  1317                           ; 1 bytes @ 0xD
  1318   00000E                     	ds	1
  1319   00000F                     ??_main:
  1320                           
  1321                           ; 1 bytes @ 0xE
  1322   00000F                     	ds	2
  1323   000011                     main@time_str:
  1324                           	callstack 0
  1325                           
  1326                           ; 9 bytes @ 0x10
  1327   000011                     	ds	9
  1328   00001A                     main@s:
  1329                           	callstack 0
  1330                           
  1331                           ; 1 bytes @ 0x19
  1332   00001A                     	ds	1
  1333   00001B                     main@m:
  1334                           	callstack 0
  1335                           
  1336                           ; 1 bytes @ 0x1A
  1337   00001B                     	ds	1
  1338   00001C                     main@h:
  1339                           	callstack 0
  1340                           
  1341                           ; 1 bytes @ 0x1B
  1342   00001C                     	ds	1
  1343                           
  1344 ;;
  1345 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1346 ;;
  1347 ;; *************** function _main *****************
  1348 ;; Defined at:
  1349 ;;		line 157 in file "EXO5BLU26K83.c"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;		None
  1352 ;; Auto vars:     Size  Location     Type
  1353 ;;  time_str        9   16[COMRAM] unsigned char [9]
  1354 ;;  h               1   27[COMRAM] unsigned char 
  1355 ;;  m               1   26[COMRAM] unsigned char 
  1356 ;;  s               1   25[COMRAM] unsigned char 
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  1    wreg      void 
  1359 ;; Registers used:
  1360 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1367 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1368 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1369 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1370 ;;Total ram usage:       14 bytes
  1371 ;; Hardware stack levels required when called: 3
  1372 ;; This function calls:
  1373 ;;		_Lcd_Clear
  1374 ;;		_Lcd_Init
  1375 ;;		_Lcd_Set_Cursor
  1376 ;;		_Lcd_Write_String
  1377 ;;		_bt_send_str
  1378 ;;		_format_time
  1379 ;;		_rtc_read_dec
  1380 ;;		_rtc_write_dec
  1381 ;; This function is called by:
  1382 ;;		Startup code after reset
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386                           	psect	text0
  1387   001010                     __ptext0:
  1388                           	callstack 0
  1389   001010                     _main:
  1390                           	callstack 28
  1391   001010                     
  1392                           ;EXO5BLU26K83.c: 158:     TRISA = 0b11000000;
  1393   001010  0EC0               	movlw	192
  1394   001012  6EC2               	movwf	194,c	;volatile
  1395                           
  1396                           ;EXO5BLU26K83.c: 159:     TRISB = 0b10000000;
  1397   001014  0E80               	movlw	128
  1398   001016  6EC3               	movwf	195,c	;volatile
  1399                           
  1400                           ;EXO5BLU26K83.c: 160:     TRISC = 0b10000011;
  1401   001018  0E83               	movlw	131
  1402   00101A  6EC4               	movwf	196,c	;volatile
  1403   00101C                     
  1404                           ;EXO5BLU26K83.c: 161:     ANSELA = 0;
  1405   00101C  013A               	movlb	58	; () banked
  1406   00101E  6B40               	clrf	64,b	;volatile
  1407   001020                     
  1408                           ; BSR set to: 58
  1409                           ;EXO5BLU26K83.c: 162:     ANSELB = 0;
  1410   001020  6B50               	clrf	80,b	;volatile
  1411   001022                     
  1412                           ; BSR set to: 58
  1413                           ;EXO5BLU26K83.c: 163:     ANSELC = 0;
  1414   001022  6B60               	clrf	96,b	;volatile
  1415                           
  1416                           ;EXO5BLU26K83.c: 164:     ODCONB = 0b00000110;
  1417   001024  0E06               	movlw	6
  1418   001026  6F52               	movwf	82,b	;volatile
  1419   001028                     
  1420                           ; BSR set to: 58
  1421                           ;EXO5BLU26K83.c: 165:     PORTB = 0;
  1422   001028  6ACB               	clrf	203,c	;volatile
  1423   00102A                     
  1424                           ; BSR set to: 58
  1425                           ;EXO5BLU26K83.c: 166:     PORTC = 0;
  1426   00102A  6ACC               	clrf	204,c	;volatile
  1427                           
  1428                           ;EXO5BLU26K83.c: 168:     U2RXPPS = 0b00001111;
  1429   00102C  0E0F               	movlw	15
  1430   00102E  6FEA               	movwf	234,b	;volatile
  1431                           
  1432                           ;EXO5BLU26K83.c: 169:     RB6PPS = 0b00010110;
  1433   001030  0E16               	movlw	22
  1434   001032  6F0E               	movwf	14,b	;volatile
  1435                           
  1436                           ;EXO5BLU26K83.c: 172:     U1RXPPS = 0b00010111;
  1437   001034  0E17               	movlw	23
  1438   001036  6FE7               	movwf	231,b	;volatile
  1439                           
  1440                           ;EXO5BLU26K83.c: 173:     RC6PPS = 0b00010011;
  1441   001038  0E13               	movlw	19
  1442   00103A  6F16               	movwf	22,b	;volatile
  1443                           
  1444                           ;EXO5BLU26K83.c: 174:     I2C2SCLPPS = 0b00001001;
  1445   00103C  0E09               	movlw	9
  1446   00103E  6FE5               	movwf	229,b	;volatile
  1447                           
  1448                           ;EXO5BLU26K83.c: 175:     I2C2SDAPPS = 0b00001010;
  1449   001040  0E0A               	movlw	10
  1450   001042  6FE6               	movwf	230,b	;volatile
  1451                           
  1452                           ;EXO5BLU26K83.c: 176:     RB1PPS = 0b00100011;
  1453   001044  0E23               	movlw	35
  1454   001046  6F09               	movwf	9,b	;volatile
  1455                           
  1456                           ;EXO5BLU26K83.c: 177:     RB2PPS = 0b00100100;
  1457   001048  0E24               	movlw	36
  1458   00104A  6F0A               	movwf	10,b	;volatile
  1459                           
  1460                           ;EXO5BLU26K83.c: 179:     U2CON0 = 0b10100000;
  1461   00104C  0EA0               	movlw	160
  1462   00104E  013D               	movlb	61	; () banked
  1463   001050  6FDA               	movwf	218,b	;volatile
  1464                           
  1465                           ;EXO5BLU26K83.c: 180:     U2CON1 = 0b10000000;
  1466   001052  0E80               	movlw	128
  1467   001054  6FDB               	movwf	219,b	;volatile
  1468   001056                     
  1469                           ; BSR set to: 61
  1470                           ;EXO5BLU26K83.c: 181:     U2CON2 = 0;
  1471   001056  6BDC               	clrf	220,b	;volatile
  1472                           
  1473                           ;EXO5BLU26K83.c: 182:     U2BRG = 1666;
  1474   001058  0E06               	movlw	6
  1475   00105A  6FDE               	movwf	222,b	;volatile
  1476   00105C  0E82               	movlw	130
  1477   00105E  6FDD               	movwf	221,b	;volatile
  1478                           
  1479                           ;EXO5BLU26K83.c: 186:     I2C2CON0 = 0b10000100;
  1480   001060  0E84               	movlw	132
  1481   001062  6F5D               	movwf	93,b	;volatile
  1482                           
  1483                           ;EXO5BLU26K83.c: 187:     I2C2CLK = 0b00000011;
  1484   001064  0E03               	movlw	3
  1485   001066  6F65               	movwf	101,b	;volatile
  1486   001068                     
  1487                           ; BSR set to: 61
  1488                           ;EXO5BLU26K83.c: 189:     Lcd_Init();
  1489   001068  EC6D  F00A         	call	_Lcd_Init	;wreg free
  1490   00106C                     
  1491                           ;EXO5BLU26K83.c: 190:     Lcd_Clear();
  1492   00106C  ECBF  F00B         	call	_Lcd_Clear	;wreg free
  1493   001070                     
  1494                           ;EXO5BLU26K83.c: 192:     U2CON0bits.RXEN = 1;
  1495   001070  013D               	movlb	61	; () banked
  1496   001072  89DA               	bsf	218,4,b	;volatile
  1497   001074                     
  1498                           ; BSR set to: 61
  1499                           ;EXO5BLU26K83.c: 194:     Lcd_Clear();
  1500   001074  ECBF  F00B         	call	_Lcd_Clear	;wreg free
  1501   001078                     
  1502                           ;EXO5BLU26K83.c: 195:     Lcd_Set_Cursor(1, 1);
  1503   001078  0E01               	movlw	1
  1504   00107A  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1505   00107C  0E01               	movlw	1
  1506   00107E  ECDE  F00A         	call	_Lcd_Set_Cursor
  1507   001082                     
  1508                           ;EXO5BLU26K83.c: 196:     Lcd_Write_String("BT+RTC Ready");
  1509   001082  0E01               	movlw	low STR_1
  1510   001084  6E05               	movwf	Lcd_Write_String@a^0,c
  1511   001086  5005               	movf	Lcd_Write_String@a^0,w,c
  1512   001088  A4D8               	btfss	status,2,c
  1513   00108A  0E10               	movlw	high __smallconst
  1514   00108C  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1515   00108E  ECE3  F009         	call	_Lcd_Write_String	;wreg free
  1516   001092                     
  1517                           ;EXO5BLU26K83.c: 197:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1518   001092  0E29               	movlw	41
  1519   001094  6E10               	movwf	(??_main+1)^0,c
  1520   001096  0E96               	movlw	150
  1521   001098  6E0F               	movwf	??_main^0,c
  1522   00109A  0E7F               	movlw	127
  1523   00109C                     u757:
  1524   00109C  2EE8               	decfsz	wreg,f,c
  1525   00109E  D7FE               	bra	u757
  1526   0010A0  2E0F               	decfsz	??_main^0,f,c
  1527   0010A2  D7FC               	bra	u757
  1528   0010A4  2E10               	decfsz	(??_main+1)^0,f,c
  1529   0010A6  D7FA               	bra	u757
  1530   0010A8  0000               	nop	
  1531   0010AA                     
  1532                           ;EXO5BLU26K83.c: 199:     rtc_write_dec(0x00, 0);
  1533   0010AA  0E00               	movlw	0
  1534   0010AC  6E0B               	movwf	rtc_write_dec@value_dec^0,c
  1535   0010AE  0E00               	movlw	0
  1536   0010B0  EC65  F00B         	call	_rtc_write_dec
  1537   0010B4                     
  1538                           ;EXO5BLU26K83.c: 200:     rtc_write_dec(0x01, 30);
  1539   0010B4  0E1E               	movlw	30
  1540   0010B6  6E0B               	movwf	rtc_write_dec@value_dec^0,c
  1541   0010B8  0E01               	movlw	1
  1542   0010BA  EC65  F00B         	call	_rtc_write_dec
  1543   0010BE                     
  1544                           ;EXO5BLU26K83.c: 201:     rtc_write_dec(0x02, 14);
  1545   0010BE  0E0E               	movlw	14
  1546   0010C0  6E0B               	movwf	rtc_write_dec@value_dec^0,c
  1547   0010C2  0E02               	movlw	2
  1548   0010C4  EC65  F00B         	call	_rtc_write_dec
  1549   0010C8                     l1467:
  1550                           
  1551                           ;EXO5BLU26K83.c: 204:     {;EXO5BLU26K83.c: 206:         if (U2FIFObits.RXBE == 0) {
  1552   0010C8  013D               	movlb	61	; () banked
  1553   0010CA  B3DF               	btfsc	223,1,b	;volatile
  1554   0010CC  EF6A  F008         	goto	u701
  1555   0010D0  EF6C  F008         	goto	u700
  1556   0010D4                     u701:
  1557   0010D4  EF64  F008         	goto	l1467
  1558   0010D8                     u700:
  1559   0010D8                     
  1560                           ; BSR set to: 61
  1561                           ;EXO5BLU26K83.c: 207:             if (U2RXB == 72 || U2RXB == 104) {
  1562   0010D8  0E48               	movlw	72
  1563   0010DA  19D0               	xorwf	208,w,b	;volatile
  1564   0010DC  B4D8               	btfsc	status,2,c
  1565   0010DE  EF73  F008         	goto	u711
  1566   0010E2  EF75  F008         	goto	u710
  1567   0010E6                     u711:
  1568   0010E6  EF7E  F008         	goto	l1473
  1569   0010EA                     u710:
  1570   0010EA                     
  1571                           ; BSR set to: 61
  1572   0010EA  0E68               	movlw	104
  1573   0010EC  19D0               	xorwf	208,w,b	;volatile
  1574   0010EE  A4D8               	btfss	status,2,c
  1575   0010F0  EF7C  F008         	goto	u721
  1576   0010F4  EF7E  F008         	goto	u720
  1577   0010F8                     u721:
  1578   0010F8  EF64  F008         	goto	l1467
  1579   0010FC                     u720:
  1580   0010FC                     l1473:
  1581                           
  1582                           ; BSR set to: 61
  1583                           ;EXO5BLU26K83.c: 208:                 PORTCbits.RC2 = !PORTCbits.RC2;
  1584   0010FC  A4CC               	btfss	204,2,c	;volatile
  1585   0010FE  EF83  F008         	goto	u731
  1586   001102  EF87  F008         	goto	u730
  1587   001106                     u731:
  1588   001106  6A0F               	clrf	??_main^0,c
  1589   001108  2A0F               	incf	??_main^0,f,c
  1590   00110A  EF88  F008         	goto	u748
  1591   00110E                     u730:
  1592   00110E  6A0F               	clrf	??_main^0,c
  1593   001110                     u748:
  1594   001110  460F               	rlncf	??_main^0,f,c
  1595   001112  460F               	rlncf	??_main^0,f,c
  1596   001114  50CC               	movf	204,w,c	;volatile
  1597   001116  180F               	xorwf	??_main^0,w,c
  1598   001118  0BFB               	andlw	-5
  1599   00111A  180F               	xorwf	??_main^0,w,c
  1600   00111C  6ECC               	movwf	204,c	;volatile
  1601   00111E                     
  1602                           ;EXO5BLU26K83.c: 210:                 uint8_t s = rtc_read_dec(0x00);
  1603   00111E  0E00               	movlw	0
  1604   001120  EC9E  F00B         	call	_rtc_read_dec
  1605   001124  6E1A               	movwf	main@s^0,c
  1606   001126                     
  1607                           ;EXO5BLU26K83.c: 211:                 uint8_t m = rtc_read_dec(0x01);
  1608   001126  0E01               	movlw	1
  1609   001128  EC9E  F00B         	call	_rtc_read_dec
  1610   00112C  6E1B               	movwf	main@m^0,c
  1611   00112E                     
  1612                           ;EXO5BLU26K83.c: 212:                 uint8_t h = rtc_read_dec(0x02);
  1613   00112E  0E02               	movlw	2
  1614   001130  EC9E  F00B         	call	_rtc_read_dec
  1615   001134  6E1C               	movwf	main@h^0,c
  1616   001136                     
  1617                           ;EXO5BLU26K83.c: 214:                 char time_str[9];;EXO5BLU26K83.c: 215:            
      +                               format_time(time_str, h, m, s);
  1618   001136  0E11               	movlw	low main@time_str
  1619   001138  6E09               	movwf	format_time@buffer^0,c
  1620   00113A  C01C  F00A         	movff	main@h,format_time@hours
  1621   00113E  C01B  F00B         	movff	main@m,format_time@minutes
  1622   001142  C01A  F00C         	movff	main@s,format_time@seconds
  1623   001146  ECB9  F008         	call	_format_time	;wreg free
  1624   00114A                     
  1625                           ;EXO5BLU26K83.c: 217:                 Lcd_Clear();
  1626   00114A  ECBF  F00B         	call	_Lcd_Clear	;wreg free
  1627   00114E                     
  1628                           ;EXO5BLU26K83.c: 218:                 Lcd_Set_Cursor(1, 1);
  1629   00114E  0E01               	movlw	1
  1630   001150  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1631   001152  0E01               	movlw	1
  1632   001154  ECDE  F00A         	call	_Lcd_Set_Cursor
  1633   001158                     
  1634                           ;EXO5BLU26K83.c: 219:                 Lcd_Write_String(time_str);
  1635   001158  0E11               	movlw	low main@time_str
  1636   00115A  6E05               	movwf	Lcd_Write_String@a^0,c
  1637   00115C  6A06               	clrf	(Lcd_Write_String@a+1)^0,c
  1638   00115E  ECE3  F009         	call	_Lcd_Write_String	;wreg free
  1639   001162                     
  1640                           ;EXO5BLU26K83.c: 221:                 bt_send_str(time_str);
  1641   001162  0E11               	movlw	low main@time_str
  1642   001164  6E01               	movwf	bt_send_str@s^0,c
  1643   001166  ECAB  F00A         	call	_bt_send_str	;wreg free
  1644   00116A  EF64  F008         	goto	l1467
  1645   00116E  EFFE  F07F         	goto	start
  1646   001172                     __end_of_main:
  1647                           	callstack 0
  1648                           
  1649 ;; *************** function _rtc_write_dec *****************
  1650 ;; Defined at:
  1651 ;;		line 148 in file "EXO5BLU26K83.c"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;  reg_address     1    wreg     unsigned char 
  1654 ;;  value_dec       1   10[COMRAM] unsigned char 
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;  reg_address     1   13[COMRAM] unsigned char 
  1657 ;; Return value:  Size  Location     Type
  1658 ;;                  1    wreg      void 
  1659 ;; Registers used:
  1660 ;;		wreg, status,2, status,0, cstack
  1661 ;; Tracked objects:
  1662 ;;		On entry : 0/0
  1663 ;;		On exit  : 0/0
  1664 ;;		Unchanged: 0/0
  1665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1666 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1667 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1668 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1669 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1670 ;;Total ram usage:        4 bytes
  1671 ;; Hardware stack levels used: 1
  1672 ;; Hardware stack levels required when called: 1
  1673 ;; This function calls:
  1674 ;;		___awdiv
  1675 ;;		___awmod
  1676 ;;		_rtc_write
  1677 ;; This function is called by:
  1678 ;;		_main
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           	psect	text1
  1683   0016CA                     __ptext1:
  1684                           	callstack 0
  1685   0016CA                     _rtc_write_dec:
  1686                           	callstack 29
  1687                           
  1688                           ;incstack = 0
  1689                           ;rtc_write_dec@reg_address stored from wreg
  1690   0016CA  6E0E               	movwf	rtc_write_dec@reg_address^0,c
  1691   0016CC                     
  1692                           ;EXO5BLU26K83.c: 149:     rtc_write(reg_address, (uint8_t)(((value_dec / 10) << 4) | (va
      +                          lue_dec % 10)));
  1693   0016CC  C00B  F001         	movff	rtc_write_dec@value_dec,___awmod@dividend
  1694   0016D0  6A02               	clrf	(___awmod@dividend+1)^0,c
  1695   0016D2  6A04               	clrf	(___awmod@divisor+1)^0,c
  1696   0016D4  0E0A               	movlw	10
  1697   0016D6  6E03               	movwf	___awmod@divisor^0,c
  1698   0016D8  EC8C  F009         	call	___awmod	;wreg free
  1699   0016DC  C001  F00C         	movff	?___awmod,??_rtc_write_dec
  1700   0016E0  C002  F00D         	movff	?___awmod+1,??_rtc_write_dec+1
  1701   0016E4  C00B  F001         	movff	rtc_write_dec@value_dec,___awdiv@dividend
  1702   0016E8  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1703   0016EA  6A04               	clrf	(___awdiv@divisor+1)^0,c
  1704   0016EC  0E0A               	movlw	10
  1705   0016EE  6E03               	movwf	___awdiv@divisor^0,c
  1706   0016F0  EC2C  F009         	call	___awdiv	;wreg free
  1707   0016F4  3801               	swapf	?___awdiv^0,w,c
  1708   0016F6  0BF0               	andlw	240
  1709   0016F8  100C               	iorwf	??_rtc_write_dec^0,w,c
  1710   0016FA  6E09               	movwf	rtc_write@value^0,c
  1711   0016FC  500E               	movf	rtc_write_dec@reg_address^0,w,c
  1712   0016FE  EC3F  F00B         	call	_rtc_write
  1713   001702  0012               	return		;funcret
  1714   001704                     __end_of_rtc_write_dec:
  1715                           	callstack 0
  1716                           
  1717 ;; *************** function _rtc_write *****************
  1718 ;; Defined at:
  1719 ;;		line 134 in file "EXO5BLU26K83.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;  reg_address     1    wreg     unsigned char 
  1722 ;;  value           1    8[COMRAM] unsigned char 
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;  reg_address     1    9[COMRAM] unsigned char 
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1    wreg      void 
  1727 ;; Registers used:
  1728 ;;		wreg, status,2
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1734 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1735 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1737 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1738 ;;Total ram usage:        2 bytes
  1739 ;; Hardware stack levels used: 1
  1740 ;; This function calls:
  1741 ;;		Nothing
  1742 ;; This function is called by:
  1743 ;;		_rtc_write_dec
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           	psect	text2
  1748   00167E                     __ptext2:
  1749                           	callstack 0
  1750   00167E                     _rtc_write:
  1751                           	callstack 29
  1752                           
  1753                           ;incstack = 0
  1754                           ;rtc_write@reg_address stored from wreg
  1755   00167E  6E0A               	movwf	rtc_write@reg_address^0,c
  1756   001680                     
  1757                           ;EXO5BLU26K83.c: 135:     I2C2CON0bits.RSEN = 0;
  1758   001680  013D               	movlb	61	; () banked
  1759   001682  9D5D               	bcf	93,6,b	;volatile
  1760   001684                     
  1761                           ; BSR set to: 61
  1762                           ;EXO5BLU26K83.c: 136:     I2C2CNT = 2;
  1763   001684  0E02               	movlw	2
  1764   001686  6F56               	movwf	86,b	;volatile
  1765                           
  1766                           ;EXO5BLU26K83.c: 137:     I2C2ADB1 = 0b11010000;
  1767   001688  0ED0               	movlw	208
  1768   00168A  6F58               	movwf	88,b	;volatile
  1769   00168C                     
  1770                           ; BSR set to: 61
  1771                           ;EXO5BLU26K83.c: 138:     I2C2TXB = reg_address;
  1772   00168C  0060  F02B  FD55   	movff	rtc_write@reg_address,15701	;volatile
  1773   001692                     
  1774                           ; BSR set to: 61
  1775                           ;EXO5BLU26K83.c: 139:     I2C2CON0bits.S = 1;
  1776   001692  8B5D               	bsf	93,5,b	;volatile
  1777   001694                     l164:
  1778                           
  1779                           ; BSR set to: 61
  1780   001694  A163               	btfss	99,0,b	;volatile
  1781   001696  EF4F  F00B         	goto	u461
  1782   00169A  EF51  F00B         	goto	u460
  1783   00169E                     u461:
  1784   00169E  EF4A  F00B         	goto	l164
  1785   0016A2                     u460:
  1786   0016A2                     
  1787                           ; BSR set to: 61
  1788                           ;EXO5BLU26K83.c: 141:     I2C2PIRbits.SCIF = 0;
  1789   0016A2  9163               	bcf	99,0,b	;volatile
  1790   0016A4                     l167:
  1791                           
  1792                           ; BSR set to: 61
  1793   0016A4  AB62               	btfss	98,5,b	;volatile
  1794   0016A6  EF57  F00B         	goto	u471
  1795   0016AA  EF59  F00B         	goto	u470
  1796   0016AE                     u471:
  1797   0016AE  EF52  F00B         	goto	l167
  1798   0016B2                     u470:
  1799   0016B2                     
  1800                           ; BSR set to: 61
  1801                           ;EXO5BLU26K83.c: 143:     I2C2TXB = value;
  1802   0016B2  0060  F027  FD55   	movff	rtc_write@value,15701	;volatile
  1803   0016B8                     l170:
  1804                           
  1805                           ; BSR set to: 61
  1806   0016B8  A563               	btfss	99,2,b	;volatile
  1807   0016BA  EF61  F00B         	goto	u481
  1808   0016BE  EF63  F00B         	goto	u480
  1809   0016C2                     u481:
  1810   0016C2  EF5C  F00B         	goto	l170
  1811   0016C6                     u480:
  1812   0016C6                     
  1813                           ; BSR set to: 61
  1814                           ;EXO5BLU26K83.c: 145:     I2C2PIRbits.PCIF = 0;
  1815   0016C6  9563               	bcf	99,2,b	;volatile
  1816   0016C8                     
  1817                           ; BSR set to: 61
  1818   0016C8  0012               	return		;funcret
  1819   0016CA                     __end_of_rtc_write:
  1820                           	callstack 0
  1821                           
  1822 ;; *************** function _rtc_read_dec *****************
  1823 ;; Defined at:
  1824 ;;		line 152 in file "EXO5BLU26K83.c"
  1825 ;; Parameters:    Size  Location     Type
  1826 ;;  reg_address     1    wreg     unsigned char 
  1827 ;; Auto vars:     Size  Location     Type
  1828 ;;  reg_address     1    4[COMRAM] unsigned char 
  1829 ;;  bcd             1    5[COMRAM] unsigned char 
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  1    wreg      unsigned char 
  1832 ;; Registers used:
  1833 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1840 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1841 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1842 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1843 ;;Total ram usage:        3 bytes
  1844 ;; Hardware stack levels used: 1
  1845 ;; Hardware stack levels required when called: 1
  1846 ;; This function calls:
  1847 ;;		_rtc_read
  1848 ;; This function is called by:
  1849 ;;		_main
  1850 ;; This function uses a non-reentrant model
  1851 ;;
  1852                           
  1853                           	psect	text3
  1854   00173C                     __ptext3:
  1855                           	callstack 0
  1856   00173C                     _rtc_read_dec:
  1857                           	callstack 29
  1858                           
  1859                           ; BSR set to: 61
  1860                           ;incstack = 0
  1861                           ;rtc_read_dec@reg_address stored from wreg
  1862   00173C  6E05               	movwf	rtc_read_dec@reg_address^0,c
  1863   00173E                     
  1864                           ;EXO5BLU26K83.c: 153:     uint8_t bcd = rtc_read(reg_address);
  1865   00173E  C005  F001         	movff	rtc_read_dec@reg_address,rtc_read@reg_adress
  1866   001742  6A02               	clrf	(rtc_read@reg_adress+1)^0,c
  1867   001744  EC2B  F00A         	call	_rtc_read	;wreg free
  1868   001748  6E06               	movwf	rtc_read_dec@bcd^0,c
  1869   00174A                     
  1870                           ;EXO5BLU26K83.c: 154:     return (uint8_t)(((bcd >> 4) * 10) + (bcd & 0x0F));
  1871   00174A  C006  F004         	movff	rtc_read_dec@bcd,??_rtc_read_dec
  1872   00174E  0E0F               	movlw	15
  1873   001750  1604               	andwf	??_rtc_read_dec^0,f,c
  1874   001752  3806               	swapf	rtc_read_dec@bcd^0,w,c
  1875   001754  0B0F               	andlw	15
  1876   001756  0D0A               	mullw	10
  1877   001758  50F3               	movf	243,w,c
  1878   00175A  2404               	addwf	??_rtc_read_dec^0,w,c
  1879   00175C  0012               	return		;funcret
  1880   00175E                     __end_of_rtc_read_dec:
  1881                           	callstack 0
  1882                           
  1883 ;; *************** function _rtc_read *****************
  1884 ;; Defined at:
  1885 ;;		line 98 in file "EXO5BLU26K83.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;  reg_adress      2    0[COMRAM] int 
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;  result          1    2[COMRAM] unsigned char 
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  1    wreg      unsigned char 
  1892 ;; Registers used:
  1893 ;;		wreg, status,2
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1899 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1900 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1902 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1903 ;;Total ram usage:        3 bytes
  1904 ;; Hardware stack levels used: 1
  1905 ;; This function calls:
  1906 ;;		Nothing
  1907 ;; This function is called by:
  1908 ;;		_rtc_read_dec
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           	psect	text4
  1913   001456                     __ptext4:
  1914                           	callstack 0
  1915   001456                     _rtc_read:
  1916                           	callstack 29
  1917   001456                     
  1918                           ;EXO5BLU26K83.c: 99:     I2C2CNT = 1;
  1919   001456  0E01               	movlw	1
  1920   001458  013D               	movlb	61	; () banked
  1921   00145A  6F56               	movwf	86,b	;volatile
  1922                           
  1923                           ;EXO5BLU26K83.c: 100:     I2C2ADB1 = 0b11010000;
  1924   00145C  0ED0               	movlw	208
  1925   00145E  6F58               	movwf	88,b	;volatile
  1926   001460                     
  1927                           ; BSR set to: 61
  1928                           ;EXO5BLU26K83.c: 101:     I2C2TXB = reg_adress;
  1929   001460  0060  F007  FD55   	movff	rtc_read@reg_adress,15701	;volatile
  1930   001466                     
  1931                           ; BSR set to: 61
  1932                           ;EXO5BLU26K83.c: 102:     I2C2CON0bits.S = 1;
  1933   001466  8B5D               	bsf	93,5,b	;volatile
  1934   001468                     l128:
  1935                           
  1936                           ; BSR set to: 61
  1937   001468  A163               	btfss	99,0,b	;volatile
  1938   00146A  EF39  F00A         	goto	u401
  1939   00146E  EF3B  F00A         	goto	u400
  1940   001472                     u401:
  1941   001472  EF34  F00A         	goto	l128
  1942   001476                     u400:
  1943   001476                     
  1944                           ; BSR set to: 61
  1945                           ;EXO5BLU26K83.c: 104:     I2C2PIRbits.SCIF = 0;
  1946   001476  9163               	bcf	99,0,b	;volatile
  1947   001478                     l131:
  1948                           
  1949                           ; BSR set to: 61
  1950   001478  AB62               	btfss	98,5,b	;volatile
  1951   00147A  EF41  F00A         	goto	u411
  1952   00147E  EF43  F00A         	goto	u410
  1953   001482                     u411:
  1954   001482  EF3C  F00A         	goto	l131
  1955   001486                     u410:
  1956   001486                     l134:
  1957                           
  1958                           ; BSR set to: 61
  1959   001486  A563               	btfss	99,2,b	;volatile
  1960   001488  EF48  F00A         	goto	u421
  1961   00148C  EF4A  F00A         	goto	u420
  1962   001490                     u421:
  1963   001490  EF43  F00A         	goto	l134
  1964   001494                     u420:
  1965   001494                     
  1966                           ; BSR set to: 61
  1967                           ;EXO5BLU26K83.c: 107:     I2C2PIRbits.PCIF = 0;
  1968   001494  9563               	bcf	99,2,b	;volatile
  1969   001496                     
  1970                           ; BSR set to: 61
  1971                           ;EXO5BLU26K83.c: 109:     I2C2ADB1 = 0b11010001;
  1972   001496  0ED1               	movlw	209
  1973   001498  6F58               	movwf	88,b	;volatile
  1974                           
  1975                           ;EXO5BLU26K83.c: 110:     I2C2CNT = 1;
  1976   00149A  0E01               	movlw	1
  1977   00149C  6F56               	movwf	86,b	;volatile
  1978   00149E                     
  1979                           ; BSR set to: 61
  1980                           ;EXO5BLU26K83.c: 111:     I2C2CON0bits.S = 1;
  1981   00149E  8B5D               	bsf	93,5,b	;volatile
  1982   0014A0                     l137:
  1983                           
  1984                           ; BSR set to: 61
  1985   0014A0  A163               	btfss	99,0,b	;volatile
  1986   0014A2  EF55  F00A         	goto	u431
  1987   0014A6  EF57  F00A         	goto	u430
  1988   0014AA                     u431:
  1989   0014AA  EF50  F00A         	goto	l137
  1990   0014AE                     u430:
  1991   0014AE                     
  1992                           ; BSR set to: 61
  1993                           ;EXO5BLU26K83.c: 113:     I2C2PIRbits.SCIF = 0;
  1994   0014AE  9163               	bcf	99,0,b	;volatile
  1995                           
  1996                           ;EXO5BLU26K83.c: 114:     I2C2CON1bits.ACKCNT = 1;
  1997   0014B0  8F5E               	bsf	94,7,b	;volatile
  1998   0014B2                     l140:
  1999                           
  2000                           ; BSR set to: 61
  2001   0014B2  A162               	btfss	98,0,b	;volatile
  2002   0014B4  EF5E  F00A         	goto	u441
  2003   0014B8  EF60  F00A         	goto	u440
  2004   0014BC                     u441:
  2005   0014BC  EF59  F00A         	goto	l140
  2006   0014C0                     u440:
  2007   0014C0                     
  2008                           ; BSR set to: 61
  2009                           ;EXO5BLU26K83.c: 116:     char result = I2C2RXB;
  2010   0014C0  006F F550  F003    	movff	15700,rtc_read@result	;volatile
  2011   0014C6                     l143:
  2012                           
  2013                           ; BSR set to: 61
  2014   0014C6  A563               	btfss	99,2,b	;volatile
  2015   0014C8  EF68  F00A         	goto	u451
  2016   0014CC  EF6A  F00A         	goto	u450
  2017   0014D0                     u451:
  2018   0014D0  EF63  F00A         	goto	l143
  2019   0014D4                     u450:
  2020   0014D4                     
  2021                           ; BSR set to: 61
  2022                           ;EXO5BLU26K83.c: 119:     I2C2PIRbits.PCIF = 0;
  2023   0014D4  9563               	bcf	99,2,b	;volatile
  2024   0014D6                     
  2025                           ; BSR set to: 61
  2026                           ;EXO5BLU26K83.c: 120:     return result;
  2027   0014D6  5003               	movf	rtc_read@result^0,w,c
  2028   0014D8                     
  2029                           ; BSR set to: 61
  2030   0014D8  0012               	return		;funcret
  2031   0014DA                     __end_of_rtc_read:
  2032                           	callstack 0
  2033                           
  2034 ;; *************** function _format_time *****************
  2035 ;; Defined at:
  2036 ;;		line 86 in file "EXO5BLU26K83.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;  buffer          1    8[COMRAM] PTR unsigned char 
  2039 ;;		 -> main@time_str(9), 
  2040 ;;  hours           1    9[COMRAM] unsigned char 
  2041 ;;  minutes         1   10[COMRAM] unsigned char 
  2042 ;;  seconds         1   11[COMRAM] unsigned char 
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;		None
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  1    wreg      void 
  2047 ;; Registers used:
  2048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2054 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2057 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2058 ;;Total ram usage:        4 bytes
  2059 ;; Hardware stack levels used: 1
  2060 ;; Hardware stack levels required when called: 1
  2061 ;; This function calls:
  2062 ;;		___awdiv
  2063 ;;		___awmod
  2064 ;; This function is called by:
  2065 ;;		_main
  2066 ;; This function uses a non-reentrant model
  2067 ;;
  2068                           
  2069                           	psect	text5
  2070   001172                     __ptext5:
  2071                           	callstack 0
  2072   001172                     _format_time:
  2073                           	callstack 29
  2074   001172                     
  2075                           ;EXO5BLU26K83.c: 87:     buffer[0] = (hours / 10) + '0';
  2076   001172  5009               	movf	format_time@buffer^0,w,c
  2077   001174  6ED9               	movwf	fsr2l,c
  2078   001176  6ADA               	clrf	fsr2h,c
  2079   001178  C00A  F001         	movff	format_time@hours,___awdiv@dividend
  2080   00117C  6A02               	clrf	(___awdiv@dividend+1)^0,c
  2081   00117E  6A04               	clrf	(___awdiv@divisor+1)^0,c
  2082   001180  0E0A               	movlw	10
  2083   001182  6E03               	movwf	___awdiv@divisor^0,c
  2084   001184  EC2C  F009         	call	___awdiv	;wreg free
  2085   001188  5001               	movf	?___awdiv^0,w,c
  2086   00118A  0F30               	addlw	48
  2087   00118C  6EDF               	movwf	indf2,c
  2088                           
  2089                           ;EXO5BLU26K83.c: 88:     buffer[1] = (hours % 10) + '0';
  2090   00118E  5009               	movf	format_time@buffer^0,w,c
  2091   001190  6ED9               	movwf	fsr2l,c
  2092   001192  6ADA               	clrf	fsr2h,c
  2093   001194  0E01               	movlw	1
  2094   001196  26D9               	addwf	fsr2l,f,c
  2095   001198  C00A  F001         	movff	format_time@hours,___awmod@dividend
  2096   00119C  6A02               	clrf	(___awmod@dividend+1)^0,c
  2097   00119E  6A04               	clrf	(___awmod@divisor+1)^0,c
  2098   0011A0  0E0A               	movlw	10
  2099   0011A2  6E03               	movwf	___awmod@divisor^0,c
  2100   0011A4  EC8C  F009         	call	___awmod	;wreg free
  2101   0011A8  5001               	movf	?___awmod^0,w,c
  2102   0011AA  0F30               	addlw	48
  2103   0011AC  6EDF               	movwf	indf2,c
  2104   0011AE                     
  2105                           ;EXO5BLU26K83.c: 89:     buffer[2] = ':';
  2106   0011AE  5009               	movf	format_time@buffer^0,w,c
  2107   0011B0  6ED9               	movwf	fsr2l,c
  2108   0011B2  6ADA               	clrf	fsr2h,c
  2109   0011B4  0E02               	movlw	2
  2110   0011B6  26D9               	addwf	fsr2l,f,c
  2111   0011B8  0E3A               	movlw	58
  2112   0011BA  6EDF               	movwf	indf2,c
  2113   0011BC                     
  2114                           ;EXO5BLU26K83.c: 90:     buffer[3] = (minutes / 10) + '0';
  2115   0011BC  5009               	movf	format_time@buffer^0,w,c
  2116   0011BE  6ED9               	movwf	fsr2l,c
  2117   0011C0  6ADA               	clrf	fsr2h,c
  2118   0011C2  0E03               	movlw	3
  2119   0011C4  26D9               	addwf	fsr2l,f,c
  2120   0011C6  C00B  F001         	movff	format_time@minutes,___awdiv@dividend
  2121   0011CA  6A02               	clrf	(___awdiv@dividend+1)^0,c
  2122   0011CC  6A04               	clrf	(___awdiv@divisor+1)^0,c
  2123   0011CE  0E0A               	movlw	10
  2124   0011D0  6E03               	movwf	___awdiv@divisor^0,c
  2125   0011D2  EC2C  F009         	call	___awdiv	;wreg free
  2126   0011D6  5001               	movf	?___awdiv^0,w,c
  2127   0011D8  0F30               	addlw	48
  2128   0011DA  6EDF               	movwf	indf2,c
  2129   0011DC                     
  2130                           ;EXO5BLU26K83.c: 91:     buffer[4] = (minutes % 10) + '0';
  2131   0011DC  5009               	movf	format_time@buffer^0,w,c
  2132   0011DE  6ED9               	movwf	fsr2l,c
  2133   0011E0  6ADA               	clrf	fsr2h,c
  2134   0011E2  0E04               	movlw	4
  2135   0011E4  26D9               	addwf	fsr2l,f,c
  2136   0011E6  C00B  F001         	movff	format_time@minutes,___awmod@dividend
  2137   0011EA  6A02               	clrf	(___awmod@dividend+1)^0,c
  2138   0011EC  6A04               	clrf	(___awmod@divisor+1)^0,c
  2139   0011EE  0E0A               	movlw	10
  2140   0011F0  6E03               	movwf	___awmod@divisor^0,c
  2141   0011F2  EC8C  F009         	call	___awmod	;wreg free
  2142   0011F6  5001               	movf	?___awmod^0,w,c
  2143   0011F8  0F30               	addlw	48
  2144   0011FA  6EDF               	movwf	indf2,c
  2145   0011FC                     
  2146                           ;EXO5BLU26K83.c: 92:     buffer[5] = ':';
  2147   0011FC  5009               	movf	format_time@buffer^0,w,c
  2148   0011FE  6ED9               	movwf	fsr2l,c
  2149   001200  6ADA               	clrf	fsr2h,c
  2150   001202  0E05               	movlw	5
  2151   001204  26D9               	addwf	fsr2l,f,c
  2152   001206  0E3A               	movlw	58
  2153   001208  6EDF               	movwf	indf2,c
  2154                           
  2155                           ;EXO5BLU26K83.c: 93:     buffer[6] = (seconds / 10) + '0';
  2156   00120A  5009               	movf	format_time@buffer^0,w,c
  2157   00120C  6ED9               	movwf	fsr2l,c
  2158   00120E  6ADA               	clrf	fsr2h,c
  2159   001210  0E06               	movlw	6
  2160   001212  26D9               	addwf	fsr2l,f,c
  2161   001214  C00C  F001         	movff	format_time@seconds,___awdiv@dividend
  2162   001218  6A02               	clrf	(___awdiv@dividend+1)^0,c
  2163   00121A  6A04               	clrf	(___awdiv@divisor+1)^0,c
  2164   00121C  0E0A               	movlw	10
  2165   00121E  6E03               	movwf	___awdiv@divisor^0,c
  2166   001220  EC2C  F009         	call	___awdiv	;wreg free
  2167   001224  5001               	movf	?___awdiv^0,w,c
  2168   001226  0F30               	addlw	48
  2169   001228  6EDF               	movwf	indf2,c
  2170                           
  2171                           ;EXO5BLU26K83.c: 94:     buffer[7] = (seconds % 10) + '0';
  2172   00122A  5009               	movf	format_time@buffer^0,w,c
  2173   00122C  6ED9               	movwf	fsr2l,c
  2174   00122E  6ADA               	clrf	fsr2h,c
  2175   001230  0E07               	movlw	7
  2176   001232  26D9               	addwf	fsr2l,f,c
  2177   001234  C00C  F001         	movff	format_time@seconds,___awmod@dividend
  2178   001238  6A02               	clrf	(___awmod@dividend+1)^0,c
  2179   00123A  6A04               	clrf	(___awmod@divisor+1)^0,c
  2180   00123C  0E0A               	movlw	10
  2181   00123E  6E03               	movwf	___awmod@divisor^0,c
  2182   001240  EC8C  F009         	call	___awmod	;wreg free
  2183   001244  5001               	movf	?___awmod^0,w,c
  2184   001246  0F30               	addlw	48
  2185   001248  6EDF               	movwf	indf2,c
  2186   00124A                     
  2187                           ;EXO5BLU26K83.c: 95:     buffer[8] = '\0';
  2188   00124A  5009               	movf	format_time@buffer^0,w,c
  2189   00124C  6ED9               	movwf	fsr2l,c
  2190   00124E  6ADA               	clrf	fsr2h,c
  2191   001250  0E08               	movlw	8
  2192   001252  26D9               	addwf	fsr2l,f,c
  2193   001254  6ADF               	clrf	indf2,c
  2194   001256  0012               	return		;funcret
  2195   001258                     __end_of_format_time:
  2196                           	callstack 0
  2197                           
  2198 ;; *************** function ___awmod *****************
  2199 ;; Defined at:
  2200 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\awmod.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;  dividend        2    0[COMRAM] int 
  2203 ;;  divisor         2    2[COMRAM] int 
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;  sign            1    5[COMRAM] unsigned char 
  2206 ;;  counter         1    4[COMRAM] unsigned char 
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  2    0[COMRAM] int 
  2209 ;; Registers used:
  2210 ;;		wreg, status,2, status,0
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2216 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2217 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2219 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2220 ;;Total ram usage:        6 bytes
  2221 ;; Hardware stack levels used: 1
  2222 ;; This function calls:
  2223 ;;		Nothing
  2224 ;; This function is called by:
  2225 ;;		_format_time
  2226 ;;		_rtc_write_dec
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           	psect	text6
  2231   001318                     __ptext6:
  2232                           	callstack 0
  2233   001318                     ___awmod:
  2234                           	callstack 29
  2235   001318  6A06               	clrf	___awmod@sign^0,c
  2236   00131A  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2237   00131C  EF94  F009         	goto	u550
  2238   001320  EF92  F009         	goto	u551
  2239   001324                     u551:
  2240   001324  EF9A  F009         	goto	l1349
  2241   001328                     u550:
  2242   001328  6C01               	negf	___awmod@dividend^0,c
  2243   00132A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2244   00132C  B0D8               	btfsc	status,0,c
  2245   00132E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2246   001330  0E01               	movlw	1
  2247   001332  6E06               	movwf	___awmod@sign^0,c
  2248   001334                     l1349:
  2249   001334  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2250   001336  EFA1  F009         	goto	u560
  2251   00133A  EF9F  F009         	goto	u561
  2252   00133E                     u561:
  2253   00133E  EFA5  F009         	goto	l1353
  2254   001342                     u560:
  2255   001342  6C03               	negf	___awmod@divisor^0,c
  2256   001344  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2257   001346  B0D8               	btfsc	status,0,c
  2258   001348  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2259   00134A                     l1353:
  2260   00134A  5003               	movf	___awmod@divisor^0,w,c
  2261   00134C  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2262   00134E  B4D8               	btfsc	status,2,c
  2263   001350  EFAC  F009         	goto	u571
  2264   001354  EFAE  F009         	goto	u570
  2265   001358                     u571:
  2266   001358  EFD2  F009         	goto	l1369
  2267   00135C                     u570:
  2268   00135C  0E01               	movlw	1
  2269   00135E  6E05               	movwf	___awmod@counter^0,c
  2270   001360  EFB6  F009         	goto	l1359
  2271   001364                     l1357:
  2272   001364  90D8               	bcf	status,0,c
  2273   001366  3603               	rlcf	___awmod@divisor^0,f,c
  2274   001368  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2275   00136A  2A05               	incf	___awmod@counter^0,f,c
  2276   00136C                     l1359:
  2277   00136C  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2278   00136E  EFBB  F009         	goto	u581
  2279   001372  EFBD  F009         	goto	u580
  2280   001376                     u581:
  2281   001376  EFB2  F009         	goto	l1357
  2282   00137A                     u580:
  2283   00137A                     l1361:
  2284   00137A  5003               	movf	___awmod@divisor^0,w,c
  2285   00137C  5C01               	subwf	___awmod@dividend^0,w,c
  2286   00137E  5004               	movf	(___awmod@divisor+1)^0,w,c
  2287   001380  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2288   001382  A0D8               	btfss	status,0,c
  2289   001384  EFC6  F009         	goto	u591
  2290   001388  EFC8  F009         	goto	u590
  2291   00138C                     u591:
  2292   00138C  EFCC  F009         	goto	l1365
  2293   001390                     u590:
  2294   001390  5003               	movf	___awmod@divisor^0,w,c
  2295   001392  5E01               	subwf	___awmod@dividend^0,f,c
  2296   001394  5004               	movf	(___awmod@divisor+1)^0,w,c
  2297   001396  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2298   001398                     l1365:
  2299   001398  90D8               	bcf	status,0,c
  2300   00139A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2301   00139C  3203               	rrcf	___awmod@divisor^0,f,c
  2302   00139E  2E05               	decfsz	___awmod@counter^0,f,c
  2303   0013A0  EFBD  F009         	goto	l1361
  2304   0013A4                     l1369:
  2305   0013A4  5006               	movf	___awmod@sign^0,w,c
  2306   0013A6  B4D8               	btfsc	status,2,c
  2307   0013A8  EFD8  F009         	goto	u601
  2308   0013AC  EFDA  F009         	goto	u600
  2309   0013B0                     u601:
  2310   0013B0  EFDE  F009         	goto	l1373
  2311   0013B4                     u600:
  2312   0013B4  6C01               	negf	___awmod@dividend^0,c
  2313   0013B6  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2314   0013B8  B0D8               	btfsc	status,0,c
  2315   0013BA  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2316   0013BC                     l1373:
  2317   0013BC  C001  F001         	movff	___awmod@dividend,?___awmod
  2318   0013C0  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2319   0013C4  0012               	return		;funcret
  2320   0013C6                     __end_of___awmod:
  2321                           	callstack 0
  2322                           
  2323 ;; *************** function ___awdiv *****************
  2324 ;; Defined at:
  2325 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\awdiv.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;  dividend        2    0[COMRAM] int 
  2328 ;;  divisor         2    2[COMRAM] int 
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;  quotient        2    6[COMRAM] int 
  2331 ;;  sign            1    5[COMRAM] unsigned char 
  2332 ;;  counter         1    4[COMRAM] unsigned char 
  2333 ;; Return value:  Size  Location     Type
  2334 ;;                  2    0[COMRAM] int 
  2335 ;; Registers used:
  2336 ;;		wreg, status,2, status,0
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2342 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2343 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2345 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2346 ;;Total ram usage:        8 bytes
  2347 ;; Hardware stack levels used: 1
  2348 ;; This function calls:
  2349 ;;		Nothing
  2350 ;; This function is called by:
  2351 ;;		_format_time
  2352 ;;		_rtc_write_dec
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356                           	psect	text7
  2357   001258                     __ptext7:
  2358                           	callstack 0
  2359   001258                     ___awdiv:
  2360                           	callstack 29
  2361   001258  6A06               	clrf	___awdiv@sign^0,c
  2362   00125A  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2363   00125C  EF34  F009         	goto	u490
  2364   001260  EF32  F009         	goto	u491
  2365   001264                     u491:
  2366   001264  EF3A  F009         	goto	l1305
  2367   001268                     u490:
  2368   001268  6C03               	negf	___awdiv@divisor^0,c
  2369   00126A  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2370   00126C  B0D8               	btfsc	status,0,c
  2371   00126E  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2372   001270  0E01               	movlw	1
  2373   001272  6E06               	movwf	___awdiv@sign^0,c
  2374   001274                     l1305:
  2375   001274  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2376   001276  EF41  F009         	goto	u500
  2377   00127A  EF3F  F009         	goto	u501
  2378   00127E                     u501:
  2379   00127E  EF47  F009         	goto	l1311
  2380   001282                     u500:
  2381   001282  6C01               	negf	___awdiv@dividend^0,c
  2382   001284  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2383   001286  B0D8               	btfsc	status,0,c
  2384   001288  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2385   00128A  0E01               	movlw	1
  2386   00128C  1A06               	xorwf	___awdiv@sign^0,f,c
  2387   00128E                     l1311:
  2388   00128E  6A08               	clrf	(___awdiv@quotient+1)^0,c
  2389   001290  0E00               	movlw	0
  2390   001292  6E07               	movwf	___awdiv@quotient^0,c
  2391   001294  5003               	movf	___awdiv@divisor^0,w,c
  2392   001296  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2393   001298  B4D8               	btfsc	status,2,c
  2394   00129A  EF51  F009         	goto	u511
  2395   00129E  EF53  F009         	goto	u510
  2396   0012A2                     u511:
  2397   0012A2  EF7B  F009         	goto	l1333
  2398   0012A6                     u510:
  2399   0012A6  0E01               	movlw	1
  2400   0012A8  6E05               	movwf	___awdiv@counter^0,c
  2401   0012AA  EF5B  F009         	goto	l1319
  2402   0012AE                     l1317:
  2403   0012AE  90D8               	bcf	status,0,c
  2404   0012B0  3603               	rlcf	___awdiv@divisor^0,f,c
  2405   0012B2  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2406   0012B4  2A05               	incf	___awdiv@counter^0,f,c
  2407   0012B6                     l1319:
  2408   0012B6  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2409   0012B8  EF60  F009         	goto	u521
  2410   0012BC  EF62  F009         	goto	u520
  2411   0012C0                     u521:
  2412   0012C0  EF57  F009         	goto	l1317
  2413   0012C4                     u520:
  2414   0012C4                     l1321:
  2415   0012C4  90D8               	bcf	status,0,c
  2416   0012C6  3607               	rlcf	___awdiv@quotient^0,f,c
  2417   0012C8  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2418   0012CA  5003               	movf	___awdiv@divisor^0,w,c
  2419   0012CC  5C01               	subwf	___awdiv@dividend^0,w,c
  2420   0012CE  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2421   0012D0  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2422   0012D2  A0D8               	btfss	status,0,c
  2423   0012D4  EF6E  F009         	goto	u531
  2424   0012D8  EF70  F009         	goto	u530
  2425   0012DC                     u531:
  2426   0012DC  EF75  F009         	goto	l1329
  2427   0012E0                     u530:
  2428   0012E0  5003               	movf	___awdiv@divisor^0,w,c
  2429   0012E2  5E01               	subwf	___awdiv@dividend^0,f,c
  2430   0012E4  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2431   0012E6  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2432   0012E8  8007               	bsf	___awdiv@quotient^0,0,c
  2433   0012EA                     l1329:
  2434   0012EA  90D8               	bcf	status,0,c
  2435   0012EC  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2436   0012EE  3203               	rrcf	___awdiv@divisor^0,f,c
  2437   0012F0  2E05               	decfsz	___awdiv@counter^0,f,c
  2438   0012F2  EF62  F009         	goto	l1321
  2439   0012F6                     l1333:
  2440   0012F6  5006               	movf	___awdiv@sign^0,w,c
  2441   0012F8  B4D8               	btfsc	status,2,c
  2442   0012FA  EF81  F009         	goto	u541
  2443   0012FE  EF83  F009         	goto	u540
  2444   001302                     u541:
  2445   001302  EF87  F009         	goto	l1337
  2446   001306                     u540:
  2447   001306  6C07               	negf	___awdiv@quotient^0,c
  2448   001308  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2449   00130A  B0D8               	btfsc	status,0,c
  2450   00130C  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2451   00130E                     l1337:
  2452   00130E  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2453   001312  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2454   001316  0012               	return		;funcret
  2455   001318                     __end_of___awdiv:
  2456                           	callstack 0
  2457                           
  2458 ;; *************** function _bt_send_str *****************
  2459 ;; Defined at:
  2460 ;;		line 123 in file "EXO5BLU26K83.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;  s               1    0[COMRAM] PTR const unsigned char 
  2463 ;;		 -> main@time_str(9), 
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;		None
  2466 ;; Return value:  Size  Location     Type
  2467 ;;                  1    wreg      void 
  2468 ;; Registers used:
  2469 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2470 ;; Tracked objects:
  2471 ;;		On entry : 0/0
  2472 ;;		On exit  : 0/0
  2473 ;;		Unchanged: 0/0
  2474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2475 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2478 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2479 ;;Total ram usage:        1 bytes
  2480 ;; Hardware stack levels used: 1
  2481 ;; This function calls:
  2482 ;;		Nothing
  2483 ;; This function is called by:
  2484 ;;		_main
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           	psect	text8
  2489   001556                     __ptext8:
  2490                           	callstack 0
  2491   001556                     _bt_send_str:
  2492                           	callstack 30
  2493   001556                     
  2494                           ;EXO5BLU26K83.c: 124:     while (*s) {
  2495   001556  EFBC  F00A         	goto	l1419
  2496   00155A                     l151:
  2497   00155A  0139               	movlb	57	; () banked
  2498   00155C  ABA7               	btfss	167,5,b	;volatile
  2499   00155E  EFB3  F00A         	goto	u661
  2500   001562  EFB5  F00A         	goto	u660
  2501   001566                     u661:
  2502   001566  EFAD  F00A         	goto	l151
  2503   00156A                     u660:
  2504   00156A                     
  2505                           ; BSR set to: 57
  2506                           ;EXO5BLU26K83.c: 126:         U2TXB = *s++;
  2507   00156A  5001               	movf	bt_send_str@s^0,w,c
  2508   00156C  6ED9               	movwf	fsr2l,c
  2509   00156E  6ADA               	clrf	fsr2h,c
  2510   001570  50DF               	movf	indf2,w,c
  2511   001572  013D               	movlb	61	; () banked
  2512   001574  6FD2               	movwf	210,b	;volatile
  2513   001576                     
  2514                           ; BSR set to: 61
  2515   001576  2A01               	incf	bt_send_str@s^0,f,c
  2516   001578                     l1419:
  2517                           
  2518                           ;EXO5BLU26K83.c: 124:     while (*s) {
  2519   001578  5001               	movf	bt_send_str@s^0,w,c
  2520   00157A  6ED9               	movwf	fsr2l,c
  2521   00157C  6ADA               	clrf	fsr2h,c
  2522   00157E  50DF               	movf	indf2,w,c
  2523   001580  A4D8               	btfss	status,2,c
  2524   001582  EFC5  F00A         	goto	u671
  2525   001586  EFC7  F00A         	goto	u670
  2526   00158A                     u671:
  2527   00158A  EFAD  F00A         	goto	l151
  2528   00158E                     u670:
  2529   00158E                     l155:
  2530   00158E  0139               	movlb	57	; () banked
  2531   001590  ABA7               	btfss	167,5,b	;volatile
  2532   001592  EFCD  F00A         	goto	u681
  2533   001596  EFCF  F00A         	goto	u680
  2534   00159A                     u681:
  2535   00159A  EFC7  F00A         	goto	l155
  2536   00159E                     u680:
  2537   00159E                     
  2538                           ; BSR set to: 57
  2539                           ;EXO5BLU26K83.c: 129:     U2TXB = '\r';
  2540   00159E  0E0D               	movlw	13
  2541   0015A0  013D               	movlb	61	; () banked
  2542   0015A2  6FD2               	movwf	210,b	;volatile
  2543   0015A4                     l158:
  2544   0015A4  0139               	movlb	57	; () banked
  2545   0015A6  ABA7               	btfss	167,5,b	;volatile
  2546   0015A8  EFD8  F00A         	goto	u691
  2547   0015AC  EFDA  F00A         	goto	u690
  2548   0015B0                     u691:
  2549   0015B0  EFD2  F00A         	goto	l158
  2550   0015B4                     u690:
  2551   0015B4                     
  2552                           ; BSR set to: 57
  2553                           ;EXO5BLU26K83.c: 131:     U2TXB = '\n';
  2554   0015B4  0E0A               	movlw	10
  2555   0015B6  013D               	movlb	61	; () banked
  2556   0015B8  6FD2               	movwf	210,b	;volatile
  2557   0015BA                     
  2558                           ; BSR set to: 61
  2559   0015BA  0012               	return		;funcret
  2560   0015BC                     __end_of_bt_send_str:
  2561                           	callstack 0
  2562                           
  2563 ;; *************** function _Lcd_Write_String *****************
  2564 ;; Defined at:
  2565 ;;		line 94 in file "./lcd.h"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;  a               2    4[COMRAM] PTR unsigned char 
  2568 ;;		 -> main@time_str(9), STR_1(13), 
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;  i               2    8[COMRAM] int 
  2571 ;; Return value:  Size  Location     Type
  2572 ;;                  1    wreg      void 
  2573 ;; Registers used:
  2574 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2580 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2581 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2582 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2583 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2584 ;;Total ram usage:        6 bytes
  2585 ;; Hardware stack levels used: 1
  2586 ;; Hardware stack levels required when called: 2
  2587 ;; This function calls:
  2588 ;;		_Lcd_Write_Char
  2589 ;; This function is called by:
  2590 ;;		_main
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593                           
  2594                           	psect	text9
  2595   0013C6                     __ptext9:
  2596                           	callstack 0
  2597   0013C6                     _Lcd_Write_String:
  2598                           	callstack 28
  2599   0013C6                     
  2600                           ;./lcd.h: 94: void Lcd_Write_String(char *a);./lcd.h: 95: {;./lcd.h: 96:  int i;;./lcd.h
      +                          : 97:  for(i=0;a[i]!='\0';i++)
  2601   0013C6  6A0A               	clrf	(Lcd_Write_String@i+1)^0,c
  2602   0013C8  0E00               	movlw	0
  2603   0013CA  6E09               	movwf	Lcd_Write_String@i^0,c
  2604   0013CC  EF07  F00A         	goto	l1399
  2605   0013D0                     l1395:
  2606                           
  2607                           ;./lcd.h: 98:     Lcd_Write_Char(a[i]);
  2608   0013D0  5009               	movf	Lcd_Write_String@i^0,w,c
  2609   0013D2  2405               	addwf	Lcd_Write_String@a^0,w,c
  2610   0013D4  6E07               	movwf	??_Lcd_Write_String^0,c
  2611   0013D6  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
  2612   0013D8  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  2613   0013DA  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
  2614   0013DC  0060  F01F  FFF6   	movff	??_Lcd_Write_String,tblptrl
  2615   0013E2  0060  F023  FFF7   	movff	??_Lcd_Write_String+1,tblptrh
  2616   0013E8  0E00               	movlw	low (__smallconst shr (0+16))
  2617   0013EA  6EF8               	movwf	tblptru,c
  2618   0013EC  0E0F               	movlw	(high __ramtop+-1)
  2619   0013EE  64F7               	cpfsgt	tblptrh,c
  2620   0013F0  D003               	bra	u637
  2621   0013F2  0008               	tblrd		*
  2622   0013F4  50F5               	movf	tablat,w,c
  2623   0013F6  D007               	bra	u630
  2624   0013F8                     u637:
  2625   0013F8  006F FFDB FFE9     	movff	tblptrl,fsr0l
  2626   0013FE  006F FFDF FFEA     	movff	tblptrh,fsr0h
  2627   001404  50EF               	movf	indf0,w,c
  2628   001406                     u630:
  2629   001406  EC82  F00B         	call	_Lcd_Write_Char
  2630   00140A  4A09               	infsnz	Lcd_Write_String@i^0,f,c
  2631   00140C  2A0A               	incf	(Lcd_Write_String@i+1)^0,f,c
  2632   00140E                     l1399:
  2633   00140E  5009               	movf	Lcd_Write_String@i^0,w,c
  2634   001410  2405               	addwf	Lcd_Write_String@a^0,w,c
  2635   001412  6E07               	movwf	??_Lcd_Write_String^0,c
  2636   001414  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
  2637   001416  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  2638   001418  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
  2639   00141A  0060  F01F  FFF6   	movff	??_Lcd_Write_String,tblptrl
  2640   001420  0060  F023  FFF7   	movff	??_Lcd_Write_String+1,tblptrh
  2641   001426  0E00               	movlw	low (__smallconst shr (0+16))
  2642   001428  6EF8               	movwf	tblptru,c
  2643   00142A  0E0F               	movlw	(high __ramtop+-1)
  2644   00142C  64F7               	cpfsgt	tblptrh,c
  2645   00142E  D003               	bra	u647
  2646   001430  0008               	tblrd		*
  2647   001432  50F5               	movf	tablat,w,c
  2648   001434  D007               	bra	u640
  2649   001436                     u647:
  2650   001436  006F FFDB FFE9     	movff	tblptrl,fsr0l
  2651   00143C  006F FFDF FFEA     	movff	tblptrh,fsr0h
  2652   001442  50EF               	movf	indf0,w,c
  2653   001444                     u640:
  2654   001444  0900               	iorlw	0
  2655   001446  A4D8               	btfss	status,2,c
  2656   001448  EF28  F00A         	goto	u651
  2657   00144C  EF2A  F00A         	goto	u650
  2658   001450                     u651:
  2659   001450  EFE8  F009         	goto	l1395
  2660   001454                     u650:
  2661   001454  0012               	return		;funcret
  2662   001456                     __end_of_Lcd_Write_String:
  2663                           	callstack 0
  2664                           
  2665 ;; *************** function _Lcd_Write_Char *****************
  2666 ;; Defined at:
  2667 ;;		line 78 in file "./lcd.h"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;  a               1    wreg     unsigned char 
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;  a               1    3[COMRAM] unsigned char 
  2672 ;;  y               1    2[COMRAM] unsigned char 
  2673 ;;  temp            1    1[COMRAM] unsigned char 
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  1    wreg      void 
  2676 ;; Registers used:
  2677 ;;		wreg, status,2, status,0, cstack
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2684 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2686 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2687 ;;Total ram usage:        3 bytes
  2688 ;; Hardware stack levels used: 1
  2689 ;; Hardware stack levels required when called: 1
  2690 ;; This function calls:
  2691 ;;		_Lcd_Port
  2692 ;; This function is called by:
  2693 ;;		_Lcd_Write_String
  2694 ;; This function uses a non-reentrant model
  2695 ;;
  2696                           
  2697                           	psect	text10
  2698   001704                     __ptext10:
  2699                           	callstack 0
  2700   001704                     _Lcd_Write_Char:
  2701                           	callstack 28
  2702                           
  2703                           ;incstack = 0
  2704                           ;Lcd_Write_Char@a stored from wreg
  2705   001704  6E04               	movwf	Lcd_Write_Char@a^0,c
  2706   001706                     
  2707                           ;./lcd.h: 78: void Lcd_Write_Char(char a);./lcd.h: 79: {;./lcd.h: 80:    char temp,y;;./
      +                          lcd.h: 81:    temp = a&0x0F;
  2708   001706  5004               	movf	Lcd_Write_Char@a^0,w,c
  2709   001708  0B0F               	andlw	15
  2710   00170A  6E02               	movwf	Lcd_Write_Char@temp^0,c
  2711                           
  2712                           ;./lcd.h: 82:    y = a&0xF0;
  2713   00170C  5004               	movf	Lcd_Write_Char@a^0,w,c
  2714   00170E  0BF0               	andlw	240
  2715   001710  6E03               	movwf	Lcd_Write_Char@y^0,c
  2716   001712                     
  2717                           ;./lcd.h: 83:    PORTAbits.RA0 = 1;
  2718   001712  80CA               	bsf	202,0,c	;volatile
  2719   001714                     
  2720                           ;./lcd.h: 84:    Lcd_Port(y>>4);
  2721   001714  3803               	swapf	Lcd_Write_Char@y^0,w,c
  2722   001716  0B0F               	andlw	15
  2723   001718  EC11  F00B         	call	_Lcd_Port
  2724   00171C                     
  2725                           ;./lcd.h: 85:    PORTAbits.RA1 = 1;
  2726   00171C  82CA               	bsf	202,1,c	;volatile
  2727   00171E                     
  2728                           ;./lcd.h: 86:    _delay((unsigned long)((40)*(64000000/4000000.0)));
  2729   00171E  0ED5               	movlw	213
  2730   001720                     u767:
  2731   001720  2EE8               	decfsz	wreg,f,c
  2732   001722  D7FE               	bra	u767
  2733   001724  0000               	nop	
  2734   001726                     
  2735                           ;./lcd.h: 87:    PORTAbits.RA1 = 0;
  2736   001726  92CA               	bcf	202,1,c	;volatile
  2737   001728                     
  2738                           ;./lcd.h: 88:    Lcd_Port(temp);
  2739   001728  5002               	movf	Lcd_Write_Char@temp^0,w,c
  2740   00172A  EC11  F00B         	call	_Lcd_Port
  2741   00172E                     
  2742                           ;./lcd.h: 89:    PORTAbits.RA1 = 1;
  2743   00172E  82CA               	bsf	202,1,c	;volatile
  2744   001730                     
  2745                           ;./lcd.h: 90:    _delay((unsigned long)((40)*(64000000/4000000.0)));
  2746   001730  0ED5               	movlw	213
  2747   001732                     u777:
  2748   001732  2EE8               	decfsz	wreg,f,c
  2749   001734  D7FE               	bra	u777
  2750   001736  0000               	nop	
  2751   001738                     
  2752                           ;./lcd.h: 91:    PORTAbits.RA1 = 0;
  2753   001738  92CA               	bcf	202,1,c	;volatile
  2754   00173A  0012               	return		;funcret
  2755   00173C                     __end_of_Lcd_Write_Char:
  2756                           	callstack 0
  2757                           
  2758 ;; *************** function _Lcd_Set_Cursor *****************
  2759 ;; Defined at:
  2760 ;;		line 38 in file "./lcd.h"
  2761 ;; Parameters:    Size  Location     Type
  2762 ;;  a               1    wreg     unsigned char 
  2763 ;;  b               1    3[COMRAM] unsigned char 
  2764 ;; Auto vars:     Size  Location     Type
  2765 ;;  a               1    4[COMRAM] unsigned char 
  2766 ;;  temp            1    7[COMRAM] unsigned char 
  2767 ;;  y               1    6[COMRAM] unsigned char 
  2768 ;;  z               1    5[COMRAM] unsigned char 
  2769 ;; Return value:  Size  Location     Type
  2770 ;;                  1    wreg      void 
  2771 ;; Registers used:
  2772 ;;		wreg, status,2, status,0, cstack
  2773 ;; Tracked objects:
  2774 ;;		On entry : 0/0
  2775 ;;		On exit  : 0/0
  2776 ;;		Unchanged: 0/0
  2777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2778 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2779 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2781 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2782 ;;Total ram usage:        5 bytes
  2783 ;; Hardware stack levels used: 1
  2784 ;; Hardware stack levels required when called: 1
  2785 ;; This function calls:
  2786 ;;		_Lcd_Cmd
  2787 ;; This function is called by:
  2788 ;;		_main
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792                           	psect	text11
  2793   0015BC                     __ptext11:
  2794                           	callstack 0
  2795   0015BC                     _Lcd_Set_Cursor:
  2796                           	callstack 29
  2797                           
  2798                           ;incstack = 0
  2799                           ;Lcd_Set_Cursor@a stored from wreg
  2800   0015BC  6E05               	movwf	Lcd_Set_Cursor@a^0,c
  2801   0015BE                     
  2802                           ;./lcd.h: 38: void Lcd_Set_Cursor(char a, char b);./lcd.h: 39: {;./lcd.h: 40:  char temp
      +                          ,z,y;;./lcd.h: 41:  if(a == 1)
  2803   0015BE  0405               	decf	Lcd_Set_Cursor@a^0,w,c
  2804   0015C0  A4D8               	btfss	status,2,c
  2805   0015C2  EFE5  F00A         	goto	u611
  2806   0015C6  EFE7  F00A         	goto	u610
  2807   0015CA                     u611:
  2808   0015CA  EFF8  F00A         	goto	l1385
  2809   0015CE                     u610:
  2810   0015CE                     
  2811                           ;./lcd.h: 42:  {;./lcd.h: 43:    temp = 0x80 + b - 1;
  2812   0015CE  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  2813   0015D0  0F7F               	addlw	127
  2814   0015D2  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  2815                           
  2816                           ;./lcd.h: 44:   z = temp>>4;
  2817   0015D4  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  2818   0015D6  0B0F               	andlw	15
  2819   0015D8  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  2820                           
  2821                           ;./lcd.h: 45:   y = temp & 0x0F;
  2822   0015DA  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  2823   0015DC  0B0F               	andlw	15
  2824   0015DE  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  2825   0015E0                     
  2826                           ;./lcd.h: 46:   Lcd_Cmd(z);
  2827   0015E0  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  2828   0015E2  ECAF  F00B         	call	_Lcd_Cmd
  2829   0015E6                     
  2830                           ;./lcd.h: 47:   Lcd_Cmd(y);
  2831   0015E6  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  2832   0015E8  ECAF  F00B         	call	_Lcd_Cmd
  2833                           
  2834                           ;./lcd.h: 48:  }
  2835   0015EC  EF10  F00B         	goto	l101
  2836   0015F0                     l1385:
  2837   0015F0  0E02               	movlw	2
  2838   0015F2  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  2839   0015F4  A4D8               	btfss	status,2,c
  2840   0015F6  EFFF  F00A         	goto	u621
  2841   0015FA  EF01  F00B         	goto	u620
  2842   0015FE                     u621:
  2843   0015FE  EF10  F00B         	goto	l101
  2844   001602                     u620:
  2845   001602                     
  2846                           ;./lcd.h: 50:  {;./lcd.h: 51:   temp = 0xC0 + b - 1;
  2847   001602  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  2848   001604  0FBF               	addlw	191
  2849   001606  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  2850                           
  2851                           ;./lcd.h: 52:   z = temp>>4;
  2852   001608  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  2853   00160A  0B0F               	andlw	15
  2854   00160C  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  2855                           
  2856                           ;./lcd.h: 53:   y = temp & 0x0F;
  2857   00160E  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  2858   001610  0B0F               	andlw	15
  2859   001612  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  2860   001614                     
  2861                           ;./lcd.h: 54:   Lcd_Cmd(z);
  2862   001614  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  2863   001616  ECAF  F00B         	call	_Lcd_Cmd
  2864   00161A                     
  2865                           ;./lcd.h: 55:   Lcd_Cmd(y);
  2866   00161A  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  2867   00161C  ECAF  F00B         	call	_Lcd_Cmd
  2868   001620                     l101:
  2869   001620  0012               	return		;funcret
  2870   001622                     __end_of_Lcd_Set_Cursor:
  2871                           	callstack 0
  2872                           
  2873 ;; *************** function _Lcd_Init *****************
  2874 ;; Defined at:
  2875 ;;		line 59 in file "./lcd.h"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;		None
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;		None
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  1    wreg      void 
  2882 ;; Registers used:
  2883 ;;		wreg, status,2, cstack
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2891 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2892 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2893 ;;Total ram usage:        2 bytes
  2894 ;; Hardware stack levels used: 1
  2895 ;; Hardware stack levels required when called: 1
  2896 ;; This function calls:
  2897 ;;		_Lcd_Cmd
  2898 ;;		_Lcd_Port
  2899 ;; This function is called by:
  2900 ;;		_main
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           	psect	text12
  2905   0014DA                     __ptext12:
  2906                           	callstack 0
  2907   0014DA                     _Lcd_Init:
  2908                           	callstack 29
  2909   0014DA                     
  2910                           ;./lcd.h: 61:   Lcd_Port(0x00);
  2911   0014DA  0E00               	movlw	0
  2912   0014DC  EC11  F00B         	call	_Lcd_Port
  2913   0014E0                     
  2914                           ;./lcd.h: 62:    _delay((unsigned long)((20)*(64000000/4000.0)));
  2915   0014E0  0E02               	movlw	2
  2916   0014E2  6E05               	movwf	(??_Lcd_Init+1)^0,c
  2917   0014E4  0EA0               	movlw	160
  2918   0014E6  6E04               	movwf	??_Lcd_Init^0,c
  2919   0014E8  0E92               	movlw	146
  2920   0014EA                     u787:
  2921   0014EA  2EE8               	decfsz	wreg,f,c
  2922   0014EC  D7FE               	bra	u787
  2923   0014EE  2E04               	decfsz	??_Lcd_Init^0,f,c
  2924   0014F0  D7FC               	bra	u787
  2925   0014F2  2E05               	decfsz	(??_Lcd_Init+1)^0,f,c
  2926   0014F4  D7FA               	bra	u787
  2927   0014F6  D000               	nop2	
  2928   0014F8                     
  2929                           ;./lcd.h: 63:   Lcd_Cmd(0x03);
  2930   0014F8  0E03               	movlw	3
  2931   0014FA  ECAF  F00B         	call	_Lcd_Cmd
  2932   0014FE                     
  2933                           ;./lcd.h: 64:  _delay((unsigned long)((5)*(64000000/4000.0)));
  2934   0014FE  0E68               	movlw	104
  2935   001500  6E04               	movwf	??_Lcd_Init^0,c
  2936   001502  0EE4               	movlw	228
  2937   001504                     u797:
  2938   001504  2EE8               	decfsz	wreg,f,c
  2939   001506  D7FE               	bra	u797
  2940   001508  2E04               	decfsz	??_Lcd_Init^0,f,c
  2941   00150A  D7FC               	bra	u797
  2942   00150C  D000               	nop2	
  2943   00150E                     
  2944                           ;./lcd.h: 65:   Lcd_Cmd(0x03);
  2945   00150E  0E03               	movlw	3
  2946   001510  ECAF  F00B         	call	_Lcd_Cmd
  2947   001514                     
  2948                           ;./lcd.h: 66:  _delay((unsigned long)((11)*(64000000/4000.0)));
  2949   001514  0EE5               	movlw	229
  2950   001516  6E04               	movwf	??_Lcd_Init^0,c
  2951   001518  0E91               	movlw	145
  2952   00151A                     u807:
  2953   00151A  2EE8               	decfsz	wreg,f,c
  2954   00151C  D7FE               	bra	u807
  2955   00151E  2E04               	decfsz	??_Lcd_Init^0,f,c
  2956   001520  D7FC               	bra	u807
  2957   001522  0000               	nop	
  2958   001524                     
  2959                           ;./lcd.h: 67:   Lcd_Cmd(0x03);
  2960   001524  0E03               	movlw	3
  2961   001526  ECAF  F00B         	call	_Lcd_Cmd
  2962   00152A                     
  2963                           ;./lcd.h: 69:   Lcd_Cmd(0x02);
  2964   00152A  0E02               	movlw	2
  2965   00152C  ECAF  F00B         	call	_Lcd_Cmd
  2966   001530                     
  2967                           ;./lcd.h: 70:   Lcd_Cmd(0x02);
  2968   001530  0E02               	movlw	2
  2969   001532  ECAF  F00B         	call	_Lcd_Cmd
  2970   001536                     
  2971                           ;./lcd.h: 71:   Lcd_Cmd(0x08);
  2972   001536  0E08               	movlw	8
  2973   001538  ECAF  F00B         	call	_Lcd_Cmd
  2974   00153C                     
  2975                           ;./lcd.h: 72:   Lcd_Cmd(0x00);
  2976   00153C  0E00               	movlw	0
  2977   00153E  ECAF  F00B         	call	_Lcd_Cmd
  2978   001542                     
  2979                           ;./lcd.h: 73:   Lcd_Cmd(0x0C);
  2980   001542  0E0C               	movlw	12
  2981   001544  ECAF  F00B         	call	_Lcd_Cmd
  2982   001548                     
  2983                           ;./lcd.h: 74:   Lcd_Cmd(0x00);
  2984   001548  0E00               	movlw	0
  2985   00154A  ECAF  F00B         	call	_Lcd_Cmd
  2986   00154E                     
  2987                           ;./lcd.h: 75:   Lcd_Cmd(0x06);
  2988   00154E  0E06               	movlw	6
  2989   001550  ECAF  F00B         	call	_Lcd_Cmd
  2990   001554  0012               	return		;funcret
  2991   001556                     __end_of_Lcd_Init:
  2992                           	callstack 0
  2993                           
  2994 ;; *************** function _Lcd_Clear *****************
  2995 ;; Defined at:
  2996 ;;		line 32 in file "./lcd.h"
  2997 ;; Parameters:    Size  Location     Type
  2998 ;;		None
  2999 ;; Auto vars:     Size  Location     Type
  3000 ;;		None
  3001 ;; Return value:  Size  Location     Type
  3002 ;;                  1    wreg      void 
  3003 ;; Registers used:
  3004 ;;		wreg, status,2, cstack
  3005 ;; Tracked objects:
  3006 ;;		On entry : 0/0
  3007 ;;		On exit  : 0/0
  3008 ;;		Unchanged: 0/0
  3009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3014 ;;Total ram usage:        0 bytes
  3015 ;; Hardware stack levels used: 1
  3016 ;; Hardware stack levels required when called: 2
  3017 ;; This function calls:
  3018 ;;		_Lcd_Cmd
  3019 ;; This function is called by:
  3020 ;;		_main
  3021 ;; This function uses a non-reentrant model
  3022 ;;
  3023                           
  3024                           	psect	text13
  3025   00177E                     __ptext13:
  3026                           	callstack 0
  3027   00177E                     _Lcd_Clear:
  3028                           	callstack 28
  3029   00177E                     
  3030                           ;./lcd.h: 34:  Lcd_Cmd(0);
  3031   00177E  0E00               	movlw	0
  3032   001780  ECAF  F00B         	call	_Lcd_Cmd
  3033                           
  3034                           ;./lcd.h: 35:  Lcd_Cmd(1);
  3035   001784  0E01               	movlw	1
  3036   001786  ECAF  F00B         	call	_Lcd_Cmd
  3037   00178A  0012               	return		;funcret
  3038   00178C                     __end_of_Lcd_Clear:
  3039                           	callstack 0
  3040                           
  3041 ;; *************** function _Lcd_Cmd *****************
  3042 ;; Defined at:
  3043 ;;		line 23 in file "./lcd.h"
  3044 ;; Parameters:    Size  Location     Type
  3045 ;;  a               1    wreg     unsigned char 
  3046 ;; Auto vars:     Size  Location     Type
  3047 ;;  a               1    2[COMRAM] unsigned char 
  3048 ;; Return value:  Size  Location     Type
  3049 ;;                  1    wreg      void 
  3050 ;; Registers used:
  3051 ;;		wreg, status,2, cstack
  3052 ;; Tracked objects:
  3053 ;;		On entry : 0/0
  3054 ;;		On exit  : 0/0
  3055 ;;		Unchanged: 0/0
  3056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3058 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3059 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3060 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3061 ;;Total ram usage:        2 bytes
  3062 ;; Hardware stack levels used: 1
  3063 ;; This function calls:
  3064 ;;		_Lcd_Port
  3065 ;; This function is called by:
  3066 ;;		_Lcd_Clear
  3067 ;;		_Lcd_Set_Cursor
  3068 ;;		_Lcd_Init
  3069 ;;		_Lcd_Shift_Right
  3070 ;;		_Lcd_Shift_Left
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           
  3074                           	psect	text14
  3075   00175E                     __ptext14:
  3076                           	callstack 0
  3077   00175E                     _Lcd_Cmd:
  3078                           	callstack 29
  3079                           
  3080                           ;incstack = 0
  3081                           ;Lcd_Cmd@a stored from wreg
  3082   00175E  6E03               	movwf	Lcd_Cmd@a^0,c
  3083   001760                     
  3084                           ;./lcd.h: 23: void Lcd_Cmd(char a);./lcd.h: 24: {;./lcd.h: 25:  PORTAbits.RA0 = 0;
  3085   001760  90CA               	bcf	202,0,c	;volatile
  3086   001762                     
  3087                           ;./lcd.h: 26:  Lcd_Port(a);
  3088   001762  5003               	movf	Lcd_Cmd@a^0,w,c
  3089   001764  EC11  F00B         	call	_Lcd_Port
  3090   001768                     
  3091                           ;./lcd.h: 27:  PORTAbits.RA1 = 1;
  3092   001768  82CA               	bsf	202,1,c	;volatile
  3093   00176A                     
  3094                           ;./lcd.h: 28:     _delay((unsigned long)((4)*(64000000/4000.0)));
  3095   00176A  0E54               	movlw	84
  3096   00176C  6E02               	movwf	??_Lcd_Cmd^0,c
  3097   00176E  0E1C               	movlw	28
  3098   001770                     u817:
  3099   001770  2EE8               	decfsz	wreg,f,c
  3100   001772  D7FE               	bra	u817
  3101   001774  2E02               	decfsz	??_Lcd_Cmd^0,f,c
  3102   001776  D7FC               	bra	u817
  3103   001778  D000               	nop2	
  3104   00177A                     
  3105                           ;./lcd.h: 29:     PORTAbits.RA1 = 0;
  3106   00177A  92CA               	bcf	202,1,c	;volatile
  3107   00177C  0012               	return		;funcret
  3108   00177E                     __end_of_Lcd_Cmd:
  3109                           	callstack 0
  3110                           
  3111 ;; *************** function _Lcd_Port *****************
  3112 ;; Defined at:
  3113 ;;		line 1 in file "./lcd.h"
  3114 ;; Parameters:    Size  Location     Type
  3115 ;;  a               1    wreg     unsigned char 
  3116 ;; Auto vars:     Size  Location     Type
  3117 ;;  a               1    0[COMRAM] unsigned char 
  3118 ;; Return value:  Size  Location     Type
  3119 ;;                  1    wreg      void 
  3120 ;; Registers used:
  3121 ;;		wreg
  3122 ;; Tracked objects:
  3123 ;;		On entry : 0/0
  3124 ;;		On exit  : 0/0
  3125 ;;		Unchanged: 0/0
  3126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3128 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3130 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3131 ;;Total ram usage:        1 bytes
  3132 ;; Hardware stack levels used: 1
  3133 ;; This function calls:
  3134 ;;		Nothing
  3135 ;; This function is called by:
  3136 ;;		_Lcd_Cmd
  3137 ;;		_Lcd_Init
  3138 ;;		_Lcd_Write_Char
  3139 ;; This function uses a non-reentrant model
  3140 ;;
  3141                           
  3142                           	psect	text15
  3143   001622                     __ptext15:
  3144                           	callstack 0
  3145   001622                     _Lcd_Port:
  3146                           	callstack 28
  3147                           
  3148                           ;incstack = 0
  3149                           ;Lcd_Port@a stored from wreg
  3150   001622  6E01               	movwf	Lcd_Port@a^0,c
  3151   001624                     
  3152                           ;./lcd.h: 1: void Lcd_Port(char a);./lcd.h: 2: {;./lcd.h: 3:  if(a & 1)
  3153   001624  A001               	btfss	Lcd_Port@a^0,0,c
  3154   001626  EF17  F00B         	goto	u11
  3155   00162A  EF19  F00B         	goto	u10
  3156   00162E                     u11:
  3157   00162E  EF1C  F00B         	goto	l81
  3158   001632                     u10:
  3159   001632                     
  3160                           ;./lcd.h: 4:   PORTAbits.RA2 = 1;
  3161   001632  84CA               	bsf	202,2,c	;volatile
  3162   001634  EF1D  F00B         	goto	l981
  3163   001638                     l81:
  3164                           
  3165                           ;./lcd.h: 6:   PORTAbits.RA2 = 0;
  3166   001638  94CA               	bcf	202,2,c	;volatile
  3167   00163A                     l981:
  3168                           
  3169                           ;./lcd.h: 8:  if(a & 2)
  3170   00163A  A201               	btfss	Lcd_Port@a^0,1,c
  3171   00163C  EF22  F00B         	goto	u21
  3172   001640  EF24  F00B         	goto	u20
  3173   001644                     u21:
  3174   001644  EF27  F00B         	goto	l83
  3175   001648                     u20:
  3176   001648                     
  3177                           ;./lcd.h: 9:   PORTAbits.RA3 = 1;
  3178   001648  86CA               	bsf	202,3,c	;volatile
  3179   00164A  EF28  F00B         	goto	l985
  3180   00164E                     l83:
  3181                           
  3182                           ;./lcd.h: 11:   PORTAbits.RA3 = 0;
  3183   00164E  96CA               	bcf	202,3,c	;volatile
  3184   001650                     l985:
  3185                           
  3186                           ;./lcd.h: 13:  if(a & 4)
  3187   001650  A401               	btfss	Lcd_Port@a^0,2,c
  3188   001652  EF2D  F00B         	goto	u31
  3189   001656  EF2F  F00B         	goto	u30
  3190   00165A                     u31:
  3191   00165A  EF32  F00B         	goto	l85
  3192   00165E                     u30:
  3193   00165E                     
  3194                           ;./lcd.h: 14:   PORTAbits.RA4 = 1;
  3195   00165E  88CA               	bsf	202,4,c	;volatile
  3196   001660  EF33  F00B         	goto	l989
  3197   001664                     l85:
  3198                           
  3199                           ;./lcd.h: 16:   PORTAbits.RA4 = 0;
  3200   001664  98CA               	bcf	202,4,c	;volatile
  3201   001666                     l989:
  3202                           
  3203                           ;./lcd.h: 18:  if(a & 8)
  3204   001666  A601               	btfss	Lcd_Port@a^0,3,c
  3205   001668  EF38  F00B         	goto	u41
  3206   00166C  EF3A  F00B         	goto	u40
  3207   001670                     u41:
  3208   001670  EF3D  F00B         	goto	l87
  3209   001674                     u40:
  3210   001674                     
  3211                           ;./lcd.h: 19:   PORTAbits.RA5 = 1;
  3212   001674  8ACA               	bsf	202,5,c	;volatile
  3213   001676  EF3E  F00B         	goto	l89
  3214   00167A                     l87:
  3215                           
  3216                           ;./lcd.h: 21:   PORTAbits.RA5 = 0;
  3217   00167A  9ACA               	bcf	202,5,c	;volatile
  3218   00167C                     l89:
  3219   00167C  0012               	return		;funcret
  3220   00167E                     __end_of_Lcd_Port:
  3221                           	callstack 0
  3222                           
  3223                           	psect	rparam
  3224   000001                     ___rparam_used  equ	1
  3225   000000                     ___param_bank   equ	0
  3226   000000                     __Lparam        equ	__Lrparam
  3227   000000                     __Hparam        equ	__Hrparam
  3228                           
  3229                           	psect	config
  3230                           
  3231                           ;Config register CONFIG1L @ 0x300000
  3232                           ;	External Oscillator Selection
  3233                           ;	FEXTOSC = OFF, Oscillator not enabled
  3234                           ;	Reset Oscillator Selection
  3235                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  3236   300000                     	org	3145728
  3237   300000  8C                 	db	140
  3238                           
  3239                           ;Config register CONFIG1H @ 0x300001
  3240                           ;	Clock out Enable bit
  3241                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  3242                           ;	PRLOCKED One-Way Set Enable bit
  3243                           ;	PR1WAY = OFF, PRLOCK bit can be set and cleared repeatedly
  3244                           ;	Clock Switch Enable bit
  3245                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  3246                           ;	Fail-Safe Clock Monitor Enable bit
  3247                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3248   300001                     	org	3145729
  3249   300001  FD                 	db	253
  3250                           
  3251                           ;Config register CONFIG2L @ 0x300002
  3252                           ;	MCLR Enable bit
  3253                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  3254                           ;	Power-up timer selection bits
  3255                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  3256                           ;	Multi-vector enable bit
  3257                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  3258                           ;	IVTLOCK bit One-way set enable bit
  3259                           ;	IVT1WAY = OFF, IVTLOCK bit can be cleared and set repeatedly
  3260                           ;	Low Power BOR Enable bit
  3261                           ;	LPBOREN = OFF, ULPBOR disabled
  3262                           ;	Brown-out Reset Enable bits
  3263                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  3264   300002                     	org	3145730
  3265   300002  E7                 	db	231
  3266                           
  3267                           ;Config register CONFIG2H @ 0x300003
  3268                           ;	Brown-out Reset Voltage Selection bits
  3269                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  3270                           ;	ZCD Disable bit
  3271                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  3272                           ;	PPSLOCK bit One-Way Set Enable bit
  3273                           ;	PPS1WAY = OFF, PPSLOCK bit can be set and cleared repeatedly (subject to the unlock se
      +                          quence)
  3274                           ;	Stack Full/Underflow Reset Enable bit
  3275                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3276                           ;	Debugger Enable bit
  3277                           ;	DEBUG = OFF, Background debugger disabled
  3278                           ;	Extended Instruction Set Enable bit
  3279                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3280   300003                     	org	3145731
  3281   300003  F7                 	db	247
  3282                           
  3283                           ;Config register CONFIG3L @ 0x300004
  3284                           ;	WDT Period selection bits
  3285                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3286                           ;	WDT operating mode
  3287                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  3288   300004                     	org	3145732
  3289   300004  9F                 	db	159
  3290                           
  3291                           ;Config register CONFIG3H @ 0x300005
  3292                           ;	WDT Window Select bits
  3293                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3294                           ;	WDT input clock selector
  3295                           ;	WDTCCS = SC, Software Control
  3296   300005                     	org	3145733
  3297   300005  FF                 	db	255
  3298                           
  3299                           ;Config register CONFIG4L @ 0x300006
  3300                           ;	Boot Block Size selection bits
  3301                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  3302                           ;	Boot Block enable bit
  3303                           ;	BBEN = OFF, Boot block disabled
  3304                           ;	Storage Area Flash enable bit
  3305                           ;	SAFEN = OFF, SAF disabled
  3306                           ;	Application Block write protection bit
  3307                           ;	WRTAPP = OFF, Application Block not write protected
  3308   300006                     	org	3145734
  3309   300006  FF                 	db	255
  3310                           
  3311                           ;Config register CONFIG4H @ 0x300007
  3312                           ;	Boot Block Write Protection bit
  3313                           ;	WRTB = OFF, Boot Block not write-protected
  3314                           ;	Configuration Register Write Protection bit
  3315                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  3316                           ;	Data EEPROM Write Protection bit
  3317                           ;	WRTD = OFF, Data EEPROM not write-protected
  3318                           ;	SAF Write protection bit
  3319                           ;	WRTSAF = OFF, SAF not Write Protected
  3320                           ;	Low Voltage Programming Enable bit
  3321                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  3322   300007                     	org	3145735
  3323   300007  DF                 	db	223
  3324                           
  3325                           ;Config register CONFIG5L @ 0x300008
  3326                           ;	PFM and Data EEPROM Code Protection bit
  3327                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  3328   300008                     	org	3145736
  3329   300008  FF                 	db	255
  3330                           
  3331                           ;Config register CONFIG5H @ 0x300009
  3332                           ;	unspecified, using default values
  3333   300009                     	org	3145737
  3334   300009  FF                 	db	255
  3335                           tosu	equ	0x3FFF
  3336                           tosh	equ	0x3FFE
  3337                           tosl	equ	0x3FFD
  3338                           stkptr	equ	0x3FFC
  3339                           pclatu	equ	0x3FFB
  3340                           pclath	equ	0x3FFA
  3341                           pcl	equ	0x3FF9
  3342                           tblptru	equ	0x3FF8
  3343                           tblptrh	equ	0x3FF7
  3344                           tblptrl	equ	0x3FF6
  3345                           tablat	equ	0x3FF5
  3346                           prodh	equ	0x3FF4
  3347                           prodl	equ	0x3FF3
  3348                           indf0	equ	0x3FEF
  3349                           postinc0	equ	0x3FEE
  3350                           postdec0	equ	0x3FED
  3351                           preinc0	equ	0x3FEC
  3352                           plusw0	equ	0x3FEB
  3353                           fsr0h	equ	0x3FEA
  3354                           fsr0l	equ	0x3FE9
  3355                           wreg	equ	0x3FE8
  3356                           indf1	equ	0x3FE7
  3357                           postinc1	equ	0x3FE6
  3358                           postdec1	equ	0x3FE5
  3359                           preinc1	equ	0x3FE4
  3360                           plusw1	equ	0x3FE3
  3361                           fsr1h	equ	0x3FE2
  3362                           fsr1l	equ	0x3FE1
  3363                           bsr	equ	0x3FE0
  3364                           indf2	equ	0x3FDF
  3365                           postinc2	equ	0x3FDE
  3366                           postdec2	equ	0x3FDD
  3367                           preinc2	equ	0x3FDC
  3368                           plusw2	equ	0x3FDB
  3369                           fsr2h	equ	0x3FDA
  3370                           fsr2l	equ	0x3FD9
  3371                           status	equ	0x3FD8

Data Sizes:
    Strings     13
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     28      28
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    bt_send_str@s	PTR const unsigned char  size(1) Largest target is 9
		 -> main@time_str(COMRAM[9]), 

    format_time@buffer	PTR unsigned char  size(1) Largest target is 9
		 -> main@time_str(COMRAM[9]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 13
		 -> main@time_str(COMRAM[9]), STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_rtc_write_dec
    _rtc_write_dec->_rtc_write
    _rtc_write->___awdiv
    _rtc_read_dec->_rtc_read
    _format_time->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0    2792
                                             14 COMRAM    14    14      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _bt_send_str
                        _format_time
                       _rtc_read_dec
                      _rtc_write_dec
 ---------------------------------------------------------------------------------
 (1) _rtc_write_dec                                        4     3      1     740
                                             10 COMRAM     4     3      1
                            ___awdiv
                            ___awmod
                          _rtc_write
 ---------------------------------------------------------------------------------
 (2) _rtc_write                                            2     1      1      52
                                              8 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _rtc_read_dec                                         3     3      0     120
                                              3 COMRAM     3     3      0
                           _rtc_read
 ---------------------------------------------------------------------------------
 (2) _rtc_read                                             3     1      2      46
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _format_time                                          4     0      4     946
                                              8 COMRAM     4     0      4
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     304
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     308
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _bt_send_str                                          1     0      1      46
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     6     4      2     212
                                              4 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     120
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     361
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     135
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      75
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0      75
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      60
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _bt_send_str
   _format_time
     ___awdiv
     ___awmod
   _rtc_read_dec
     _rtc_read
   _rtc_write_dec
     ___awdiv
     ___awmod
     _rtc_write
       ___awdiv (ARG)
       ___awmod (ARG)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMRAM           95      0       0      0.0%
BITBANK0           160      0       0      0.0%
BITBANK1           256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BITBIGSFRlh        756      0       0      0.0%
BITBIGSFRllll      679      0       0      0.0%
BITBIGSFRh         549      0       0      0.0%
BITBIGSFRllh       218      0       0      0.0%
BITBIGSFRlllh       98      0       0      0.0%
COMRAM              95     28      28     29.5%
BANK0              160      0       0      0.0%
BANK1              256      0       0      0.0%
BANK2              256      0       0      0.0%
BANK3              256      0       0      0.0%
BANK4              256      0       0      0.0%
BANK5              256      0       0      0.0%
BANK6              256      0       0      0.0%
BANK7              256      0       0      0.0%
BANK8              256      0       0      0.0%
BANK9              256      0       0      0.0%
BANK10             256      0       0      0.0%
BANK11             256      0       0      0.0%
BANK12             256      0       0      0.0%
BANK13             256      0       0      0.0%
BANK14             256      0       0      0.0%
BANK15             256      0       0      0.0%
BIGRAM            4095      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      28      0.0%


Microchip Technology PIC18 Macro Assembler V3.10 build 20250813170317 
Symbol Table                                                                                   Fri Oct 17 09:35:04 2025

                      l81 1638                        l83 164E                        l92 177C  
                      l85 1664                        l87 167A                        l95 178A  
                      l89 167C                        u10 1632                        u11 162E  
                      u20 1648                        u21 1644                        u30 165E  
                      u31 165A                        u40 1674                        u41 1670  
            ___awdiv@sign 0006              bt_send_str@s 0001                       l101 1620  
                     l104 1554                       l113 1454                       l130 1476  
                     l107 173A                       l131 1478                       l140 14B2  
                     l125 1256                       l142 14C0                       l134 1486  
                     l151 155A                       l143 14C6                       l136 1494  
                     l128 1468                       l161 15BA                       l145 14D4  
                     l137 14A0                       l146 14D8                       l170 16B8  
                     l155 158E                       l139 14AE                       l172 16C6  
                     l164 1694                       l173 16C8                       l158 15A4  
                     l166 16A2                       l167 16A4                       l176 1702  
                     l169 16B2                       l179 175C                       l535 1316  
                     l548 13C4                       l981 163A                       l991 1674  
                     l983 1648                       l985 1650                       l977 1624  
                     l993 1760                       l987 165E                       l979 1632  
                     l995 1762                       l989 1666                       l997 1768  
                     l999 176A                       u400 1476                       u401 1472  
                     u410 1486                       u411 1482                       u500 1282  
                     u420 1494                       u501 127E                       u421 1490  
                     u510 12A6                       u430 14AE                       u511 12A2  
                     u431 14AA                       u520 12C4                       u600 13B4  
                     u440 14C0                       u521 12C0                       u601 13B0  
                     u441 14BC                       u610 15CE                       u530 12E0  
                     u450 14D4                       u611 15CA                       u531 12DC  
                     u451 14D0                       u620 1602                       u540 1306  
                     u460 16A2                       u700 10D8                       u621 15FE  
                     u541 1302                       u461 169E                       u701 10D4  
                     u630 1406                       u550 1328                       u470 16B2  
                     u710 10EA                       u551 1324                       u471 16AE  
                     u711 10E6                       u640 1444                       u560 1342  
                     u480 16C6                       u720 10FC                       u561 133E  
                     u481 16C2                       u721 10F8                       u650 1454  
                     u490 1268                       u570 135C                       u730 110E  
                     u651 1450                       u491 1264                       u571 1358  
                     u731 1106                       u660 156A                       u580 137A  
                     u637 13F8                       u661 1566                       u581 1376  
                     u670 158E                       u590 1390                       u807 151A  
                     u647 1436                       u671 158A                       u591 138C  
                     u680 159E                       u817 1770                       u681 159A  
                     u690 15B4                       u691 15B0                       u748 1110  
                     u757 109C                       u767 1720                       u777 1732  
                     u787 14EA                       u797 1504            ?_rtc_write_dec 000B  
            ___awmod@sign 0006                       wreg 3FE8                      l1001 177A  
                    l1011 171E                      l1003 1706                      l1021 1738  
                    l1013 1726                      l1005 1712                      l1015 1728  
                    l1007 1714                      l1017 172E                      l1009 171C  
                    l1019 1730                      l1125 177E                      l1301 1268  
                    l1151 150E                      l1143 14DA                      l1311 128E  
                    l1303 1270                      l1161 1536                      l1153 1514  
                    l1145 14E0                      l1321 12C4                      l1313 1294  
                    l1305 1274                      l1401 1172                      l1163 153C  
                    l1155 1524                      l1147 14F8                      l1331 12F0  
                    l1323 12CA                      l1315 12A6                      l1307 1282  
                    l1411 124A                      l1403 11AE                      l1165 1542  
                    l1157 152A                      l1149 14FE                      l1421 159E  
                    l1413 1556                      l1325 12E0                      l1317 12AE  
                    l1333 12F6                      l1309 128A                      l1341 1318  
                    l1405 11BC                      l1167 1548                      l1159 1530  
                    l1423 15B4                      l1415 156A                      l1335 1306  
                    l1327 12E8                      l1319 12B6                      l1351 1342  
                    l1343 131A                      l1407 11DC                      l1169 154E  
                    l1417 1576                      l1337 130E                      l1329 12EA  
                    l1361 137A                      l1353 134A                      l1345 1328  
                    l1409 11FC                      l1281 1496                      l1425 16CC  
                    l1441 1028                      l1433 1010                      l1419 1578  
                    l1371 13B4                      l1363 1390                      l1355 135C  
                    l1347 1330                      l1283 149E                      l1275 1456  
                    l1427 173E                      l1291 1684                      l1451 1070  
                    l1443 102A                      l1435 101C                      l1381 15E0  
                    l1373 13BC                      l1365 1398                      l1357 1364  
                    l1349 1334                      l1285 14D6                      l1277 1460  
                    l1429 174A                      l1293 168C                      l1461 10AA  
                    l1453 1074                      l1445 1056                      l1437 1020  
                    l1391 161A                      l1383 15E6                      l1367 139E  
                    l1359 136C                      l1279 1466                      l1295 1692  
                    l1471 10EA                      l1463 10B4                      l1455 1078  
                    l1447 1068                      l1439 1022                      l1385 15F0  
                    l1377 15BE                      l1393 13C6                      l1297 1258  
                    l1369 13A4                      l1289 1680                      l1481 1136  
                    l1473 10FC                      l1465 10BE                      l1457 1082  
                    l1449 106C                      l1387 1602                      l1379 15CE  
                    l1395 13D0                      l1299 125A                      l1483 114A  
                    l1475 111E                      l1467 10C8                      l1459 1092  
                    l1389 1614                      l1397 140A                      l1485 114E  
                    l1477 1126                      l1469 10D8                      l1399 140E  
                    l1487 1158                      l1479 112E                      l1489 1162  
                    STR_1 1001         ?_Lcd_Write_String 0005                      _main 1010  
                    fsr0h 3FEA                      indf0 3FEF                      fsr2h 3FDA  
                    fsr0l 3FE9                      indf2 3FDF                      fsr2l 3FD9  
                    prodl 3FF3                      start FFFC        ??_Lcd_Write_String 0007  
         __end_of_Lcd_Cmd 177E              ___param_bank 0000              ?_format_time 0009  
                   ?_main 0001           __end_of___awdiv 1318           __end_of___awmod 13C6  
         ___awdiv@divisor 0003                     _U2BRG 3DDD                     _U2RXB 3DD0  
                   _U2TXB 3DD2           ___awdiv@counter 0005                     _PORTB 3FCB  
                   _PORTC 3FCC                     _TRISA 3FC2                     _TRISB 3FC3  
                   _TRISC 3FC4            rtc_read@result 0003                     main@h 001C  
                   main@m 001B                     main@s 001A              main@time_str 0011  
                   tablat 3FF5                     status 3FD8   rtc_read_dec@reg_address 0005  
        __end_of_Lcd_Init 1556          __end_of_Lcd_Port 167E           __initialization 178C  
            __end_of_main 1172           ??_rtc_write_dec 000C                    ??_main 000F  
           __activetblptr 0002          ___awdiv@dividend 0001                    _ANSELA 3A40  
                  _ANSELB 3A50                    _ANSELC 3A60                    _U2CON0 3DDA  
                  _U2CON1 3DDB                    _U2CON2 3DDC                    _RB1PPS 3A09  
                  _RB2PPS 3A0A                    _RB6PPS 3A0E                    _ODCONB 3A52  
                  _RC6PPS 3A16                 ??_Lcd_Cmd 0002                 ??___awdiv 0005  
               ??___awmod 0005          ___awdiv@quotient 0007           ___awmod@divisor 0003  
                  isa$std 0001           ___awmod@counter 0005          format_time@hours 000A  
         rtc_read_dec@bcd 0006              __mediumconst 1000          __end_of_rtc_read 14DA  
                  tblptrh 3FF7                    tblptrl 3FF6                    tblptru 3FF8  
         Lcd_Set_Cursor@a 0005           Lcd_Set_Cursor@b 0004           Lcd_Set_Cursor@y 0007  
         Lcd_Set_Cursor@z 0006                __accesstop 0060   __end_of__initialization 178C  
       __end_of_Lcd_Clear 178C             ___rparam_used 0001            __pcstackCOMRAM 0001  
          _Lcd_Set_Cursor 15BC                 ?_Lcd_Init 0001                 ?_Lcd_Port 0001  
                 _I2C2CLK 3D65                   _I2C2CNT 3D56                   _I2C2RXB 3D54  
                 _I2C2TXB 3D55    __end_of_Lcd_Set_Cursor 1622                   _U1RXPPS 3AE7  
                 _U2RXPPS 3AEA                ??_Lcd_Init 0004                ??_Lcd_Port 0001  
          rtc_write@value 0009            _Lcd_Write_Char 1704                   _Lcd_Cmd 175E  
                 __Hparam 0000                   __Lparam 0000                 ?_rtc_read 0001  
                 ___awdiv 1258                   ___awmod 1318              __psmallconst 1000  
                 __pcinit 178C                   __ramtop 1000           ?_Lcd_Set_Cursor 0004  
                 __ptext0 1010                   __ptext1 16CA                   __ptext2 167E  
                 __ptext3 173C                   __ptext4 1456                   __ptext5 1172  
                 __ptext6 1318                   __ptext7 1258                   __ptext8 1556  
                 __ptext9 13C6          ___awmod@dividend 0001               _I2C2PIRbits 3D63  
  __end_of_Lcd_Write_Char 173C      end_of_initialization 178C         format_time@buffer 0009  
           __Lmediumconst 0000         __end_of_rtc_write 16CA                ??_rtc_read 0003  
               Lcd_Port@a 0001        rtc_read@reg_adress 0001             ?_rtc_read_dec 0001  
               _PORTAbits 3FCA                 _PORTCbits 3FCC     __end_of_rtc_write_dec 1704  
         ?_Lcd_Write_Char 0001         Lcd_Write_String@a 0005         Lcd_Write_String@i 0009  
           ??_bt_send_str 0002                 _Lcd_Clear 177E            ??_rtc_read_dec 0004  
        _Lcd_Write_String 13C6       start_initialization 178C                ?_Lcd_Clear 0001  
     __end_of_bt_send_str 15BC             ??_format_time 000D  rtc_write_dec@reg_address 000E  
         Lcd_Write_Char@a 0004           Lcd_Write_Char@y 0003                  ?_Lcd_Cmd 0001  
        ??_Lcd_Set_Cursor 0005                  ?___awdiv 0001                  ?___awmod 0001  
                _I2C2ADB1 3D58                  _I2C2CON0 3D5D               __smallconst 1000  
     __end_of_format_time 1258      __end_of_rtc_read_dec 175E                _I2C2SDAPPS 3AE6  
              _I2C2SCLPPS 3AE5               _bt_send_str 1556      rtc_write@reg_address 000A  
                Lcd_Cmd@a 0003                  _PIR7bits 39A7               ??_Lcd_Clear 0004  
           _I2C2STAT1bits 3D62                 _rtc_write 167E          ??_Lcd_Write_Char 0002  
                _Lcd_Init 14DA                  _Lcd_Port 1622  __end_of_Lcd_Write_String 1456  
                __Hrparam 0000                  __Lrparam 0000               _format_time 1172  
              ?_rtc_write 0009              _I2C2CON0bits 3D5D              _I2C2CON1bits 3D5E  
                __ptext10 1704                  __ptext11 15BC                  __ptext12 14DA  
                __ptext13 177E                  __ptext14 175E                  __ptext15 1622  
              _U2CON0bits 3DDA                _U2FIFObits 3DDF                  isa$xinst 0000  
                _rtc_read 1456        format_time@minutes 000B        format_time@seconds 000C  
      Lcd_Write_Char@temp 0002    rtc_write_dec@value_dec 000B               ??_rtc_write 000A  
            _rtc_read_dec 173C        Lcd_Set_Cursor@temp 0008             _rtc_write_dec 16CA  
            ?_bt_send_str 0001  
