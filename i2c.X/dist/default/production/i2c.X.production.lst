

Microchip MPLAB XC8 Assembler V3.10 build 20250813170317 
                                                                                               Fri Oct 10 09:12:58 2025

Microchip MPLAB XC8 C Compiler v3.10 (Free license) build 20250813170317 Og1 
     1                           	processor	18F26K83
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=3
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=3
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=3
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=2
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=2
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    29   000000                     
    30                           ; Generated 12/10/2023 GMT
    31                           ; 
    32                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F26K83 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64   003FE0                     bsr             equ	16352
    65   003FE9                     fsr0            equ	16361
    66   003FEA                     fsr0h           equ	16362
    67   003FE9                     fsr0l           equ	16361
    68   003FE1                     fsr1            equ	16353
    69   003FE2                     fsr1h           equ	16354
    70   003FE1                     fsr1l           equ	16353
    71   003FD9                     fsr2            equ	16345
    72   003FDA                     fsr2h           equ	16346
    73   003FD9                     fsr2l           equ	16345
    74   003FEF                     indf0           equ	16367
    75   003FE7                     indf1           equ	16359
    76   003FDF                     indf2           equ	16351
    77   003FD2                     intcon          equ	16338
    78   0039E5                     nvmcon          equ	14821
    79   003FF9                     pcl             equ	16377
    80   003FFA                     pclath          equ	16378
    81   003FFB                     pclatu          equ	16379
    82   003FEB                     plusw0          equ	16363
    83   003FE3                     plusw1          equ	16355
    84   003FDB                     plusw2          equ	16347
    85   003FED                     postdec0        equ	16365
    86   003FE5                     postdec1        equ	16357
    87   003FDD                     postdec2        equ	16349
    88   003FEE                     postinc0        equ	16366
    89   003FE6                     postinc1        equ	16358
    90   003FDE                     postinc2        equ	16350
    91   003FEC                     preinc0         equ	16364
    92   003FE4                     preinc1         equ	16356
    93   003FDC                     preinc2         equ	16348
    94   003FF3                     prod            equ	16371
    95   003FF4                     prodh           equ	16372
    96   003FF3                     prodl           equ	16371
    97   003FD8                     status          equ	16344
    98   003FF5                     tablat          equ	16373
    99   003FF6                     tblptr          equ	16374
   100   003FF7                     tblptrh         equ	16375
   101   003FF6                     tblptrl         equ	16374
   102   003FF8                     tblptru         equ	16376
   103   003FFD                     tosl            equ	16381
   104   003FE8                     wreg            equ	16360
   105   003700                     CIOCON          equ	14080	;# 
   106   003701                     RXERRCNT        equ	14081	;# 
   107   003702                     TXERRCNT        equ	14082	;# 
   108   003703                     BRGCON1         equ	14083	;# 
   109   003704                     BRGCON2         equ	14084	;# 
   110   003705                     BRGCON3         equ	14085	;# 
   111   003706                     RXFCON0         equ	14086	;# 
   112   003707                     RXFCON1         equ	14087	;# 
   113   003708                     RXF6SIDH        equ	14088	;# 
   114   003709                     RXF6SIDL        equ	14089	;# 
   115   00370A                     RXF6EIDH        equ	14090	;# 
   116   00370B                     RXF6EIDL        equ	14091	;# 
   117   00370C                     RXF7SIDH        equ	14092	;# 
   118   00370D                     RXF7SIDL        equ	14093	;# 
   119   00370E                     RXF7EIDH        equ	14094	;# 
   120   00370F                     RXF7EIDL        equ	14095	;# 
   121   003710                     RXF8SIDH        equ	14096	;# 
   122   003711                     RXF8SIDL        equ	14097	;# 
   123   003712                     RXF8EIDH        equ	14098	;# 
   124   003713                     RXF8EIDL        equ	14099	;# 
   125   003714                     RXF9SIDH        equ	14100	;# 
   126   003715                     RXF9SIDL        equ	14101	;# 
   127   003716                     RXF9EIDH        equ	14102	;# 
   128   003717                     RXF9EIDL        equ	14103	;# 
   129   003718                     RXF10SIDH       equ	14104	;# 
   130   003719                     RXF10SIDL       equ	14105	;# 
   131   00371A                     RXF10EIDH       equ	14106	;# 
   132   00371B                     RXF10EIDL       equ	14107	;# 
   133   00371C                     RXF11SIDH       equ	14108	;# 
   134   00371D                     RXF11SIDL       equ	14109	;# 
   135   00371E                     RXF11EIDH       equ	14110	;# 
   136   00371F                     RXF11EIDL       equ	14111	;# 
   137   003720                     RXF12SIDH       equ	14112	;# 
   138   003721                     RXF12SIDL       equ	14113	;# 
   139   003722                     RXF12EIDH       equ	14114	;# 
   140   003723                     RXF12EIDL       equ	14115	;# 
   141   003724                     RXF13SIDH       equ	14116	;# 
   142   003725                     RXF13SIDL       equ	14117	;# 
   143   003726                     RXF13EIDH       equ	14118	;# 
   144   003727                     RXF13EIDL       equ	14119	;# 
   145   003728                     RXF14SIDH       equ	14120	;# 
   146   003729                     RXF14SIDL       equ	14121	;# 
   147   00372A                     RXF14EIDH       equ	14122	;# 
   148   00372B                     RXF14EIDL       equ	14123	;# 
   149   00372C                     RXF15SIDH       equ	14124	;# 
   150   00372D                     RXF15SIDL       equ	14125	;# 
   151   00372E                     RXF15EIDH       equ	14126	;# 
   152   00372F                     RXF15EIDL       equ	14127	;# 
   153   003730                     SDFLC           equ	14128	;# 
   154   003731                     RXFBCON0        equ	14129	;# 
   155   003732                     RXFBCON1        equ	14130	;# 
   156   003733                     RXFBCON2        equ	14131	;# 
   157   003734                     RXFBCON3        equ	14132	;# 
   158   003735                     RXFBCON4        equ	14133	;# 
   159   003736                     RXFBCON5        equ	14134	;# 
   160   003737                     RXFBCON6        equ	14135	;# 
   161   003738                     RXFBCON7        equ	14136	;# 
   162   003739                     MSEL0           equ	14137	;# 
   163   00373A                     MSEL1           equ	14138	;# 
   164   00373B                     MSEL2           equ	14139	;# 
   165   00373C                     MSEL3           equ	14140	;# 
   166   00373D                     BSEL0           equ	14141	;# 
   167   00373E                     BIE0            equ	14142	;# 
   168   00373F                     TXBIE           equ	14143	;# 
   169   003740                     B0CON           equ	14144	;# 
   170   003741                     B0SIDH          equ	14145	;# 
   171   003742                     B0SIDL          equ	14146	;# 
   172   003743                     B0EIDH          equ	14147	;# 
   173   003744                     B0EIDL          equ	14148	;# 
   174   003745                     B0DLC           equ	14149	;# 
   175   003746                     B0D0            equ	14150	;# 
   176   003747                     B0D1            equ	14151	;# 
   177   003748                     B0D2            equ	14152	;# 
   178   003749                     B0D3            equ	14153	;# 
   179   00374A                     B0D4            equ	14154	;# 
   180   00374B                     B0D5            equ	14155	;# 
   181   00374C                     B0D6            equ	14156	;# 
   182   00374D                     B0D7            equ	14157	;# 
   183   00374E                     CANSTAT_RO9     equ	14158	;# 
   184   00374F                     CANCON_RO9      equ	14159	;# 
   185   003750                     B1CON           equ	14160	;# 
   186   003751                     B1SIDH          equ	14161	;# 
   187   003752                     B1SIDL          equ	14162	;# 
   188   003753                     B1EIDH          equ	14163	;# 
   189   003754                     B1EIDL          equ	14164	;# 
   190   003755                     B1DLC           equ	14165	;# 
   191   003756                     B1D0            equ	14166	;# 
   192   003757                     B1D1            equ	14167	;# 
   193   003758                     B1D2            equ	14168	;# 
   194   003759                     B1D3            equ	14169	;# 
   195   00375A                     B1D4            equ	14170	;# 
   196   00375B                     B1D5            equ	14171	;# 
   197   00375C                     B1D6            equ	14172	;# 
   198   00375D                     B1D7            equ	14173	;# 
   199   00375E                     CANSTAT_RO8     equ	14174	;# 
   200   00375F                     CANCON_RO8      equ	14175	;# 
   201   003760                     B2CON           equ	14176	;# 
   202   003761                     B2SIDH          equ	14177	;# 
   203   003762                     B2SIDL          equ	14178	;# 
   204   003763                     B2EIDH          equ	14179	;# 
   205   003764                     B2EIDL          equ	14180	;# 
   206   003765                     B2DLC           equ	14181	;# 
   207   003766                     B2D0            equ	14182	;# 
   208   003767                     B2D1            equ	14183	;# 
   209   003768                     B2D2            equ	14184	;# 
   210   003769                     B2D3            equ	14185	;# 
   211   00376A                     B2D4            equ	14186	;# 
   212   00376B                     B2D5            equ	14187	;# 
   213   00376C                     B2D6            equ	14188	;# 
   214   00376D                     B2D7            equ	14189	;# 
   215   00376E                     CANSTAT_RO7     equ	14190	;# 
   216   00376F                     CANCON_RO7      equ	14191	;# 
   217   003770                     B3CON           equ	14192	;# 
   218   003771                     B3SIDH          equ	14193	;# 
   219   003772                     B3SIDL          equ	14194	;# 
   220   003773                     B3EIDH          equ	14195	;# 
   221   003774                     B3EIDL          equ	14196	;# 
   222   003775                     B3DLC           equ	14197	;# 
   223   003776                     B3D0            equ	14198	;# 
   224   003777                     B3D1            equ	14199	;# 
   225   003778                     B3D2            equ	14200	;# 
   226   003779                     B3D3            equ	14201	;# 
   227   00377A                     B3D4            equ	14202	;# 
   228   00377B                     B3D5            equ	14203	;# 
   229   00377C                     B3D6            equ	14204	;# 
   230   00377D                     B3D7            equ	14205	;# 
   231   00377E                     CANSTAT_RO6     equ	14206	;# 
   232   00377F                     CANCON_RO6      equ	14207	;# 
   233   003780                     B4CON           equ	14208	;# 
   234   003781                     B4SIDH          equ	14209	;# 
   235   003782                     B4SIDL          equ	14210	;# 
   236   003783                     B4EIDH          equ	14211	;# 
   237   003784                     B4EIDL          equ	14212	;# 
   238   003785                     B4DLC           equ	14213	;# 
   239   003786                     B4D0            equ	14214	;# 
   240   003787                     B4D1            equ	14215	;# 
   241   003788                     B4D2            equ	14216	;# 
   242   003789                     B4D3            equ	14217	;# 
   243   00378A                     B4D4            equ	14218	;# 
   244   00378B                     B4D5            equ	14219	;# 
   245   00378C                     B4D6            equ	14220	;# 
   246   00378D                     B4D7            equ	14221	;# 
   247   00378E                     CANSTAT_RO5     equ	14222	;# 
   248   00378F                     CANCON_RO5      equ	14223	;# 
   249   003790                     B5CON           equ	14224	;# 
   250   003791                     B5SIDH          equ	14225	;# 
   251   003792                     B5SIDL          equ	14226	;# 
   252   003793                     B5EIDH          equ	14227	;# 
   253   003794                     B5EIDL          equ	14228	;# 
   254   003795                     B5DLC           equ	14229	;# 
   255   003796                     B5D0            equ	14230	;# 
   256   003797                     B5D1            equ	14231	;# 
   257   003798                     B5D2            equ	14232	;# 
   258   003799                     B5D3            equ	14233	;# 
   259   00379A                     B5D4            equ	14234	;# 
   260   00379B                     B5D5            equ	14235	;# 
   261   00379C                     B5D6            equ	14236	;# 
   262   00379D                     B5D7            equ	14237	;# 
   263   00379E                     CANSTAT_RO4     equ	14238	;# 
   264   00379F                     CANCON_RO4      equ	14239	;# 
   265   0037A0                     RXF0SIDH        equ	14240	;# 
   266   0037A1                     RXF0SIDL        equ	14241	;# 
   267   0037A2                     RXF0EIDH        equ	14242	;# 
   268   0037A3                     RXF0EIDL        equ	14243	;# 
   269   0037A4                     RXF1SIDH        equ	14244	;# 
   270   0037A5                     RXF1SIDL        equ	14245	;# 
   271   0037A6                     RXF1EIDH        equ	14246	;# 
   272   0037A7                     RXF1EIDL        equ	14247	;# 
   273   0037A8                     RXF2SIDH        equ	14248	;# 
   274   0037A9                     RXF2SIDL        equ	14249	;# 
   275   0037AA                     RXF2EIDH        equ	14250	;# 
   276   0037AB                     RXF2EIDL        equ	14251	;# 
   277   0037AC                     RXF3SIDH        equ	14252	;# 
   278   0037AD                     RXF3SIDL        equ	14253	;# 
   279   0037AE                     RXF3EIDH        equ	14254	;# 
   280   0037AF                     RXF3EIDL        equ	14255	;# 
   281   0037B0                     RXF4SIDH        equ	14256	;# 
   282   0037B1                     RXF4SIDL        equ	14257	;# 
   283   0037B2                     RXF4EIDH        equ	14258	;# 
   284   0037B3                     RXF4EIDL        equ	14259	;# 
   285   0037B4                     RXF5SIDH        equ	14260	;# 
   286   0037B5                     RXF5SIDL        equ	14261	;# 
   287   0037B6                     RXF5EIDH        equ	14262	;# 
   288   0037B7                     RXF5EIDL        equ	14263	;# 
   289   0037B8                     RXM0SIDH        equ	14264	;# 
   290   0037B9                     RXM0SIDL        equ	14265	;# 
   291   0037BA                     RXM0EIDH        equ	14266	;# 
   292   0037BB                     RXM0EIDL        equ	14267	;# 
   293   0037BC                     RXM1SIDH        equ	14268	;# 
   294   0037BD                     RXM1SIDL        equ	14269	;# 
   295   0037BE                     RXM1EIDH        equ	14270	;# 
   296   0037BF                     RXM1EIDL        equ	14271	;# 
   297   0037C0                     TXB2CON         equ	14272	;# 
   298   0037C1                     TXB2SIDH        equ	14273	;# 
   299   0037C2                     TXB2SIDL        equ	14274	;# 
   300   0037C3                     TXB2EIDH        equ	14275	;# 
   301   0037C4                     TXB2EIDL        equ	14276	;# 
   302   0037C5                     TXB2DLC         equ	14277	;# 
   303   0037C6                     TXB2D0          equ	14278	;# 
   304   0037C7                     TXB2D1          equ	14279	;# 
   305   0037C8                     TXB2D2          equ	14280	;# 
   306   0037C9                     TXB2D3          equ	14281	;# 
   307   0037CA                     TXB2D4          equ	14282	;# 
   308   0037CB                     TXB2D5          equ	14283	;# 
   309   0037CC                     TXB2D6          equ	14284	;# 
   310   0037CD                     TXB2D7          equ	14285	;# 
   311   0037CE                     CANSTAT_R03     equ	14286	;# 
   312   0037CF                     CANCON_R03      equ	14287	;# 
   313   0037D0                     TXB1CON         equ	14288	;# 
   314   0037D1                     TXB1SIDH        equ	14289	;# 
   315   0037D2                     TXB1SIDL        equ	14290	;# 
   316   0037D3                     TXB1EIDH        equ	14291	;# 
   317   0037D4                     TXB1EIDL        equ	14292	;# 
   318   0037D5                     TXB1DLC         equ	14293	;# 
   319   0037D6                     TXB1D0          equ	14294	;# 
   320   0037D7                     TXB1D1          equ	14295	;# 
   321   0037D8                     TXB1D2          equ	14296	;# 
   322   0037D9                     TXB1D3          equ	14297	;# 
   323   0037DA                     TXB1D4          equ	14298	;# 
   324   0037DB                     TXB1D5          equ	14299	;# 
   325   0037DC                     TXB1D6          equ	14300	;# 
   326   0037DD                     TXB1D7          equ	14301	;# 
   327   0037DE                     CANSTAT_RO2     equ	14302	;# 
   328   0037DF                     CANCON_RO2      equ	14303	;# 
   329   0037E0                     TXB0CON         equ	14304	;# 
   330   0037E1                     TXB0SIDH        equ	14305	;# 
   331   0037E2                     TXB0SIDL        equ	14306	;# 
   332   0037E3                     TXB0EIDH        equ	14307	;# 
   333   0037E4                     TXB0EIDL        equ	14308	;# 
   334   0037E5                     TXB0DLC         equ	14309	;# 
   335   0037E6                     TXB0D0          equ	14310	;# 
   336   0037E7                     TXB0D1          equ	14311	;# 
   337   0037E8                     TXB0D2          equ	14312	;# 
   338   0037E9                     TXB0D3          equ	14313	;# 
   339   0037EA                     TXB0D4          equ	14314	;# 
   340   0037EB                     TXB0D5          equ	14315	;# 
   341   0037EC                     TXB0D6          equ	14316	;# 
   342   0037ED                     TXB0D7          equ	14317	;# 
   343   0037EE                     CANSTAT_RO1     equ	14318	;# 
   344   0037EF                     CANCON_RO1      equ	14319	;# 
   345   0037F0                     RXB1CON         equ	14320	;# 
   346   0037F1                     RXB1SIDH        equ	14321	;# 
   347   0037F2                     RXB1SIDL        equ	14322	;# 
   348   0037F3                     RXB1EIDH        equ	14323	;# 
   349   0037F4                     RXB1EIDL        equ	14324	;# 
   350   0037F5                     RXB1DLC         equ	14325	;# 
   351   0037F6                     RXB1D0          equ	14326	;# 
   352   0037F7                     RXB1D1          equ	14327	;# 
   353   0037F8                     RXB1D2          equ	14328	;# 
   354   0037F9                     RXB1D3          equ	14329	;# 
   355   0037FA                     RXB1D4          equ	14330	;# 
   356   0037FB                     RXB1D5          equ	14331	;# 
   357   0037FC                     RXB1D6          equ	14332	;# 
   358   0037FD                     RXB1D7          equ	14333	;# 
   359   0037FE                     CANSTAT_RO0     equ	14334	;# 
   360   0037FF                     CANCON_RO0      equ	14335	;# 
   361   003880                     STATUS_CSHAD    equ	14464	;# 
   362   003881                     WREG_CSHAD      equ	14465	;# 
   363   003882                     BSR_CSHAD       equ	14466	;# 
   364   003883                     SHADCON         equ	14467	;# 
   365   003884                     STATUS_SHAD     equ	14468	;# 
   366   003885                     WREG_SHAD       equ	14469	;# 
   367   003886                     BSR_SHAD        equ	14470	;# 
   368   003887                     PCLATH_SHAD     equ	14471	;# 
   369   003888                     PCLATU_SHAD     equ	14472	;# 
   370   003889                     FSR0SH          equ	14473	;# 
   371   003889                     FSR0L_SHAD      equ	14473	;# 
   372   00388A                     FSR0H_SHAD      equ	14474	;# 
   373   00388B                     FSR1SH          equ	14475	;# 
   374   00388B                     FSR1L_SHAD      equ	14475	;# 
   375   00388C                     FSR1H_SHAD      equ	14476	;# 
   376   00388D                     FSR2SH          equ	14477	;# 
   377   00388D                     FSR2L_SHAD      equ	14477	;# 
   378   00388E                     FSR2H_SHAD      equ	14478	;# 
   379   00388F                     PRODSH          equ	14479	;# 
   380   00388F                     PRODL_SHAD      equ	14479	;# 
   381   003890                     PRODH_SHAD      equ	14480	;# 
   382   00389D                     IVTADL          equ	14493	;# 
   383   00389E                     IVTADH          equ	14494	;# 
   384   00389F                     IVTADU          equ	14495	;# 
   385   00395B                     WDTCON0         equ	14683	;# 
   386   00395C                     WDTCON1         equ	14684	;# 
   387   00395D                     WDTPSL          equ	14685	;# 
   388   00395E                     WDTPSH          equ	14686	;# 
   389   00395F                     WDTTMR          equ	14687	;# 
   390   003960                     CRCDATA         equ	14688	;# 
   391   003960                     CRCDATL         equ	14688	;# 
   392   003961                     CRCDATH         equ	14689	;# 
   393   003962                     CRCACC          equ	14690	;# 
   394   003962                     CRCACCL         equ	14690	;# 
   395   003963                     CRCACCH         equ	14691	;# 
   396   003964                     CRCSHFT         equ	14692	;# 
   397   003964                     CRCSHIFTL       equ	14692	;# 
   398   003965                     CRCSHIFTH       equ	14693	;# 
   399   003966                     CRCXOR          equ	14694	;# 
   400   003966                     CRCXORL         equ	14694	;# 
   401   003967                     CRCXORH         equ	14695	;# 
   402   003968                     CRCCON0         equ	14696	;# 
   403   003969                     CRCCON1         equ	14697	;# 
   404   003976                     SCANLADR        equ	14710	;# 
   405   003976                     SCANLADRL       equ	14710	;# 
   406   003977                     SCANLADRH       equ	14711	;# 
   407   003978                     SCANLADRU       equ	14712	;# 
   408   003979                     SCANHADR        equ	14713	;# 
   409   003979                     SCANHADRL       equ	14713	;# 
   410   00397A                     SCANHADRH       equ	14714	;# 
   411   00397B                     SCANHADRU       equ	14715	;# 
   412   00397C                     SCANCON0        equ	14716	;# 
   413   00397D                     SCANTRIG        equ	14717	;# 
   414   003980                     IPR0            equ	14720	;# 
   415   003981                     IPR1            equ	14721	;# 
   416   003982                     IPR2            equ	14722	;# 
   417   003983                     IPR3            equ	14723	;# 
   418   003984                     IPR4            equ	14724	;# 
   419   003985                     IPR5            equ	14725	;# 
   420   003986                     IPR6            equ	14726	;# 
   421   003987                     IPR7            equ	14727	;# 
   422   003988                     IPR8            equ	14728	;# 
   423   003989                     IPR9            equ	14729	;# 
   424   003990                     PIE0            equ	14736	;# 
   425   003991                     PIE1            equ	14737	;# 
   426   003992                     PIE2            equ	14738	;# 
   427   003993                     PIE3            equ	14739	;# 
   428   003994                     PIE4            equ	14740	;# 
   429   003995                     PIE5            equ	14741	;# 
   430   003996                     PIE6            equ	14742	;# 
   431   003997                     PIE7            equ	14743	;# 
   432   003998                     PIE8            equ	14744	;# 
   433   003999                     PIE9            equ	14745	;# 
   434   0039A0                     PIR0            equ	14752	;# 
   435   0039A1                     PIR1            equ	14753	;# 
   436   0039A2                     PIR2            equ	14754	;# 
   437   0039A3                     PIR3            equ	14755	;# 
   438   0039A4                     PIR4            equ	14756	;# 
   439   0039A5                     PIR5            equ	14757	;# 
   440   0039A6                     PIR6            equ	14758	;# 
   441   0039A7                     PIR7            equ	14759	;# 
   442   0039A8                     PIR8            equ	14760	;# 
   443   0039A9                     PIR9            equ	14761	;# 
   444   0039C0                     PMD0            equ	14784	;# 
   445   0039C1                     PMD1            equ	14785	;# 
   446   0039C2                     PMD2            equ	14786	;# 
   447   0039C3                     PMD3            equ	14787	;# 
   448   0039C4                     PMD4            equ	14788	;# 
   449   0039C5                     PMD5            equ	14789	;# 
   450   0039C6                     PMD6            equ	14790	;# 
   451   0039C7                     PMD7            equ	14791	;# 
   452   0039D0                     BORCON          equ	14800	;# 
   453   0039D1                     VREGCON         equ	14801	;# 
   454   0039D8                     CPUDOZE         equ	14808	;# 
   455   0039D9                     OSCCON1         equ	14809	;# 
   456   0039DA                     OSCCON2         equ	14810	;# 
   457   0039DB                     OSCCON3         equ	14811	;# 
   458   0039DC                     OSCSTAT         equ	14812	;# 
   459   0039DC                     OSCSTAT1        equ	14812	;# 
   460   0039DD                     OSCEN           equ	14813	;# 
   461   0039DE                     OSCTUNE         equ	14814	;# 
   462   0039DF                     OSCFRQ          equ	14815	;# 
   463   0039E0                     NVMADRL         equ	14816	;# 
   464   0039E1                     NVMADRH         equ	14817	;# 
   465   0039E3                     NVMDAT          equ	14819	;# 
   466   0039E5                     NVMCON1         equ	14821	;# 
   467   0039E6                     NVMCON2         equ	14822	;# 
   468   0039EF                     PRLOCK          equ	14831	;# 
   469   0039F1                     ISRPR           equ	14833	;# 
   470   0039F2                     MAINPR          equ	14834	;# 
   471   0039F3                     DMA1PR          equ	14835	;# 
   472   0039F4                     DMA2PR          equ	14836	;# 
   473   0039F7                     SCANPR          equ	14839	;# 
   474   003A00                     RA0PPS          equ	14848	;# 
   475   003A01                     RA1PPS          equ	14849	;# 
   476   003A02                     RA2PPS          equ	14850	;# 
   477   003A03                     RA3PPS          equ	14851	;# 
   478   003A04                     RA4PPS          equ	14852	;# 
   479   003A05                     RA5PPS          equ	14853	;# 
   480   003A06                     RA6PPS          equ	14854	;# 
   481   003A07                     RA7PPS          equ	14855	;# 
   482   003A08                     RB0PPS          equ	14856	;# 
   483   003A09                     RB1PPS          equ	14857	;# 
   484   003A0A                     RB2PPS          equ	14858	;# 
   485   003A0B                     RB3PPS          equ	14859	;# 
   486   003A0C                     RB4PPS          equ	14860	;# 
   487   003A0D                     RB5PPS          equ	14861	;# 
   488   003A0E                     RB6PPS          equ	14862	;# 
   489   003A0F                     RB7PPS          equ	14863	;# 
   490   003A10                     RC0PPS          equ	14864	;# 
   491   003A11                     RC1PPS          equ	14865	;# 
   492   003A12                     RC2PPS          equ	14866	;# 
   493   003A13                     RC3PPS          equ	14867	;# 
   494   003A14                     RC4PPS          equ	14868	;# 
   495   003A15                     RC5PPS          equ	14869	;# 
   496   003A16                     RC6PPS          equ	14870	;# 
   497   003A17                     RC7PPS          equ	14871	;# 
   498   003A40                     ANSELA          equ	14912	;# 
   499   003A41                     WPUA            equ	14913	;# 
   500   003A42                     ODCONA          equ	14914	;# 
   501   003A43                     SLRCONA         equ	14915	;# 
   502   003A44                     INLVLA          equ	14916	;# 
   503   003A45                     IOCAP           equ	14917	;# 
   504   003A46                     IOCAN           equ	14918	;# 
   505   003A47                     IOCAF           equ	14919	;# 
   506   003A50                     ANSELB          equ	14928	;# 
   507   003A51                     WPUB            equ	14929	;# 
   508   003A52                     ODCONB          equ	14930	;# 
   509   003A53                     SLRCONB         equ	14931	;# 
   510   003A54                     INLVLB          equ	14932	;# 
   511   003A55                     IOCBP           equ	14933	;# 
   512   003A56                     IOCBN           equ	14934	;# 
   513   003A57                     IOCBF           equ	14935	;# 
   514   003A5A                     RB1I2C          equ	14938	;# 
   515   003A5B                     RB2I2C          equ	14939	;# 
   516   003A60                     ANSELC          equ	14944	;# 
   517   003A61                     WPUC            equ	14945	;# 
   518   003A62                     ODCONC          equ	14946	;# 
   519   003A63                     SLRCONC         equ	14947	;# 
   520   003A64                     INLVLC          equ	14948	;# 
   521   003A65                     IOCCP           equ	14949	;# 
   522   003A66                     IOCCN           equ	14950	;# 
   523   003A67                     IOCCF           equ	14951	;# 
   524   003A6A                     RC3I2C          equ	14954	;# 
   525   003A6B                     RC4I2C          equ	14955	;# 
   526   003A81                     WPUE            equ	14977	;# 
   527   003A84                     INLVLE          equ	14980	;# 
   528   003A85                     IOCEP           equ	14981	;# 
   529   003A86                     IOCEN           equ	14982	;# 
   530   003A87                     IOCEF           equ	14983	;# 
   531   003ABF                     PPSLOCK         equ	15039	;# 
   532   003AC0                     INT0PPS         equ	15040	;# 
   533   003AC1                     INT1PPS         equ	15041	;# 
   534   003AC2                     INT2PPS         equ	15042	;# 
   535   003AC3                     T0CKIPPS        equ	15043	;# 
   536   003AC4                     T1CKIPPS        equ	15044	;# 
   537   003AC5                     T1GPPS          equ	15045	;# 
   538   003AC6                     T3CKIPPS        equ	15046	;# 
   539   003AC7                     T3GPPS          equ	15047	;# 
   540   003AC8                     T5CKIPPS        equ	15048	;# 
   541   003AC9                     T5GPPS          equ	15049	;# 
   542   003ACA                     T2INPPS         equ	15050	;# 
   543   003ACB                     T4INPPS         equ	15051	;# 
   544   003ACC                     T6INPPS         equ	15052	;# 
   545   003ACD                     CCP1PPS         equ	15053	;# 
   546   003ACE                     CCP2PPS         equ	15054	;# 
   547   003ACF                     CCP3PPS         equ	15055	;# 
   548   003AD0                     CCP4PPS         equ	15056	;# 
   549   003AD1                     SMT1WINPPS      equ	15057	;# 
   550   003AD2                     SMT1SIGPPS      equ	15058	;# 
   551   003AD3                     SMT2WINPPS      equ	15059	;# 
   552   003AD4                     SMT2SIGPPS      equ	15060	;# 
   553   003AD5                     CWG1INPPS       equ	15061	;# 
   554   003AD6                     CWG2INPPS       equ	15062	;# 
   555   003AD7                     CWG3INPPS       equ	15063	;# 
   556   003AD8                     MD1CARLPPS      equ	15064	;# 
   557   003AD9                     MD1CARHPPS      equ	15065	;# 
   558   003ADA                     MD1SRCPPS       equ	15066	;# 
   559   003ADB                     CLCIN0PPS       equ	15067	;# 
   560   003ADC                     CLCIN1PPS       equ	15068	;# 
   561   003ADD                     CLCIN2PPS       equ	15069	;# 
   562   003ADE                     CLCIN3PPS       equ	15070	;# 
   563   003ADF                     ADACTPPS        equ	15071	;# 
   564   003AE0                     SPI1SCKPPS      equ	15072	;# 
   565   003AE1                     SPI1SDIPPS      equ	15073	;# 
   566   003AE2                     SPI1SSPPS       equ	15074	;# 
   567   003AE3                     I2C1SCLPPS      equ	15075	;# 
   568   003AE4                     I2C1SDAPPS      equ	15076	;# 
   569   003AE5                     I2C2SCLPPS      equ	15077	;# 
   570   003AE6                     I2C2SDAPPS      equ	15078	;# 
   571   003AE7                     U1RXPPS         equ	15079	;# 
   572   003AE8                     U1CTSPPS        equ	15080	;# 
   573   003AEA                     U2RXPPS         equ	15082	;# 
   574   003AEB                     U2CTSPPS        equ	15083	;# 
   575   003AED                     CANRXPPS        equ	15085	;# 
   576   003BC9                     DMA2BUF         equ	15305	;# 
   577   003BCA                     DMA2DCNT        equ	15306	;# 
   578   003BCA                     DMA2DCNTL       equ	15306	;# 
   579   003BCB                     DMA2DCNTH       equ	15307	;# 
   580   003BCC                     DMA2DPTR        equ	15308	;# 
   581   003BCC                     DMA2DPTRL       equ	15308	;# 
   582   003BCD                     DMA2DPTRH       equ	15309	;# 
   583   003BCE                     DMA2DSZ         equ	15310	;# 
   584   003BCE                     DMA2DSZL        equ	15310	;# 
   585   003BCF                     DMA2DSZH        equ	15311	;# 
   586   003BD0                     DMA2DSA         equ	15312	;# 
   587   003BD0                     DMA2DSAL        equ	15312	;# 
   588   003BD1                     DMA2DSAH        equ	15313	;# 
   589   003BD2                     DMA2SCNT        equ	15314	;# 
   590   003BD2                     DMA2SCNTL       equ	15314	;# 
   591   003BD3                     DMA2SCNTH       equ	15315	;# 
   592   003BD4                     DMA2SPTR        equ	15316	;# 
   593   003BD4                     DMA2SPTRL       equ	15316	;# 
   594   003BD5                     DMA2SPTRH       equ	15317	;# 
   595   003BD6                     DMA2SPTRU       equ	15318	;# 
   596   003BD7                     DMA2SSZ         equ	15319	;# 
   597   003BD7                     DMA2SSZL        equ	15319	;# 
   598   003BD8                     DMA2SSZH        equ	15320	;# 
   599   003BD9                     DMA2SSA         equ	15321	;# 
   600   003BD9                     DMA2SSAL        equ	15321	;# 
   601   003BDA                     DMA2SSAH        equ	15322	;# 
   602   003BDB                     DMA2SSAU        equ	15323	;# 
   603   003BDC                     DMA2CON0        equ	15324	;# 
   604   003BDD                     DMA2CON1        equ	15325	;# 
   605   003BDE                     DMA2AIRQ        equ	15326	;# 
   606   003BDF                     DMA2SIRQ        equ	15327	;# 
   607   003BE9                     DMA1BUF         equ	15337	;# 
   608   003BEA                     DMA1DCNT        equ	15338	;# 
   609   003BEA                     DMA1DCNTL       equ	15338	;# 
   610   003BEB                     DMA1DCNTH       equ	15339	;# 
   611   003BEC                     DMA1DPTR        equ	15340	;# 
   612   003BEC                     DMA1DPTRL       equ	15340	;# 
   613   003BED                     DMA1DPTRH       equ	15341	;# 
   614   003BEE                     DMA1DSZ         equ	15342	;# 
   615   003BEE                     DMA1DSZL        equ	15342	;# 
   616   003BEF                     DMA1DSZH        equ	15343	;# 
   617   003BF0                     DMA1DSA         equ	15344	;# 
   618   003BF0                     DMA1DSAL        equ	15344	;# 
   619   003BF1                     DMA1DSAH        equ	15345	;# 
   620   003BF2                     DMA1SCNT        equ	15346	;# 
   621   003BF2                     DMA1SCNTL       equ	15346	;# 
   622   003BF3                     DMA1SCNTH       equ	15347	;# 
   623   003BF4                     DMA1SPTR        equ	15348	;# 
   624   003BF4                     DMA1SPTRL       equ	15348	;# 
   625   003BF5                     DMA1SPTRH       equ	15349	;# 
   626   003BF6                     DMA1SPTRU       equ	15350	;# 
   627   003BF7                     DMA1SSZ         equ	15351	;# 
   628   003BF7                     DMA1SSZL        equ	15351	;# 
   629   003BF8                     DMA1SSZH        equ	15352	;# 
   630   003BF9                     DMA1SSA         equ	15353	;# 
   631   003BF9                     DMA1SSAL        equ	15353	;# 
   632   003BFA                     DMA1SSAH        equ	15354	;# 
   633   003BFB                     DMA1SSAU        equ	15355	;# 
   634   003BFC                     DMA1CON0        equ	15356	;# 
   635   003BFD                     DMA1CON1        equ	15357	;# 
   636   003BFE                     DMA1AIRQ        equ	15358	;# 
   637   003BFF                     DMA1SIRQ        equ	15359	;# 
   638   003C56                     CLC4CON         equ	15446	;# 
   639   003C57                     CLC4POL         equ	15447	;# 
   640   003C58                     CLC4SEL0        equ	15448	;# 
   641   003C59                     CLC4SEL1        equ	15449	;# 
   642   003C5A                     CLC4SEL2        equ	15450	;# 
   643   003C5B                     CLC4SEL3        equ	15451	;# 
   644   003C5C                     CLC4GLS0        equ	15452	;# 
   645   003C5D                     CLC4GLS1        equ	15453	;# 
   646   003C5E                     CLC4GLS2        equ	15454	;# 
   647   003C5F                     CLC4GLS3        equ	15455	;# 
   648   003C60                     CLC3CON         equ	15456	;# 
   649   003C61                     CLC3POL         equ	15457	;# 
   650   003C62                     CLC3SEL0        equ	15458	;# 
   651   003C63                     CLC3SEL1        equ	15459	;# 
   652   003C64                     CLC3SEL2        equ	15460	;# 
   653   003C65                     CLC3SEL3        equ	15461	;# 
   654   003C66                     CLC3GLS0        equ	15462	;# 
   655   003C67                     CLC3GLS1        equ	15463	;# 
   656   003C68                     CLC3GLS2        equ	15464	;# 
   657   003C69                     CLC3GLS3        equ	15465	;# 
   658   003C6A                     CLC2CON         equ	15466	;# 
   659   003C6B                     CLC2POL         equ	15467	;# 
   660   003C6C                     CLC2SEL0        equ	15468	;# 
   661   003C6D                     CLC2SEL1        equ	15469	;# 
   662   003C6E                     CLC2SEL2        equ	15470	;# 
   663   003C6F                     CLC2SEL3        equ	15471	;# 
   664   003C70                     CLC2GLS0        equ	15472	;# 
   665   003C71                     CLC2GLS1        equ	15473	;# 
   666   003C72                     CLC2GLS2        equ	15474	;# 
   667   003C73                     CLC2GLS3        equ	15475	;# 
   668   003C74                     CLC1CON         equ	15476	;# 
   669   003C75                     CLC1POL         equ	15477	;# 
   670   003C76                     CLC1SEL0        equ	15478	;# 
   671   003C77                     CLC1SEL1        equ	15479	;# 
   672   003C78                     CLC1SEL2        equ	15480	;# 
   673   003C79                     CLC1SEL3        equ	15481	;# 
   674   003C7A                     CLC1GLS0        equ	15482	;# 
   675   003C7B                     CLC1GLS1        equ	15483	;# 
   676   003C7C                     CLC1GLS2        equ	15484	;# 
   677   003C7D                     CLC1GLS3        equ	15485	;# 
   678   003C7E                     CLCDATA0        equ	15486	;# 
   679   003CE5                     CLKRCON         equ	15589	;# 
   680   003CE6                     CLKRCLK         equ	15590	;# 
   681   003CFA                     MD1CON0         equ	15610	;# 
   682   003CFB                     MD1CON1         equ	15611	;# 
   683   003CFC                     MD1SRC          equ	15612	;# 
   684   003CFD                     MD1CARL         equ	15613	;# 
   685   003CFE                     MD1CARH         equ	15614	;# 
   686   003D10                     SPI1RXB         equ	15632	;# 
   687   003D11                     SPI1TXB         equ	15633	;# 
   688   003D12                     SPI1TCNT        equ	15634	;# 
   689   003D12                     SPI1TCNTL       equ	15634	;# 
   690   003D13                     SPI1TCNTH       equ	15635	;# 
   691   003D14                     SPI1CON0        equ	15636	;# 
   692   003D15                     SPI1CON1        equ	15637	;# 
   693   003D16                     SPI1CON2        equ	15638	;# 
   694   003D17                     SPI1STATUS      equ	15639	;# 
   695   003D18                     SPI1TWIDTH      equ	15640	;# 
   696   003D19                     SPI1BAUD        equ	15641	;# 
   697   003D1A                     SPI1INTF        equ	15642	;# 
   698   003D1B                     SPI1INTE        equ	15643	;# 
   699   003D1C                     SPI1CLK         equ	15644	;# 
   700   003D54                     I2C2RXB         equ	15700	;# 
   701   003D55                     I2C2TXB         equ	15701	;# 
   702   003D56                     I2C2CNT         equ	15702	;# 
   703   003D57                     I2C2ADB0        equ	15703	;# 
   704   003D58                     I2C2ADB1        equ	15704	;# 
   705   003D59                     I2C2ADR0        equ	15705	;# 
   706   003D5A                     I2C2ADR1        equ	15706	;# 
   707   003D5B                     I2C2ADR2        equ	15707	;# 
   708   003D5C                     I2C2ADR3        equ	15708	;# 
   709   003D5D                     I2C2CON0        equ	15709	;# 
   710   003D5E                     I2C2CON1        equ	15710	;# 
   711   003D5F                     I2C2CON2        equ	15711	;# 
   712   003D60                     I2C2ERR         equ	15712	;# 
   713   003D61                     I2C2STAT0       equ	15713	;# 
   714   003D62                     I2C2STAT1       equ	15714	;# 
   715   003D63                     I2C2PIR         equ	15715	;# 
   716   003D64                     I2C2PIE         equ	15716	;# 
   717   003D65                     I2C2CLK         equ	15717	;# 
   718   003D66                     I2C2BTO         equ	15718	;# 
   719   003D6A                     I2C1RXB         equ	15722	;# 
   720   003D6B                     I2C1TXB         equ	15723	;# 
   721   003D6C                     I2C1CNT         equ	15724	;# 
   722   003D6D                     I2C1ADB0        equ	15725	;# 
   723   003D6E                     I2C1ADB1        equ	15726	;# 
   724   003D6F                     I2C1ADR0        equ	15727	;# 
   725   003D70                     I2C1ADR1        equ	15728	;# 
   726   003D71                     I2C1ADR2        equ	15729	;# 
   727   003D72                     I2C1ADR3        equ	15730	;# 
   728   003D73                     I2C1CON0        equ	15731	;# 
   729   003D74                     I2C1CON1        equ	15732	;# 
   730   003D75                     I2C1CON2        equ	15733	;# 
   731   003D76                     I2C1ERR         equ	15734	;# 
   732   003D77                     I2C1STAT0       equ	15735	;# 
   733   003D78                     I2C1STAT1       equ	15736	;# 
   734   003D79                     I2C1PIR         equ	15737	;# 
   735   003D7A                     I2C1PIE         equ	15738	;# 
   736   003D7B                     I2C1CLK         equ	15739	;# 
   737   003D7C                     I2C1BTO         equ	15740	;# 
   738   003DD0                     U2RXB           equ	15824	;# 
   739   003DD0                     U2RXBL          equ	15824	;# 
   740   003DD1                     U2RXCHK         equ	15825	;# 
   741   003DD2                     U2TXB           equ	15826	;# 
   742   003DD2                     U2TXBL          equ	15826	;# 
   743   003DD3                     U2TXCHK         equ	15827	;# 
   744   003DD4                     U2P1            equ	15828	;# 
   745   003DD4                     U2P1L           equ	15828	;# 
   746   003DD5                     U2P1H           equ	15829	;# 
   747   003DD6                     U2P2            equ	15830	;# 
   748   003DD6                     U2P2L           equ	15830	;# 
   749   003DD7                     U2P2H           equ	15831	;# 
   750   003DD8                     U2P3            equ	15832	;# 
   751   003DD8                     U2P3L           equ	15832	;# 
   752   003DD9                     U2P3H           equ	15833	;# 
   753   003DDA                     U2CON0          equ	15834	;# 
   754   003DDB                     U2CON1          equ	15835	;# 
   755   003DDC                     U2CON2          equ	15836	;# 
   756   003DDD                     U2BRG           equ	15837	;# 
   757   003DDD                     U2BRGL          equ	15837	;# 
   758   003DDE                     U2BRGH          equ	15838	;# 
   759   003DDF                     U2FIFO          equ	15839	;# 
   760   003DE0                     U2UIR           equ	15840	;# 
   761   003DE1                     U2ERRIR         equ	15841	;# 
   762   003DE2                     U2ERRIE         equ	15842	;# 
   763   003DE8                     U1RXB           equ	15848	;# 
   764   003DE8                     U1RXBL          equ	15848	;# 
   765   003DE9                     U1RXCHK         equ	15849	;# 
   766   003DEA                     U1TXB           equ	15850	;# 
   767   003DEA                     U1TXBL          equ	15850	;# 
   768   003DEB                     U1TXCHK         equ	15851	;# 
   769   003DEC                     U1P1            equ	15852	;# 
   770   003DEC                     U1P1L           equ	15852	;# 
   771   003DED                     U1P1H           equ	15853	;# 
   772   003DEE                     U1P2            equ	15854	;# 
   773   003DEE                     U1P2L           equ	15854	;# 
   774   003DEF                     U1P2H           equ	15855	;# 
   775   003DF0                     U1P3            equ	15856	;# 
   776   003DF0                     U1P3L           equ	15856	;# 
   777   003DF1                     U1P3H           equ	15857	;# 
   778   003DF2                     U1CON0          equ	15858	;# 
   779   003DF3                     U1CON1          equ	15859	;# 
   780   003DF4                     U1CON2          equ	15860	;# 
   781   003DF5                     U1BRG           equ	15861	;# 
   782   003DF5                     U1BRGL          equ	15861	;# 
   783   003DF6                     U1BRGH          equ	15862	;# 
   784   003DF7                     U1FIFO          equ	15863	;# 
   785   003DF8                     U1UIR           equ	15864	;# 
   786   003DF9                     U1ERRIR         equ	15865	;# 
   787   003DFA                     U1ERRIE         equ	15866	;# 
   788   003E9C                     DAC1CON1        equ	16028	;# 
   789   003E9E                     DAC1CON0        equ	16030	;# 
   790   003EB8                     CM2CON0         equ	16056	;# 
   791   003EB9                     CM2CON1         equ	16057	;# 
   792   003EBA                     CM2NCH          equ	16058	;# 
   793   003EBB                     CM2PCH          equ	16059	;# 
   794   003EBC                     CM1CON0         equ	16060	;# 
   795   003EBD                     CM1CON1         equ	16061	;# 
   796   003EBE                     CM1NCH          equ	16062	;# 
   797   003EBF                     CM1PCH          equ	16063	;# 
   798   003EC0                     CMOUT           equ	16064	;# 
   799   003EC1                     FVRCON          equ	16065	;# 
   800   003EC3                     ZCDCON          equ	16067	;# 
   801   003EC9                     HLVDCON0        equ	16073	;# 
   802   003ECA                     HLVDCON1        equ	16074	;# 
   803   003ED7                     ADCP            equ	16087	;# 
   804   003EDE                     ADLTH           equ	16094	;# 
   805   003EDE                     ADLTHL          equ	16094	;# 
   806   003EDF                     ADLTHH          equ	16095	;# 
   807   003EE0                     ADUTH           equ	16096	;# 
   808   003EE0                     ADUTHL          equ	16096	;# 
   809   003EE1                     ADUTHH          equ	16097	;# 
   810   003EE2                     ADERR           equ	16098	;# 
   811   003EE2                     ADERRL          equ	16098	;# 
   812   003EE3                     ADERRH          equ	16099	;# 
   813   003EE4                     ADSTPT          equ	16100	;# 
   814   003EE4                     ADSTPTL         equ	16100	;# 
   815   003EE5                     ADSTPTH         equ	16101	;# 
   816   003EE6                     ADFLTR          equ	16102	;# 
   817   003EE6                     ADFLTRL         equ	16102	;# 
   818   003EE7                     ADFLTRH         equ	16103	;# 
   819   003EE8                     ADACC           equ	16104	;# 
   820   003EE8                     ADACCL          equ	16104	;# 
   821   003EE9                     ADACCH          equ	16105	;# 
   822   003EEA                     ADACCU          equ	16106	;# 
   823   003EEB                     ADCNT           equ	16107	;# 
   824   003EEC                     ADRPT           equ	16108	;# 
   825   003EED                     ADPREV          equ	16109	;# 
   826   003EED                     ADPREVL         equ	16109	;# 
   827   003EEE                     ADPREVH         equ	16110	;# 
   828   003EEF                     ADRES           equ	16111	;# 
   829   003EEF                     ADRESL          equ	16111	;# 
   830   003EF0                     ADRESH          equ	16112	;# 
   831   003EF1                     ADPCH           equ	16113	;# 
   832   003EF3                     ADACQ           equ	16115	;# 
   833   003EF3                     ADACQL          equ	16115	;# 
   834   003EF4                     ADACQH          equ	16116	;# 
   835   003EF5                     ADCAP           equ	16117	;# 
   836   003EF6                     ADPRE           equ	16118	;# 
   837   003EF6                     ADPREL          equ	16118	;# 
   838   003EF7                     ADPREH          equ	16119	;# 
   839   003EF8                     ADCON0          equ	16120	;# 
   840   003EF9                     ADCON1          equ	16121	;# 
   841   003EFA                     ADCON2          equ	16122	;# 
   842   003EFB                     ADCON3          equ	16123	;# 
   843   003EFC                     ADSTAT          equ	16124	;# 
   844   003EFD                     ADREF           equ	16125	;# 
   845   003EFE                     ADACT           equ	16126	;# 
   846   003EFF                     ADCLK           equ	16127	;# 
   847   003F00                     SMT2TMR         equ	16128	;# 
   848   003F00                     SMT2TMRL        equ	16128	;# 
   849   003F01                     SMT2TMRH        equ	16129	;# 
   850   003F02                     SMT2TMRU        equ	16130	;# 
   851   003F03                     SMT2CPR         equ	16131	;# 
   852   003F03                     SMT2CPRL        equ	16131	;# 
   853   003F04                     SMT2CPRH        equ	16132	;# 
   854   003F05                     SMT2CPRU        equ	16133	;# 
   855   003F06                     SMT2CPW         equ	16134	;# 
   856   003F06                     SMT2CPWL        equ	16134	;# 
   857   003F07                     SMT2CPWH        equ	16135	;# 
   858   003F08                     SMT2CPWU        equ	16136	;# 
   859   003F09                     SMT2PR          equ	16137	;# 
   860   003F09                     SMT2PRL         equ	16137	;# 
   861   003F0A                     SMT2PRH         equ	16138	;# 
   862   003F0B                     SMT2PRU         equ	16139	;# 
   863   003F0C                     SMT2CON0        equ	16140	;# 
   864   003F0D                     SMT2CON1        equ	16141	;# 
   865   003F0E                     SMT2STAT        equ	16142	;# 
   866   003F0F                     SMT2CLK         equ	16143	;# 
   867   003F10                     SMT2SIG         equ	16144	;# 
   868   003F11                     SMT2WIN         equ	16145	;# 
   869   003F12                     SMT1TMR         equ	16146	;# 
   870   003F12                     SMT1TMRL        equ	16146	;# 
   871   003F13                     SMT1TMRH        equ	16147	;# 
   872   003F14                     SMT1TMRU        equ	16148	;# 
   873   003F15                     SMT1CPR         equ	16149	;# 
   874   003F15                     SMT1CPRL        equ	16149	;# 
   875   003F16                     SMT1CPRH        equ	16150	;# 
   876   003F17                     SMT1CPRU        equ	16151	;# 
   877   003F18                     SMT1CPW         equ	16152	;# 
   878   003F18                     SMT1CPWL        equ	16152	;# 
   879   003F19                     SMT1CPWH        equ	16153	;# 
   880   003F1A                     SMT1CPWU        equ	16154	;# 
   881   003F1B                     SMT1PR          equ	16155	;# 
   882   003F1B                     SMT1PRL         equ	16155	;# 
   883   003F1C                     SMT1PRH         equ	16156	;# 
   884   003F1D                     SMT1PRU         equ	16157	;# 
   885   003F1E                     SMT1CON0        equ	16158	;# 
   886   003F1F                     SMT1CON1        equ	16159	;# 
   887   003F20                     SMT1STAT        equ	16160	;# 
   888   003F21                     SMT1CLK         equ	16161	;# 
   889   003F22                     SMT1SIG         equ	16162	;# 
   890   003F23                     SMT1WIN         equ	16163	;# 
   891   003F38                     NCO1ACC         equ	16184	;# 
   892   003F38                     NCO1ACCL        equ	16184	;# 
   893   003F39                     NCO1ACCH        equ	16185	;# 
   894   003F3A                     NCO1ACCU        equ	16186	;# 
   895   003F3B                     NCO1INC         equ	16187	;# 
   896   003F3B                     NCO1INCL        equ	16187	;# 
   897   003F3C                     NCO1INCH        equ	16188	;# 
   898   003F3D                     NCO1INCU        equ	16189	;# 
   899   003F3E                     NCO1CON         equ	16190	;# 
   900   003F3F                     NCO1CLK         equ	16191	;# 
   901   003F40                     CWG3CLK         equ	16192	;# 
   902   003F40                     CWG3CLKCON      equ	16192	;# 
   903   003F41                     CWG3ISM         equ	16193	;# 
   904   003F42                     CWG3DBR         equ	16194	;# 
   905   003F43                     CWG3DBF         equ	16195	;# 
   906   003F44                     CWG3CON0        equ	16196	;# 
   907   003F45                     CWG3CON1        equ	16197	;# 
   908   003F46                     CWG3AS0         equ	16198	;# 
   909   003F47                     CWG3AS1         equ	16199	;# 
   910   003F48                     CWG3STR         equ	16200	;# 
   911   003F49                     CWG2CLK         equ	16201	;# 
   912   003F49                     CWG2CLKCON      equ	16201	;# 
   913   003F4A                     CWG2ISM         equ	16202	;# 
   914   003F4B                     CWG2DBR         equ	16203	;# 
   915   003F4C                     CWG2DBF         equ	16204	;# 
   916   003F4D                     CWG2CON0        equ	16205	;# 
   917   003F4E                     CWG2CON1        equ	16206	;# 
   918   003F4F                     CWG2AS0         equ	16207	;# 
   919   003F50                     CWG2AS1         equ	16208	;# 
   920   003F51                     CWG2STR         equ	16209	;# 
   921   003F52                     CWG1CLK         equ	16210	;# 
   922   003F52                     CWG1CLKCON      equ	16210	;# 
   923   003F53                     CWG1ISM         equ	16211	;# 
   924   003F54                     CWG1DBR         equ	16212	;# 
   925   003F55                     CWG1DBF         equ	16213	;# 
   926   003F56                     CWG1CON0        equ	16214	;# 
   927   003F57                     CWG1CON1        equ	16215	;# 
   928   003F58                     CWG1AS0         equ	16216	;# 
   929   003F59                     CWG1AS1         equ	16217	;# 
   930   003F5A                     CWG1STR         equ	16218	;# 
   931   003F5E                     CCPTMRS0        equ	16222	;# 
   932   003F5F                     CCPTMRS1        equ	16223	;# 
   933   003F60                     PWM8DC          equ	16224	;# 
   934   003F60                     PWM8DCL         equ	16224	;# 
   935   003F61                     PWM8DCH         equ	16225	;# 
   936   003F62                     PWM8CON         equ	16226	;# 
   937   003F64                     PWM7DC          equ	16228	;# 
   938   003F64                     PWM7DCL         equ	16228	;# 
   939   003F65                     PWM7DCH         equ	16229	;# 
   940   003F66                     PWM7CON         equ	16230	;# 
   941   003F68                     PWM6DC          equ	16232	;# 
   942   003F68                     PWM6DCL         equ	16232	;# 
   943   003F69                     PWM6DCH         equ	16233	;# 
   944   003F6A                     PWM6CON         equ	16234	;# 
   945   003F6C                     PWM5DC          equ	16236	;# 
   946   003F6C                     PWM5DCL         equ	16236	;# 
   947   003F6D                     PWM5DCH         equ	16237	;# 
   948   003F6E                     PWM5CON         equ	16238	;# 
   949   003F70                     CCPR4           equ	16240	;# 
   950   003F70                     CCPR4L          equ	16240	;# 
   951   003F71                     CCPR4H          equ	16241	;# 
   952   003F72                     CCP4CON         equ	16242	;# 
   953   003F73                     CCP4CAP         equ	16243	;# 
   954   003F74                     CCPR3           equ	16244	;# 
   955   003F74                     CCPR3L          equ	16244	;# 
   956   003F75                     CCPR3H          equ	16245	;# 
   957   003F76                     CCP3CON         equ	16246	;# 
   958   003F77                     CCP3CAP         equ	16247	;# 
   959   003F78                     CCPR2           equ	16248	;# 
   960   003F78                     CCPR2L          equ	16248	;# 
   961   003F79                     CCPR2H          equ	16249	;# 
   962   003F7A                     CCP2CON         equ	16250	;# 
   963   003F7B                     CCP2CAP         equ	16251	;# 
   964   003F7C                     CCPR1           equ	16252	;# 
   965   003F7C                     CCPR1L          equ	16252	;# 
   966   003F7D                     CCPR1H          equ	16253	;# 
   967   003F7E                     CCP1CON         equ	16254	;# 
   968   003F7F                     CCP1CAP         equ	16255	;# 
   969   003F80                     RXB0CON         equ	16256	;# 
   970   003F81                     RXB0SIDH        equ	16257	;# 
   971   003F82                     RXB0SIDL        equ	16258	;# 
   972   003F83                     RXB0EIDH        equ	16259	;# 
   973   003F84                     RXB0EIDL        equ	16260	;# 
   974   003F85                     RXB0DLC         equ	16261	;# 
   975   003F86                     RXB0D0          equ	16262	;# 
   976   003F87                     RXB0D1          equ	16263	;# 
   977   003F88                     RXB0D2          equ	16264	;# 
   978   003F89                     RXB0D3          equ	16265	;# 
   979   003F8A                     RXB0D4          equ	16266	;# 
   980   003F8B                     RXB0D5          equ	16267	;# 
   981   003F8C                     RXB0D6          equ	16268	;# 
   982   003F8D                     RXB0D7          equ	16269	;# 
   983   003F8E                     CANSTAT         equ	16270	;# 
   984   003F8F                     CANCON          equ	16271	;# 
   985   003F90                     COMSTAT         equ	16272	;# 
   986   003F91                     ECANCON         equ	16273	;# 
   987   003F92                     T6TMR           equ	16274	;# 
   988   003F92                     TMR6            equ	16274	;# 
   989   003F93                     T6PR            equ	16275	;# 
   990   003F93                     PR6             equ	16275	;# 
   991   003F94                     T6CON           equ	16276	;# 
   992   003F95                     T6HLT           equ	16277	;# 
   993   003F96                     T6CLKCON        equ	16278	;# 
   994   003F96                     T6CLK           equ	16278	;# 
   995   003F97                     T6RST           equ	16279	;# 
   996   003F98                     TMR5            equ	16280	;# 
   997   003F98                     TMR5L           equ	16280	;# 
   998   003F99                     TMR5H           equ	16281	;# 
   999   003F9A                     T5CON           equ	16282	;# 
  1000   003F9A                     TMR5CON         equ	16282	;# 
  1001   003F9B                     T5GCON          equ	16283	;# 
  1002   003F9B                     TMR5GCON        equ	16283	;# 
  1003   003F9C                     T5GATE          equ	16284	;# 
  1004   003F9C                     TMR5GATE        equ	16284	;# 
  1005   003F9D                     T5CLK           equ	16285	;# 
  1006   003F9D                     TMR5CLK         equ	16285	;# 
  1007   003F9D                     PR5             equ	16285	;# 
  1008   003F9E                     T4TMR           equ	16286	;# 
  1009   003F9E                     TMR4            equ	16286	;# 
  1010   003F9F                     T4PR            equ	16287	;# 
  1011   003F9F                     PR4             equ	16287	;# 
  1012   003FA0                     T4CON           equ	16288	;# 
  1013   003FA1                     T4HLT           equ	16289	;# 
  1014   003FA2                     T4CLKCON        equ	16290	;# 
  1015   003FA2                     T4CLK           equ	16290	;# 
  1016   003FA3                     T4RST           equ	16291	;# 
  1017   003FA4                     TMR3            equ	16292	;# 
  1018   003FA4                     TMR3L           equ	16292	;# 
  1019   003FA5                     TMR3H           equ	16293	;# 
  1020   003FA6                     T3CON           equ	16294	;# 
  1021   003FA6                     TMR3CON         equ	16294	;# 
  1022   003FA7                     T3GCON          equ	16295	;# 
  1023   003FA7                     TMR3GCON        equ	16295	;# 
  1024   003FA8                     T3GATE          equ	16296	;# 
  1025   003FA8                     TMR3GATE        equ	16296	;# 
  1026   003FA9                     T3CLK           equ	16297	;# 
  1027   003FA9                     TMR3CLK         equ	16297	;# 
  1028   003FA9                     PR3             equ	16297	;# 
  1029   003FAA                     T2TMR           equ	16298	;# 
  1030   003FAA                     TMR2            equ	16298	;# 
  1031   003FAB                     T2PR            equ	16299	;# 
  1032   003FAB                     PR2             equ	16299	;# 
  1033   003FAC                     T2CON           equ	16300	;# 
  1034   003FAD                     T2HLT           equ	16301	;# 
  1035   003FAE                     T2CLKCON        equ	16302	;# 
  1036   003FAE                     T2CLK           equ	16302	;# 
  1037   003FAF                     T2RST           equ	16303	;# 
  1038   003FB0                     TMR1            equ	16304	;# 
  1039   003FB0                     TMR1L           equ	16304	;# 
  1040   003FB1                     TMR1H           equ	16305	;# 
  1041   003FB2                     T1CON           equ	16306	;# 
  1042   003FB2                     TMR1CON         equ	16306	;# 
  1043   003FB3                     T1GCON          equ	16307	;# 
  1044   003FB3                     TMR1GCON        equ	16307	;# 
  1045   003FB4                     T1GATE          equ	16308	;# 
  1046   003FB4                     TMR1GATE        equ	16308	;# 
  1047   003FB5                     T1CLK           equ	16309	;# 
  1048   003FB5                     TMR1CLK         equ	16309	;# 
  1049   003FB5                     PR1             equ	16309	;# 
  1050   003FB6                     TMR0L           equ	16310	;# 
  1051   003FB6                     TMR0            equ	16310	;# 
  1052   003FB7                     TMR0H           equ	16311	;# 
  1053   003FB7                     PR0             equ	16311	;# 
  1054   003FB8                     T0CON0          equ	16312	;# 
  1055   003FB9                     T0CON1          equ	16313	;# 
  1056   003FBA                     LATA            equ	16314	;# 
  1057   003FBB                     LATB            equ	16315	;# 
  1058   003FBC                     LATC            equ	16316	;# 
  1059   003FC2                     TRISA           equ	16322	;# 
  1060   003FC3                     TRISB           equ	16323	;# 
  1061   003FC4                     TRISC           equ	16324	;# 
  1062   003FCA                     PORTA           equ	16330	;# 
  1063   003FCB                     PORTB           equ	16331	;# 
  1064   003FCC                     PORTC           equ	16332	;# 
  1065   003FCE                     PORTE           equ	16334	;# 
  1066   003FD2                     INTCON0         equ	16338	;# 
  1067   003FD3                     INTCON1         equ	16339	;# 
  1068   003FD4                     IVTLOCK         equ	16340	;# 
  1069   003FD5                     IVTBASE         equ	16341	;# 
  1070   003FD5                     IVTBASEL        equ	16341	;# 
  1071   003FD6                     IVTBASEH        equ	16342	;# 
  1072   003FD7                     IVTBASEU        equ	16343	;# 
  1073   003FD8                     STATUS          equ	16344	;# 
  1074   003FD9                     FSR2            equ	16345	;# 
  1075   003FD9                     FSR2L           equ	16345	;# 
  1076   003FDA                     FSR2H           equ	16346	;# 
  1077   003FDB                     PLUSW2          equ	16347	;# 
  1078   003FDC                     PREINC2         equ	16348	;# 
  1079   003FDD                     POSTDEC2        equ	16349	;# 
  1080   003FDE                     POSTINC2        equ	16350	;# 
  1081   003FDF                     INDF2           equ	16351	;# 
  1082   003FE0                     BSR             equ	16352	;# 
  1083   003FE1                     FSR1            equ	16353	;# 
  1084   003FE1                     FSR1L           equ	16353	;# 
  1085   003FE2                     FSR1H           equ	16354	;# 
  1086   003FE3                     PLUSW1          equ	16355	;# 
  1087   003FE4                     PREINC1         equ	16356	;# 
  1088   003FE5                     POSTDEC1        equ	16357	;# 
  1089   003FE6                     POSTINC1        equ	16358	;# 
  1090   003FE7                     INDF1           equ	16359	;# 
  1091   003FE8                     WREG            equ	16360	;# 
  1092   003FE9                     FSR0            equ	16361	;# 
  1093   003FE9                     FSR0L           equ	16361	;# 
  1094   003FEA                     FSR0H           equ	16362	;# 
  1095   003FEB                     PLUSW0          equ	16363	;# 
  1096   003FEC                     PREINC0         equ	16364	;# 
  1097   003FED                     POSTDEC0        equ	16365	;# 
  1098   003FEE                     POSTINC0        equ	16366	;# 
  1099   003FEF                     INDF0           equ	16367	;# 
  1100   003FF0                     PCON0           equ	16368	;# 
  1101   003FF1                     PCON1           equ	16369	;# 
  1102   003FF3                     PROD            equ	16371	;# 
  1103   003FF3                     PRODL           equ	16371	;# 
  1104   003FF4                     PRODH           equ	16372	;# 
  1105   003FF5                     TABLAT          equ	16373	;# 
  1106   003FF6                     TBLPTR          equ	16374	;# 
  1107   003FF6                     TBLPTRL         equ	16374	;# 
  1108   003FF7                     TBLPTRH         equ	16375	;# 
  1109   003FF8                     TBLPTRU         equ	16376	;# 
  1110   003FF9                     PCLAT           equ	16377	;# 
  1111   003FF9                     PCL             equ	16377	;# 
  1112   003FFA                     PCLATH          equ	16378	;# 
  1113   003FFB                     PCLATU          equ	16379	;# 
  1114   003FFC                     STKPTR          equ	16380	;# 
  1115   003FFD                     TOS             equ	16381	;# 
  1116   003FFD                     TOSL            equ	16381	;# 
  1117   003FFE                     TOSH            equ	16382	;# 
  1118   003FFF                     TOSU            equ	16383	;# 
  1119   003A0A                     _RB2PPS         set	14858
  1120   003A09                     _RB1PPS         set	14857
  1121   003AE6                     _I2C2SDAPPS     set	15078
  1122   003AE5                     _I2C2SCLPPS     set	15077
  1123   003A16                     _RC6PPS         set	14870
  1124   003AE7                     _U1RXPPS        set	15079
  1125   003A52                     _ODCONB         set	14930
  1126   003A60                     _ANSELC         set	14944
  1127   003A50                     _ANSELB         set	14928
  1128   003A40                     _ANSELA         set	14912
  1129   003DF5                     _U1BRG          set	15861
  1130   003D54                     _I2C2RXB        set	15700
  1131   003D5E                     _I2C2CON1bits   set	15710
  1132   003D62                     _I2C2STAT1bits  set	15714
  1133   003D63                     _I2C2PIRbits    set	15715
  1134   003D55                     _I2C2TXB        set	15701
  1135   003D58                     _I2C2ADB1       set	15704
  1136   003D56                     _I2C2CNT        set	15702
  1137   003D5D                     _I2C2CON0bits   set	15709
  1138   003D65                     _I2C2CLK        set	15717
  1139   003D5D                     _I2C2CON0       set	15709
  1140   003DF4                     _U1CON2         set	15860
  1141   003DF3                     _U1CON1         set	15859
  1142   003DF2                     _U1CON0         set	15858
  1143   003FCC                     _PORTCbits      set	16332
  1144   003FCB                     _PORTBbits      set	16331
  1145   003FCC                     _PORTC          set	16332
  1146   003FCB                     _PORTB          set	16331
  1147   003FC4                     _TRISC          set	16324
  1148   003FC3                     _TRISB          set	16323
  1149   003FC2                     _TRISA          set	16322
  1150   003FCA                     _PORTAbits      set	16330
  1151                           
  1152                           	psect	smallconst
  1153   001000                     __psmallconst:
  1154                           	callstack 0
  1155   001000  00                 	db	0
  1156   001001                     STR_1:
  1157   001001  49                 	db	73	;'I'
  1158   001002  44                 	db	68	;'D'
  1159   001003  20                 	db	32
  1160   001004  3D                 	db	61	;'='
  1161   001005  20                 	db	32
  1162   001006  25                 	db	37
  1163   001007  64                 	db	100	;'d'
  1164   001008  00                 	db	0
  1165   001009  00                 	db	0	; dummy byte at the end
  1166   001000                     __smallconst    set	__psmallconst
  1167   001000                     __mediumconst   set	__psmallconst
  1168   000001                     __activetblptr  equ	1
  1169                           
  1170                           ; #config settings
  1171                           
  1172                           	psect	cinit
  1173   00186E                     __pcinit:
  1174                           	callstack 0
  1175   00186E                     start_initialization:
  1176                           	callstack 0
  1177   00186E                     __initialization:
  1178                           	callstack 0
  1179                           
  1180                           ; Clear objects allocated to BANK0 (32 bytes)
  1181   00186E  EE00  F060         	lfsr	0,__pbssBANK0
  1182   001872  0E20               	movlw	32
  1183   001874                     clear_0:
  1184   001874  6AEE               	clrf	postinc0,c
  1185   001876  06E8               	decf	wreg,f,c
  1186   001878  E1FD               	bnz	clear_0
  1187                           
  1188                           ; Clear objects allocated to COMRAM (5 bytes)
  1189   00187A  6A53               	clrf	(__pbssCOMRAM+4)& (0+255),c
  1190   00187C  6A52               	clrf	(__pbssCOMRAM+3)& (0+255),c
  1191   00187E  6A51               	clrf	(__pbssCOMRAM+2)& (0+255),c
  1192   001880  6A50               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1193   001882  6A4F               	clrf	__pbssCOMRAM& (0+255),c
  1194   001884                     end_of_initialization:
  1195                           	callstack 0
  1196   001884                     __end_of__initialization:
  1197                           	callstack 0
  1198   001884  0E00               	movlw	low (__Lsmallconst shr (0+16))
  1199   001886  6EF8               	movwf	tblptru,c
  1200   001888  0E10               	movlw	high __Lsmallconst
  1201   00188A  6EF7               	movwf	tblptrh,c
  1202   00188C  0100               	movlb	0
  1203   00188E  EF05  F008         	goto	_main	;jump to C main() function
  1204                           
  1205                           	psect	bssCOMRAM
  1206   00004F                     __pbssCOMRAM:
  1207                           	callstack 0
  1208   00004F                     _width:
  1209                           	callstack 0
  1210   00004F                     	ds	2
  1211   000051                     _prec:
  1212                           	callstack 0
  1213   000051                     	ds	2
  1214   000053                     _flags:
  1215                           	callstack 0
  1216   000053                     	ds	1
  1217                           
  1218                           	psect	bssBANK0
  1219   000060                     __pbssBANK0:
  1220                           	callstack 0
  1221   000060                     _dbuf:
  1222                           	callstack 0
  1223   000060                     	ds	32
  1224                           
  1225                           	psect	cstackCOMRAM
  1226   000001                     __pcstackCOMRAM:
  1227                           	callstack 0
  1228   000001                     ?___awdiv:
  1229                           	callstack 0
  1230   000001                     ?___awmod:
  1231                           	callstack 0
  1232   000001                     Lcd_Port@a:
  1233                           	callstack 0
  1234   000001                     ___awdiv@dividend:
  1235                           	callstack 0
  1236   000001                     ___awmod@dividend:
  1237                           	callstack 0
  1238   000001                     fputc@c:
  1239                           	callstack 0
  1240   000001                     
  1241                           ; 1 bytes @ 0x0
  1242   000001                     	ds	1
  1243   000002                     Lcd_Write_Char@temp:
  1244                           	callstack 0
  1245   000002                     ??_Lcd_Cmd:
  1246   000002                     
  1247                           ; 1 bytes @ 0x1
  1248   000002                     	ds	1
  1249   000003                     Lcd_Cmd@a:
  1250                           	callstack 0
  1251   000003                     Lcd_Write_Char@y:
  1252                           	callstack 0
  1253   000003                     fputc@fp:
  1254                           	callstack 0
  1255   000003                     ___awdiv@divisor:
  1256                           	callstack 0
  1257   000003                     ___awmod@divisor:
  1258                           	callstack 0
  1259                           
  1260                           ; 2 bytes @ 0x2
  1261   000003                     	ds	1
  1262   000004                     Lcd_Set_Cursor@b:
  1263                           	callstack 0
  1264   000004                     Lcd_Write_Char@a:
  1265                           	callstack 0
  1266   000004                     ??_fputc:
  1267   000004                     ??_Lcd_Init:
  1268                           
  1269                           ; 1 bytes @ 0x3
  1270   000004                     	ds	1
  1271   000005                     Lcd_Set_Cursor@a:
  1272                           	callstack 0
  1273   000005                     Lcd_Write_String@a:
  1274                           	callstack 0
  1275   000005                     ___awdiv@counter:
  1276                           	callstack 0
  1277   000005                     ___awmod@counter:
  1278                           	callstack 0
  1279   000005                     
  1280                           ; 1 bytes @ 0x4
  1281   000005                     	ds	1
  1282   000006                     Lcd_Set_Cursor@z:
  1283                           	callstack 0
  1284   000006                     ___awdiv@sign:
  1285                           	callstack 0
  1286   000006                     ___awmod@sign:
  1287                           	callstack 0
  1288   000006                     Lcd_Write_String@i:
  1289                           	callstack 0
  1290   000006                     
  1291                           ; 1 bytes @ 0x5
  1292   000006                     	ds	1
  1293   000007                     ?_abs:
  1294                           	callstack 0
  1295   000007                     Lcd_Set_Cursor@y:
  1296                           	callstack 0
  1297   000007                     ___awdiv@quotient:
  1298                           	callstack 0
  1299   000007                     abs@a:
  1300                           	callstack 0
  1301                           
  1302                           ; 2 bytes @ 0x6
  1303   000007                     	ds	1
  1304   000008                     Lcd_Set_Cursor@temp:
  1305                           	callstack 0
  1306                           
  1307                           ; 1 bytes @ 0x7
  1308   000008                     	ds	1
  1309   000009                     ??_abs:
  1310                           
  1311                           ; 1 bytes @ 0x8
  1312   000009                     	ds	2
  1313   00000B                     vfpfcnvrt@fp:
  1314                           	callstack 0
  1315                           
  1316                           ; 1 bytes @ 0xA
  1317   00000B                     	ds	1
  1318   00000C                     vfpfcnvrt@fmt:
  1319                           	callstack 0
  1320                           
  1321                           ; 1 bytes @ 0xB
  1322   00000C                     	ds	1
  1323   00000D                     vfpfcnvrt@ap:
  1324                           	callstack 0
  1325                           
  1326                           ; 1 bytes @ 0xC
  1327   00000D                     	ds	1
  1328   00000E                     ??_vfpfcnvrt:
  1329                           
  1330                           ; 1 bytes @ 0xD
  1331   00000E                     	ds	1
  1332   00000F                     vfpfcnvrt@done:
  1333                           	callstack 0
  1334                           
  1335                           ; 1 bytes @ 0xE
  1336   00000F                     	ds	1
  1337   000010                     vfpfcnvrt@cp:
  1338                           	callstack 0
  1339                           
  1340                           ; 1 bytes @ 0xF
  1341   000010                     	ds	1
  1342   000011                     vfpfcnvrt@convarg:
  1343                           	callstack 0
  1344                           
  1345                           ; 4 bytes @ 0x10
  1346   000011                     	ds	4
  1347   000015                     vfpfcnvrt@c:
  1348                           	callstack 0
  1349                           
  1350                           ; 1 bytes @ 0x14
  1351   000015                     	ds	1
  1352   000016                     ?_vfprintf:
  1353                           	callstack 0
  1354   000016                     vfprintf@fp:
  1355                           	callstack 0
  1356                           
  1357                           ; 1 bytes @ 0x15
  1358   000016                     	ds	1
  1359   000017                     vfprintf@fmt:
  1360                           	callstack 0
  1361                           
  1362                           ; 1 bytes @ 0x16
  1363   000017                     	ds	1
  1364   000018                     vfprintf@ap:
  1365                           	callstack 0
  1366                           
  1367                           ; 1 bytes @ 0x17
  1368   000018                     	ds	1
  1369   000019                     vfprintf@cfmt:
  1370                           	callstack 0
  1371   000019                     
  1372                           ; 1 bytes @ 0x18
  1373   000019                     	ds	1
  1374   00001A                     ?_sprintf:
  1375                           	callstack 0
  1376   00001A                     sprintf@s:
  1377                           	callstack 0
  1378                           
  1379                           ; 1 bytes @ 0x19
  1380   00001A                     	ds	1
  1381   00001B                     sprintf@fmt:
  1382                           	callstack 0
  1383                           
  1384                           ; 1 bytes @ 0x1A
  1385   00001B                     	ds	3
  1386   00001E                     sprintf@ap:
  1387                           	callstack 0
  1388   00001E                     
  1389                           ; 1 bytes @ 0x1D
  1390   00001E                     	ds	1
  1391   00001F                     sprintf@f:
  1392                           	callstack 0
  1393                           
  1394                           ; 11 bytes @ 0x1E
  1395   00001F                     	ds	11
  1396   00002A                     ??_main:
  1397                           
  1398                           ; 1 bytes @ 0x29
  1399   00002A                     	ds	2
  1400   00002C                     main@ligne1:
  1401                           	callstack 0
  1402                           
  1403                           ; 32 bytes @ 0x2B
  1404   00002C                     	ds	32
  1405   00004C                     main@secondes:
  1406                           	callstack 0
  1407                           
  1408                           ; 1 bytes @ 0x4B
  1409   00004C                     	ds	1
  1410   00004D                     main@lectureBMP:
  1411                           	callstack 0
  1412                           
  1413                           ; 1 bytes @ 0x4C
  1414   00004D                     	ds	1
  1415   00004E                     main@lectureRTC:
  1416                           	callstack 0
  1417                           
  1418                           ; 1 bytes @ 0x4D
  1419   00004E                     	ds	1
  1420                           
  1421 ;;
  1422 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1423 ;;
  1424 ;; *************** function _main *****************
  1425 ;; Defined at:
  1426 ;;		line 100 in file "I2C26K83.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;		None
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;  ligne1         32   43[COMRAM] PTR unsigned char [16]
  1431 ;;  lectureRTC      1   77[COMRAM] unsigned char 
  1432 ;;  lectureBMP      1   76[COMRAM] unsigned char 
  1433 ;;  secondes        1   75[COMRAM] unsigned char 
  1434 ;; Return value:  Size  Location     Type
  1435 ;;                  1    wreg      void 
  1436 ;; Registers used:
  1437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1444 ;;      Locals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1445 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1446 ;;      Totals:        37       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1447 ;;Total ram usage:       37 bytes
  1448 ;; Hardware stack levels required when called: 5
  1449 ;; This function calls:
  1450 ;;		_Lcd_Clear
  1451 ;;		_Lcd_Init
  1452 ;;		_Lcd_Set_Cursor
  1453 ;;		_Lcd_Write_String
  1454 ;;		_sprintf
  1455 ;; This function is called by:
  1456 ;;		Startup code after reset
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text0
  1461   00100A                     __ptext0:
  1462                           	callstack 0
  1463   00100A                     _main:
  1464                           	callstack 26
  1465   00100A                     
  1466                           ;I2C26K83.c: 102:     char secondes = 0;
  1467   00100A  6A4C               	clrf	main@secondes^0,c
  1468                           
  1469                           ;I2C26K83.c: 104:     char lectureBMP = 0;
  1470   00100C  6A4D               	clrf	main@lectureBMP^0,c
  1471   00100E                     
  1472                           ;I2C26K83.c: 105:     char* ligne1[16];;I2C26K83.c: 107:     TRISA = 0b11000000;
  1473   00100E  0EC0               	movlw	192
  1474   001010  6EC2               	movwf	194,c	;volatile
  1475   001012                     
  1476                           ;I2C26K83.c: 108:     TRISB = 0;
  1477   001012  6AC3               	clrf	195,c	;volatile
  1478                           
  1479                           ;I2C26K83.c: 109:     TRISC = 0b10000011;
  1480   001014  0E83               	movlw	131
  1481   001016  6EC4               	movwf	196,c	;volatile
  1482   001018                     
  1483                           ;I2C26K83.c: 110:     ANSELA = 0;
  1484   001018  013A               	movlb	58	; () banked
  1485   00101A  6B40               	clrf	64,b	;volatile
  1486   00101C                     
  1487                           ; BSR set to: 58
  1488                           ;I2C26K83.c: 111:     ANSELB = 0;
  1489   00101C  6B50               	clrf	80,b	;volatile
  1490   00101E                     
  1491                           ; BSR set to: 58
  1492                           ;I2C26K83.c: 112:     ANSELC = 0;
  1493   00101E  6B60               	clrf	96,b	;volatile
  1494                           
  1495                           ;I2C26K83.c: 113:     ODCONB = 0b00000110;
  1496   001020  0E06               	movlw	6
  1497   001022  6F52               	movwf	82,b	;volatile
  1498   001024                     
  1499                           ; BSR set to: 58
  1500                           ;I2C26K83.c: 114:     PORTB = 0;
  1501   001024  6ACB               	clrf	203,c	;volatile
  1502   001026                     
  1503                           ; BSR set to: 58
  1504                           ;I2C26K83.c: 115:     PORTC = 0;
  1505   001026  6ACC               	clrf	204,c	;volatile
  1506                           
  1507                           ;I2C26K83.c: 118:     U1RXPPS = 0b00010111;
  1508   001028  0E17               	movlw	23
  1509   00102A  6FE7               	movwf	231,b	;volatile
  1510                           
  1511                           ;I2C26K83.c: 119:     RC6PPS = 0b00010011;
  1512   00102C  0E13               	movlw	19
  1513   00102E  6F16               	movwf	22,b	;volatile
  1514                           
  1515                           ;I2C26K83.c: 120:     I2C2SCLPPS = 0b00001001;
  1516   001030  0E09               	movlw	9
  1517   001032  6FE5               	movwf	229,b	;volatile
  1518                           
  1519                           ;I2C26K83.c: 121:     I2C2SDAPPS = 0b00001010;
  1520   001034  0E0A               	movlw	10
  1521   001036  6FE6               	movwf	230,b	;volatile
  1522                           
  1523                           ;I2C26K83.c: 122:     RB1PPS = 0b00100011;
  1524   001038  0E23               	movlw	35
  1525   00103A  6F09               	movwf	9,b	;volatile
  1526                           
  1527                           ;I2C26K83.c: 123:     RB2PPS = 0b00100100;
  1528   00103C  0E24               	movlw	36
  1529   00103E  6F0A               	movwf	10,b	;volatile
  1530                           
  1531                           ;I2C26K83.c: 126:     U1CON0 = 0b10100000;
  1532   001040  0EA0               	movlw	160
  1533   001042  013D               	movlb	61	; () banked
  1534   001044  6FF2               	movwf	242,b	;volatile
  1535                           
  1536                           ;I2C26K83.c: 127:     U1CON1 = 0b10000000;
  1537   001046  0E80               	movlw	128
  1538   001048  6FF3               	movwf	243,b	;volatile
  1539   00104A                     
  1540                           ; BSR set to: 61
  1541                           ;I2C26K83.c: 128:     U1CON2 = 0;
  1542   00104A  6BF4               	clrf	244,b	;volatile
  1543                           
  1544                           ;I2C26K83.c: 129:     U1BRG = 1666;
  1545   00104C  0E06               	movlw	6
  1546   00104E  6FF6               	movwf	246,b	;volatile
  1547   001050  0E82               	movlw	130
  1548   001052  6FF5               	movwf	245,b	;volatile
  1549                           
  1550                           ;I2C26K83.c: 133:     I2C2CON0 = 0b10000100;
  1551   001054  0E84               	movlw	132
  1552   001056  6F5D               	movwf	93,b	;volatile
  1553                           
  1554                           ;I2C26K83.c: 134:     I2C2CLK = 0b00000011;
  1555   001058  0E03               	movlw	3
  1556   00105A  6F65               	movwf	101,b	;volatile
  1557   00105C                     
  1558                           ; BSR set to: 61
  1559                           ;I2C26K83.c: 137:     Lcd_Init();
  1560   00105C  EC12  F00B         	call	_Lcd_Init	;wreg free
  1561   001060                     
  1562                           ;I2C26K83.c: 138:     Lcd_Clear();
  1563   001060  EC59  F00C         	call	_Lcd_Clear	;wreg free
  1564   001064                     
  1565                           ;I2C26K83.c: 139:     PORTBbits.RB5 = 1;
  1566   001064  8ACB               	bsf	203,5,c	;volatile
  1567   001066                     
  1568                           ;I2C26K83.c: 140:     _delay((unsigned long)((200)*(64000000/4000.0)));
  1569   001066  0E11               	movlw	17
  1570   001068  6E2B               	movwf	(??_main+1)^0,c
  1571   00106A  0E3C               	movlw	60
  1572   00106C  6E2A               	movwf	??_main^0,c
  1573   00106E  0ECB               	movlw	203
  1574   001070                     u1077:
  1575   001070  2EE8               	decfsz	wreg,f,c
  1576   001072  D7FE               	bra	u1077
  1577   001074  2E2A               	decfsz	??_main^0,f,c
  1578   001076  D7FC               	bra	u1077
  1579   001078  2E2B               	decfsz	(??_main+1)^0,f,c
  1580   00107A  D7FA               	bra	u1077
  1581   00107C  0000               	nop	
  1582   00107E                     
  1583                           ;I2C26K83.c: 143:     I2C2CON0bits.RSEN = 0;
  1584   00107E  013D               	movlb	61	; () banked
  1585   001080  9D5D               	bcf	93,6,b	;volatile
  1586   001082                     
  1587                           ; BSR set to: 61
  1588                           ;I2C26K83.c: 144:     I2C2CNT = 2;
  1589   001082  0E02               	movlw	2
  1590   001084  6F56               	movwf	86,b	;volatile
  1591   001086                     
  1592                           ; BSR set to: 61
  1593                           ;I2C26K83.c: 145:     I2C2ADB1 = 0b11010000;
  1594   001086  0ED0               	movlw	208
  1595   001088  6F58               	movwf	88,b	;volatile
  1596   00108A                     
  1597                           ; BSR set to: 61
  1598                           ;I2C26K83.c: 146:     I2C2TXB = 0;
  1599   00108A  6B55               	clrf	85,b	;volatile
  1600   00108C                     
  1601                           ; BSR set to: 61
  1602                           ;I2C26K83.c: 147:     I2C2CON0bits.S = 1;
  1603   00108C  8B5D               	bsf	93,5,b	;volatile
  1604   00108E                     l114:
  1605                           
  1606                           ; BSR set to: 61
  1607   00108E  A163               	btfss	99,0,b	;volatile
  1608   001090  EF4C  F008         	goto	u871
  1609   001094  EF4E  F008         	goto	u870
  1610   001098                     u871:
  1611   001098  EF47  F008         	goto	l114
  1612   00109C                     u870:
  1613   00109C                     
  1614                           ; BSR set to: 61
  1615                           ;I2C26K83.c: 149:     I2C2PIRbits.SCIF = 0;
  1616   00109C  9163               	bcf	99,0,b	;volatile
  1617   00109E                     l117:
  1618                           
  1619                           ; BSR set to: 61
  1620   00109E  AB62               	btfss	98,5,b	;volatile
  1621   0010A0  EF54  F008         	goto	u881
  1622   0010A4  EF56  F008         	goto	u880
  1623   0010A8                     u881:
  1624   0010A8  EF4F  F008         	goto	l117
  1625   0010AC                     u880:
  1626   0010AC                     
  1627                           ; BSR set to: 61
  1628                           ;I2C26K83.c: 151:     I2C2TXB = 0x45;
  1629   0010AC  0E45               	movlw	69
  1630   0010AE  6F55               	movwf	85,b	;volatile
  1631   0010B0                     l120:
  1632                           
  1633                           ; BSR set to: 61
  1634   0010B0  A563               	btfss	99,2,b	;volatile
  1635   0010B2  EF5D  F008         	goto	u891
  1636   0010B6  EF5F  F008         	goto	u890
  1637   0010BA                     u891:
  1638   0010BA  EF58  F008         	goto	l120
  1639   0010BE                     u890:
  1640   0010BE                     
  1641                           ; BSR set to: 61
  1642                           ;I2C26K83.c: 153:     I2C2PIRbits.PCIF = 0;
  1643   0010BE  9563               	bcf	99,2,b	;volatile
  1644                           
  1645                           ;I2C26K83.c: 155:     PORTBbits.RB5 = 0;
  1646   0010C0  9ACB               	bcf	203,5,c	;volatile
  1647   0010C2                     l1616:
  1648                           
  1649                           ;I2C26K83.c: 158:     {;I2C26K83.c: 159:         _delay((unsigned long)((100)*(64000000/
      +                          4000.0)));
  1650   0010C2  0E09               	movlw	9
  1651   0010C4  6E2B               	movwf	(??_main+1)^0,c
  1652   0010C6  0E1E               	movlw	30
  1653   0010C8  6E2A               	movwf	??_main^0,c
  1654   0010CA  0EE4               	movlw	228
  1655   0010CC                     u1087:
  1656   0010CC  2EE8               	decfsz	wreg,f,c
  1657   0010CE  D7FE               	bra	u1087
  1658   0010D0  2E2A               	decfsz	??_main^0,f,c
  1659   0010D2  D7FC               	bra	u1087
  1660   0010D4  2E2B               	decfsz	(??_main+1)^0,f,c
  1661   0010D6  D7FA               	bra	u1087
  1662   0010D8  D000               	nop2	
  1663   0010DA                     
  1664                           ;I2C26K83.c: 160:         PORTBbits.RB4 = !PORTBbits.RB4;
  1665   0010DA  A8CB               	btfss	203,4,c	;volatile
  1666   0010DC  EF72  F008         	goto	u901
  1667   0010E0  EF76  F008         	goto	u900
  1668   0010E4                     u901:
  1669   0010E4  6A2A               	clrf	??_main^0,c
  1670   0010E6  2A2A               	incf	??_main^0,f,c
  1671   0010E8  EF77  F008         	goto	u918
  1672   0010EC                     u900:
  1673   0010EC  6A2A               	clrf	??_main^0,c
  1674   0010EE                     u918:
  1675   0010EE  3A2A               	swapf	??_main^0,f,c
  1676   0010F0  50CB               	movf	203,w,c	;volatile
  1677   0010F2  182A               	xorwf	??_main^0,w,c
  1678   0010F4  0BEF               	andlw	-17
  1679   0010F6  182A               	xorwf	??_main^0,w,c
  1680   0010F8  6ECB               	movwf	203,c	;volatile
  1681   0010FA                     
  1682                           ;I2C26K83.c: 165:         I2C2CNT = 1;
  1683   0010FA  0E01               	movlw	1
  1684   0010FC  013D               	movlb	61	; () banked
  1685   0010FE  6F56               	movwf	86,b	;volatile
  1686   001100                     
  1687                           ; BSR set to: 61
  1688                           ;I2C26K83.c: 166:         I2C2ADB1 = 0b11010000;
  1689   001100  0ED0               	movlw	208
  1690   001102  6F58               	movwf	88,b	;volatile
  1691   001104                     
  1692                           ; BSR set to: 61
  1693                           ;I2C26K83.c: 167:         I2C2TXB = 0;
  1694   001104  6B55               	clrf	85,b	;volatile
  1695   001106                     
  1696                           ; BSR set to: 61
  1697                           ;I2C26K83.c: 168:         I2C2CON0bits.S = 1;
  1698   001106  8B5D               	bsf	93,5,b	;volatile
  1699   001108                     l124:
  1700                           
  1701                           ; BSR set to: 61
  1702   001108  A163               	btfss	99,0,b	;volatile
  1703   00110A  EF89  F008         	goto	u921
  1704   00110E  EF8B  F008         	goto	u920
  1705   001112                     u921:
  1706   001112  EF84  F008         	goto	l124
  1707   001116                     u920:
  1708   001116                     
  1709                           ; BSR set to: 61
  1710                           ;I2C26K83.c: 170:         I2C2PIRbits.SCIF = 0;
  1711   001116  9163               	bcf	99,0,b	;volatile
  1712   001118                     l127:
  1713                           
  1714                           ; BSR set to: 61
  1715   001118  AB62               	btfss	98,5,b	;volatile
  1716   00111A  EF91  F008         	goto	u931
  1717   00111E  EF93  F008         	goto	u930
  1718   001122                     u931:
  1719   001122  EF8C  F008         	goto	l127
  1720   001126                     u930:
  1721   001126                     l130:
  1722                           
  1723                           ; BSR set to: 61
  1724   001126  A563               	btfss	99,2,b	;volatile
  1725   001128  EF98  F008         	goto	u941
  1726   00112C  EF9A  F008         	goto	u940
  1727   001130                     u941:
  1728   001130  EF93  F008         	goto	l130
  1729   001134                     u940:
  1730   001134                     
  1731                           ; BSR set to: 61
  1732                           ;I2C26K83.c: 173:         I2C2PIRbits.PCIF = 0;
  1733   001134  9563               	bcf	99,2,b	;volatile
  1734   001136                     
  1735                           ; BSR set to: 61
  1736                           ;I2C26K83.c: 175:         I2C2ADB1 = 0b11010001;
  1737   001136  0ED1               	movlw	209
  1738   001138  6F58               	movwf	88,b	;volatile
  1739                           
  1740                           ;I2C26K83.c: 176:         I2C2CNT = 1;
  1741   00113A  0E01               	movlw	1
  1742   00113C  6F56               	movwf	86,b	;volatile
  1743   00113E                     
  1744                           ; BSR set to: 61
  1745                           ;I2C26K83.c: 177:         I2C2CON0bits.S = 1;
  1746   00113E  8B5D               	bsf	93,5,b	;volatile
  1747   001140                     l133:
  1748                           
  1749                           ; BSR set to: 61
  1750   001140  A163               	btfss	99,0,b	;volatile
  1751   001142  EFA5  F008         	goto	u951
  1752   001146  EFA7  F008         	goto	u950
  1753   00114A                     u951:
  1754   00114A  EFA0  F008         	goto	l133
  1755   00114E                     u950:
  1756   00114E                     
  1757                           ; BSR set to: 61
  1758                           ;I2C26K83.c: 179:         I2C2PIRbits.SCIF = 0;
  1759   00114E  9163               	bcf	99,0,b	;volatile
  1760                           
  1761                           ;I2C26K83.c: 180:         I2C2CON1bits.ACKCNT = 1;
  1762   001150  8F5E               	bsf	94,7,b	;volatile
  1763   001152                     l136:
  1764                           
  1765                           ; BSR set to: 61
  1766   001152  A162               	btfss	98,0,b	;volatile
  1767   001154  EFAE  F008         	goto	u961
  1768   001158  EFB0  F008         	goto	u960
  1769   00115C                     u961:
  1770   00115C  EFA9  F008         	goto	l136
  1771   001160                     u960:
  1772   001160                     
  1773                           ; BSR set to: 61
  1774                           ;I2C26K83.c: 182:         lectureRTC = I2C2RXB;
  1775   001160  006F F550  F04E    	movff	15700,main@lectureRTC	;volatile
  1776   001166                     l139:
  1777                           
  1778                           ; BSR set to: 61
  1779   001166  A563               	btfss	99,2,b	;volatile
  1780   001168  EFB8  F008         	goto	u971
  1781   00116C  EFBA  F008         	goto	u970
  1782   001170                     u971:
  1783   001170  EFB3  F008         	goto	l139
  1784   001174                     u970:
  1785   001174                     
  1786                           ; BSR set to: 61
  1787                           ;I2C26K83.c: 185:         I2C2PIRbits.PCIF = 0;
  1788   001174  9563               	bcf	99,2,b	;volatile
  1789   001176                     
  1790                           ; BSR set to: 61
  1791                           ;I2C26K83.c: 187:         if (lectureRTC != secondes)
  1792   001176  504C               	movf	main@secondes^0,w,c
  1793   001178  184E               	xorwf	main@lectureRTC^0,w,c
  1794   00117A  B4D8               	btfsc	status,2,c
  1795   00117C  EFC2  F008         	goto	u981
  1796   001180  EFC4  F008         	goto	u980
  1797   001184                     u981:
  1798   001184  EFD7  F008         	goto	l1638
  1799   001188                     u980:
  1800   001188                     
  1801                           ; BSR set to: 61
  1802                           ;I2C26K83.c: 188:         {;I2C26K83.c: 189:             PORTCbits.RC2 = !PORTCbits.RC2;
  1803   001188  A4CC               	btfss	204,2,c	;volatile
  1804   00118A  EFC9  F008         	goto	u991
  1805   00118E  EFCD  F008         	goto	u990
  1806   001192                     u991:
  1807   001192  6A2A               	clrf	??_main^0,c
  1808   001194  2A2A               	incf	??_main^0,f,c
  1809   001196  EFCE  F008         	goto	u1008
  1810   00119A                     u990:
  1811   00119A  6A2A               	clrf	??_main^0,c
  1812   00119C                     u1008:
  1813   00119C  462A               	rlncf	??_main^0,f,c
  1814   00119E  462A               	rlncf	??_main^0,f,c
  1815   0011A0  50CC               	movf	204,w,c	;volatile
  1816   0011A2  182A               	xorwf	??_main^0,w,c
  1817   0011A4  0BFB               	andlw	-5
  1818   0011A6  182A               	xorwf	??_main^0,w,c
  1819   0011A8  6ECC               	movwf	204,c	;volatile
  1820   0011AA                     
  1821                           ;I2C26K83.c: 190:             secondes = lectureRTC;
  1822   0011AA  C04E  F04C         	movff	main@lectureRTC,main@secondes
  1823   0011AE                     l1638:
  1824                           
  1825                           ;I2C26K83.c: 198:         I2C2CNT = 1;
  1826   0011AE  0E01               	movlw	1
  1827   0011B0  013D               	movlb	61	; () banked
  1828   0011B2  6F56               	movwf	86,b	;volatile
  1829   0011B4                     
  1830                           ; BSR set to: 61
  1831                           ;I2C26K83.c: 199:         I2C2ADB1 = 0xEC;
  1832   0011B4  0EEC               	movlw	236
  1833   0011B6  6F58               	movwf	88,b	;volatile
  1834   0011B8                     
  1835                           ; BSR set to: 61
  1836                           ;I2C26K83.c: 200:         I2C2TXB = 0xD0;
  1837   0011B8  0ED0               	movlw	208
  1838   0011BA  6F55               	movwf	85,b	;volatile
  1839   0011BC                     
  1840                           ; BSR set to: 61
  1841                           ;I2C26K83.c: 201:         I2C2CON0bits.S = 1;
  1842   0011BC  8B5D               	bsf	93,5,b	;volatile
  1843   0011BE                     l143:
  1844                           
  1845                           ; BSR set to: 61
  1846   0011BE  A163               	btfss	99,0,b	;volatile
  1847   0011C0  EFE4  F008         	goto	u1011
  1848   0011C4  EFE6  F008         	goto	u1010
  1849   0011C8                     u1011:
  1850   0011C8  EFDF  F008         	goto	l143
  1851   0011CC                     u1010:
  1852   0011CC                     
  1853                           ; BSR set to: 61
  1854                           ;I2C26K83.c: 203:         I2C2PIRbits.SCIF = 0;
  1855   0011CC  9163               	bcf	99,0,b	;volatile
  1856   0011CE                     l146:
  1857                           
  1858                           ; BSR set to: 61
  1859   0011CE  AB62               	btfss	98,5,b	;volatile
  1860   0011D0  EFEC  F008         	goto	u1021
  1861   0011D4  EFEE  F008         	goto	u1020
  1862   0011D8                     u1021:
  1863   0011D8  EFE7  F008         	goto	l146
  1864   0011DC                     u1020:
  1865   0011DC                     l149:
  1866                           
  1867                           ; BSR set to: 61
  1868   0011DC  A563               	btfss	99,2,b	;volatile
  1869   0011DE  EFF3  F008         	goto	u1031
  1870   0011E2  EFF5  F008         	goto	u1030
  1871   0011E6                     u1031:
  1872   0011E6  EFEE  F008         	goto	l149
  1873   0011EA                     u1030:
  1874   0011EA                     
  1875                           ; BSR set to: 61
  1876                           ;I2C26K83.c: 206:         I2C2PIRbits.PCIF = 0;
  1877   0011EA  9563               	bcf	99,2,b	;volatile
  1878   0011EC                     
  1879                           ; BSR set to: 61
  1880                           ;I2C26K83.c: 208:         I2C2ADB1 = 0xED;
  1881   0011EC  0EED               	movlw	237
  1882   0011EE  6F58               	movwf	88,b	;volatile
  1883                           
  1884                           ;I2C26K83.c: 209:         I2C2CNT = 1;
  1885   0011F0  0E01               	movlw	1
  1886   0011F2  6F56               	movwf	86,b	;volatile
  1887   0011F4                     
  1888                           ; BSR set to: 61
  1889                           ;I2C26K83.c: 210:         I2C2CON0bits.S = 1;
  1890   0011F4  8B5D               	bsf	93,5,b	;volatile
  1891   0011F6                     l152:
  1892                           
  1893                           ; BSR set to: 61
  1894   0011F6  A163               	btfss	99,0,b	;volatile
  1895   0011F8  EF00  F009         	goto	u1041
  1896   0011FC  EF02  F009         	goto	u1040
  1897   001200                     u1041:
  1898   001200  EFFB  F008         	goto	l152
  1899   001204                     u1040:
  1900   001204                     
  1901                           ; BSR set to: 61
  1902                           ;I2C26K83.c: 212:         I2C2PIRbits.SCIF = 0;
  1903   001204  9163               	bcf	99,0,b	;volatile
  1904                           
  1905                           ;I2C26K83.c: 213:         I2C2CON1bits.ACKCNT = 1;
  1906   001206  8F5E               	bsf	94,7,b	;volatile
  1907   001208                     l155:
  1908                           
  1909                           ; BSR set to: 61
  1910   001208  A162               	btfss	98,0,b	;volatile
  1911   00120A  EF09  F009         	goto	u1051
  1912   00120E  EF0B  F009         	goto	u1050
  1913   001212                     u1051:
  1914   001212  EF04  F009         	goto	l155
  1915   001216                     u1050:
  1916   001216                     
  1917                           ; BSR set to: 61
  1918                           ;I2C26K83.c: 215:         lectureBMP = I2C2RXB;
  1919   001216  006F F550  F04D    	movff	15700,main@lectureBMP	;volatile
  1920   00121C                     l158:
  1921                           
  1922                           ; BSR set to: 61
  1923   00121C  A563               	btfss	99,2,b	;volatile
  1924   00121E  EF13  F009         	goto	u1061
  1925   001222  EF15  F009         	goto	u1060
  1926   001226                     u1061:
  1927   001226  EF0E  F009         	goto	l158
  1928   00122A                     u1060:
  1929   00122A                     
  1930                           ; BSR set to: 61
  1931                           ;I2C26K83.c: 218:         I2C2PIRbits.PCIF = 0;
  1932   00122A  9563               	bcf	99,2,b	;volatile
  1933   00122C                     
  1934                           ; BSR set to: 61
  1935                           ;I2C26K83.c: 220:         Lcd_Clear();
  1936   00122C  EC59  F00C         	call	_Lcd_Clear	;wreg free
  1937   001230                     
  1938                           ;I2C26K83.c: 221:         sprintf(ligne1,"ID = %d",lectureBMP);
  1939   001230  0E2C               	movlw	low main@ligne1
  1940   001232  6E1A               	movwf	sprintf@s^0,c
  1941   001234  0E01               	movlw	low STR_1
  1942   001236  6E1B               	movwf	sprintf@fmt^0,c
  1943   001238  C04D  F01C         	movff	main@lectureBMP,?_sprintf+2
  1944   00123C  6A1D               	clrf	(?_sprintf+3)^0,c
  1945   00123E  EC1F  F00C         	call	_sprintf	;wreg free
  1946   001242                     
  1947                           ;I2C26K83.c: 222:         Lcd_Set_Cursor(1,1);
  1948   001242  0E01               	movlw	1
  1949   001244  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1950   001246  0E01               	movlw	1
  1951   001248  EC50  F00B         	call	_Lcd_Set_Cursor
  1952   00124C                     
  1953                           ;I2C26K83.c: 223:         Lcd_Write_String(ligne1);
  1954   00124C  0E2C               	movlw	low main@ligne1
  1955   00124E  6E05               	movwf	Lcd_Write_String@a^0,c
  1956   001250  ECEA  F00B         	call	_Lcd_Write_String	;wreg free
  1957   001254  EF61  F008         	goto	l1616
  1958   001258  EFFE  F07F         	goto	start
  1959   00125C                     __end_of_main:
  1960                           	callstack 0
  1961                           
  1962 ;; *************** function _sprintf *****************
  1963 ;; Defined at:
  1964 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\nf_sprintf.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;  s               1   25[COMRAM] PTR unsigned char 
  1967 ;;		 -> main@ligne1(32), 
  1968 ;;  fmt             1   26[COMRAM] PTR const unsigned char 
  1969 ;;		 -> STR_1(8), 
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;  f              11   30[COMRAM] struct _IO_FILE
  1972 ;;  ret             2    0        int 
  1973 ;;  ap              1   29[COMRAM] PTR void [1]
  1974 ;;		 -> ?_sprintf(2), 
  1975 ;; Return value:  Size  Location     Type
  1976 ;;                  2   25[COMRAM] int 
  1977 ;; Registers used:
  1978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1984 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1985 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1987 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1988 ;;Total ram usage:       16 bytes
  1989 ;; Hardware stack levels used: 1
  1990 ;; Hardware stack levels required when called: 4
  1991 ;; This function calls:
  1992 ;;		_vfprintf
  1993 ;; This function is called by:
  1994 ;;		_main
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998                           	psect	text1
  1999   00183E                     __ptext1:
  2000                           	callstack 0
  2001   00183E                     _sprintf:
  2002                           	callstack 26
  2003   00183E  0E1C               	movlw	low (?_sprintf+2)
  2004   001840  6E1E               	movwf	sprintf@ap^0,c
  2005   001842  C01A  F01F         	movff	sprintf@s,sprintf@f
  2006   001846  6A22               	clrf	(sprintf@f+3)^0,c
  2007   001848  0E00               	movlw	0
  2008   00184A  6E21               	movwf	(sprintf@f+2)^0,c
  2009   00184C  6A29               	clrf	(sprintf@f+10)^0,c
  2010   00184E  0E00               	movlw	0
  2011   001850  6E28               	movwf	(sprintf@f+9)^0,c
  2012   001852  0E1F               	movlw	low sprintf@f
  2013   001854  6E16               	movwf	vfprintf@fp^0,c
  2014   001856  C01B  F017         	movff	sprintf@fmt,vfprintf@fmt
  2015   00185A  0E1E               	movlw	low sprintf@ap
  2016   00185C  6E18               	movwf	vfprintf@ap^0,c
  2017   00185E  ECB1  F00B         	call	_vfprintf	;wreg free
  2018   001862  501A               	movf	sprintf@s^0,w,c
  2019   001864  2421               	addwf	(sprintf@f+2)^0,w,c
  2020   001866  6ED9               	movwf	fsr2l,c
  2021   001868  6ADA               	clrf	fsr2h,c
  2022   00186A  6ADF               	clrf	indf2,c
  2023   00186C  0012               	return		;funcret
  2024   00186E                     __end_of_sprintf:
  2025                           	callstack 0
  2026                           
  2027 ;; *************** function _vfprintf *****************
  2028 ;; Defined at:
  2029 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;  fp              1   21[COMRAM] PTR struct _IO_FILE
  2032 ;;		 -> sprintf@f(11), 
  2033 ;;  fmt             1   22[COMRAM] PTR const unsigned char 
  2034 ;;		 -> STR_1(8), 
  2035 ;;  ap              1   23[COMRAM] PTR PTR void 
  2036 ;;		 -> sprintf@ap(1), 
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;  cfmt            1   24[COMRAM] PTR unsigned char 
  2039 ;;		 -> STR_1(8), 
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  2   21[COMRAM] int 
  2042 ;; Registers used:
  2043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2049 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2050 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2052 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2053 ;;Total ram usage:        4 bytes
  2054 ;; Hardware stack levels used: 1
  2055 ;; Hardware stack levels required when called: 3
  2056 ;; This function calls:
  2057 ;;		_vfpfcnvrt
  2058 ;; This function is called by:
  2059 ;;		_sprintf
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           	psect	text2
  2064   001762                     __ptext2:
  2065                           	callstack 0
  2066   001762                     _vfprintf:
  2067                           	callstack 26
  2068   001762                     
  2069                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.10\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2070   001762  C017  F019         	movff	vfprintf@fmt,vfprintf@cfmt
  2071                           
  2072                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2073   001766  EFBD  F00B         	goto	l1536
  2074   00176A                     l1534:
  2075                           
  2076                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2077   00176A  C016  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  2078   00176E  0E19               	movlw	low vfprintf@cfmt
  2079   001770  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  2080   001772  C018  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  2081   001776  EC2E  F009         	call	_vfpfcnvrt	;wreg free
  2082   00177A                     l1536:
  2083                           
  2084                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2085   00177A  0060  F067  FFF6   	movff	vfprintf@cfmt,tblptrl
  2086   001780                     	if	0	;There is only one active tblptr byte
  2087   001780                     	endif
  2088   001780                     	if	0	;tblptru may be non-zero
  2089   001780                     	endif
  2090   001780                     	if	0	;tblptru may be non-zero
  2091   001780                     	endif
  2092   001780  0008               	tblrd		*
  2093   001782  50F5               	movf	tablat,w,c
  2094   001784  0900               	iorlw	0
  2095   001786  A4D8               	btfss	status,2,c
  2096   001788  EFC8  F00B         	goto	u831
  2097   00178C  EFCA  F00B         	goto	u830
  2098   001790                     u831:
  2099   001790  EFB5  F00B         	goto	l1534
  2100   001794                     u830:
  2101   001794                     
  2102                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2103   001794  6A17               	clrf	(?_vfprintf+1)^0,c
  2104   001796  0E00               	movlw	0
  2105   001798  6E16               	movwf	?_vfprintf^0,c
  2106   00179A  0012               	return		;funcret
  2107   00179C                     __end_of_vfprintf:
  2108                           	callstack 0
  2109                           
  2110 ;; *************** function _vfpfcnvrt *****************
  2111 ;; Defined at:
  2112 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  2115 ;;		 -> sprintf@f(11), 
  2116 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  2117 ;;		 -> vfprintf@cfmt(1), 
  2118 ;;  ap              1   12[COMRAM] PTR PTR void 
  2119 ;;		 -> sprintf@ap(1), 
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;  convarg         4   16[COMRAM] struct .
  2122 ;;  c               1   20[COMRAM] unsigned char 
  2123 ;;  cp              1   15[COMRAM] PTR unsigned char 
  2124 ;;		 -> STR_1(8), 
  2125 ;;  done            1   14[COMRAM] _Bool 
  2126 ;; Return value:  Size  Location     Type
  2127 ;;                  1    wreg      void 
  2128 ;; Registers used:
  2129 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 0/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2135 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2136 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2137 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2138 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2139 ;;Total ram usage:       11 bytes
  2140 ;; Hardware stack levels used: 1
  2141 ;; Hardware stack levels required when called: 2
  2142 ;; This function calls:
  2143 ;;		___awdiv
  2144 ;;		___awmod
  2145 ;;		_abs
  2146 ;;		_fputc
  2147 ;; This function is called by:
  2148 ;;		_vfprintf
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           	psect	text3
  2153   00125C                     __ptext3:
  2154                           	callstack 0
  2155   00125C                     _vfpfcnvrt:
  2156                           	callstack 26
  2157   00125C                     
  2158                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2159   00125C  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2160   00125E  6ED9               	movwf	fsr2l,c
  2161   001260  6ADA               	clrf	fsr2h,c
  2162   001262  006F FF7F FFF6     	movff	indf2,tblptrl
  2163   001268                     	if	0	;There is only one active tblptr byte
  2164   001268                     	endif
  2165   001268                     	if	0	;tblptru may be non-zero
  2166   001268                     	endif
  2167   001268                     	if	0	;tblptru may be non-zero
  2168   001268                     	endif
  2169   001268  0008               	tblrd		*
  2170   00126A  50F5               	movf	tablat,w,c
  2171   00126C  0A25               	xorlw	37
  2172   00126E  A4D8               	btfss	status,2,c
  2173   001270  EF3C  F009         	goto	u731
  2174   001274  EF3E  F009         	goto	u730
  2175   001278                     u731:
  2176   001278  EFF4  F009         	goto	l1526
  2177   00127C                     u730:
  2178   00127C                     
  2179                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2180   00127C  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2181   00127E  6ED9               	movwf	fsr2l,c
  2182   001280  6ADA               	clrf	fsr2h,c
  2183   001282  2ADF               	incf	indf2,f,c
  2184   001284                     
  2185                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2186   001284  6A50               	clrf	(_width+1)^0,c
  2187   001286  0E00               	movlw	0
  2188   001288  6E4F               	movwf	_width^0,c
  2189   00128A  C04F  F053         	movff	_width,_flags
  2190   00128E                     
  2191                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2192   00128E  6851               	setf	_prec^0,c
  2193   001290  6852               	setf	(_prec+1)^0,c
  2194   001292                     
  2195                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2196   001292  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2197   001294  6ED9               	movwf	fsr2l,c
  2198   001296  6ADA               	clrf	fsr2h,c
  2199   001298  50DF               	movf	indf2,w,c
  2200   00129A  6E10               	movwf	vfpfcnvrt@cp^0,c
  2201   00129C                     
  2202                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2203   00129C  0060  F043  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2204   0012A2                     	if	0	;There is only one active tblptr byte
  2205   0012A2                     	endif
  2206   0012A2                     	if	0	;tblptru may be non-zero
  2207   0012A2                     	endif
  2208   0012A2                     	if	0	;tblptru may be non-zero
  2209   0012A2                     	endif
  2210   0012A2  0008               	tblrd		*
  2211   0012A4  50F5               	movf	tablat,w,c
  2212   0012A6  0A64               	xorlw	100
  2213   0012A8  B4D8               	btfsc	status,2,c
  2214   0012AA  EF59  F009         	goto	u741
  2215   0012AE  EF5B  F009         	goto	u740
  2216   0012B2                     u741:
  2217   0012B2  EF68  F009         	goto	l1496
  2218   0012B6                     u740:
  2219   0012B6  0060  F043  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2220   0012BC                     	if	0	;There is only one active tblptr byte
  2221   0012BC                     	endif
  2222   0012BC                     	if	0	;tblptru may be non-zero
  2223   0012BC                     	endif
  2224   0012BC                     	if	0	;tblptru may be non-zero
  2225   0012BC                     	endif
  2226   0012BC  0008               	tblrd		*
  2227   0012BE  50F5               	movf	tablat,w,c
  2228   0012C0  0A69               	xorlw	105
  2229   0012C2  A4D8               	btfss	status,2,c
  2230   0012C4  EF66  F009         	goto	u751
  2231   0012C8  EF68  F009         	goto	u750
  2232   0012CC                     u751:
  2233   0012CC  EFEE  F009         	goto	l1522
  2234   0012D0                     u750:
  2235   0012D0                     l1496:
  2236                           
  2237                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2238   0012D0  500D               	movf	vfpfcnvrt@ap^0,w,c
  2239   0012D2  6ED9               	movwf	fsr2l,c
  2240   0012D4  6ADA               	clrf	fsr2h,c
  2241   0012D6  0E02               	movlw	2
  2242   0012D8  26DF               	addwf	indf2,f,c
  2243   0012DA  5CDF               	subwf	indf2,w,c
  2244   0012DC  6ED9               	movwf	fsr2l,c
  2245   0012DE  6ADA               	clrf	fsr2h,c
  2246   0012E0  006F FF78  F011    	movff	postinc2,vfpfcnvrt@convarg
  2247   0012E6  006F FF78  F012    	movff	postinc2,vfpfcnvrt@convarg+1
  2248   0012EC                     
  2249                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2250   0012EC  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2251   0012EE  6ED9               	movwf	fsr2l,c
  2252   0012F0  6ADA               	clrf	fsr2h,c
  2253   0012F2  2810               	incf	vfpfcnvrt@cp^0,w,c
  2254   0012F4  6EDF               	movwf	indf2,c
  2255   0012F6                     
  2256                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  2257   0012F6  0E20               	movlw	32
  2258   0012F8  6E15               	movwf	vfpfcnvrt@c^0,c
  2259                           
  2260                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  2261   0012FA  BE12               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2262   0012FC  EF82  F009         	goto	u761
  2263   001300  EF85  F009         	goto	u760
  2264   001304                     u761:
  2265   001304  0E01               	movlw	1
  2266   001306  EF86  F009         	goto	u770
  2267   00130A                     u760:
  2268   00130A  0E00               	movlw	0
  2269   00130C                     u770:
  2270   00130C  6E0F               	movwf	vfpfcnvrt@done^0,c
  2271   00130E                     l1502:
  2272                           
  2273                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  2274   00130E  0615               	decf	vfpfcnvrt@c^0,f,c
  2275   001310  5015               	movf	vfpfcnvrt@c^0,w,c
  2276   001312  0F60               	addlw	low _dbuf
  2277   001314  6ED9               	movwf	fsr2l,c
  2278   001316  6ADA               	clrf	fsr2h,c
  2279   001318  C011  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  2280   00131C  C012  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  2281   001320  6A04               	clrf	(___awmod@divisor+1)^0,c
  2282   001322  0E0A               	movlw	10
  2283   001324  6E03               	movwf	___awmod@divisor^0,c
  2284   001326  EC65  F00A         	call	___awmod	;wreg free
  2285   00132A  C001  F007         	movff	?___awmod,abs@a
  2286   00132E  C002  F008         	movff	?___awmod+1,abs@a+1
  2287   001332  EC05  F00C         	call	_abs	;wreg free
  2288   001336  5007               	movf	?_abs^0,w,c
  2289   001338  0F30               	addlw	48
  2290   00133A  6EDF               	movwf	indf2,c
  2291   00133C                     
  2292                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  2293   00133C  C011  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  2294   001340  C012  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  2295   001344  6A04               	clrf	(___awdiv@divisor+1)^0,c
  2296   001346  0E0A               	movlw	10
  2297   001348  6E03               	movwf	___awdiv@divisor^0,c
  2298   00134A  EC05  F00A         	call	___awdiv	;wreg free
  2299   00134E  C001  F011         	movff	?___awdiv,vfpfcnvrt@convarg
  2300   001352  C002  F012         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  2301   001356                     
  2302                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  2303   001356  5011               	movf	vfpfcnvrt@convarg^0,w,c
  2304   001358  1012               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  2305   00135A  B4D8               	btfsc	status,2,c
  2306   00135C  EFB2  F009         	goto	u781
  2307   001360  EFB4  F009         	goto	u780
  2308   001364                     u781:
  2309   001364  EFBC  F009         	goto	l1510
  2310   001368                     u780:
  2311   001368  5015               	movf	vfpfcnvrt@c^0,w,c
  2312   00136A  A4D8               	btfss	status,2,c
  2313   00136C  EFBA  F009         	goto	u791
  2314   001370  EFBC  F009         	goto	u790
  2315   001374                     u791:
  2316   001374  EF87  F009         	goto	l1502
  2317   001378                     u790:
  2318   001378                     l1510:
  2319                           
  2320                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  2321   001378  5015               	movf	vfpfcnvrt@c^0,w,c
  2322   00137A  B4D8               	btfsc	status,2,c
  2323   00137C  EFC2  F009         	goto	u801
  2324   001380  EFC4  F009         	goto	u800
  2325   001384                     u801:
  2326   001384  EFE3  F009         	goto	l1520
  2327   001388                     u800:
  2328   001388  500F               	movf	vfpfcnvrt@done^0,w,c
  2329   00138A  B4D8               	btfsc	status,2,c
  2330   00138C  EFCA  F009         	goto	u811
  2331   001390  EFCC  F009         	goto	u810
  2332   001394                     u811:
  2333   001394  EFE3  F009         	goto	l1520
  2334   001398                     u810:
  2335   001398                     
  2336                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  2337   001398  0615               	decf	vfpfcnvrt@c^0,f,c
  2338   00139A  5015               	movf	vfpfcnvrt@c^0,w,c
  2339   00139C  0F60               	addlw	low _dbuf
  2340   00139E  6ED9               	movwf	fsr2l,c
  2341   0013A0  6ADA               	clrf	fsr2h,c
  2342   0013A2  0E2D               	movlw	45
  2343   0013A4  6EDF               	movwf	indf2,c
  2344   0013A6  EFE3  F009         	goto	l1520
  2345   0013AA                     l1516:
  2346                           
  2347                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  2348   0013AA  5015               	movf	vfpfcnvrt@c^0,w,c
  2349   0013AC  0F60               	addlw	low _dbuf
  2350   0013AE  6ED9               	movwf	fsr2l,c
  2351   0013B0  6ADA               	clrf	fsr2h,c
  2352   0013B2  50DF               	movf	indf2,w,c
  2353   0013B4  6E0E               	movwf	??_vfpfcnvrt^0,c
  2354   0013B6  500E               	movf	??_vfpfcnvrt^0,w,c
  2355   0013B8  6E01               	movwf	fputc@c^0,c
  2356   0013BA  6A02               	clrf	(fputc@c+1)^0,c
  2357   0013BC  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2358   0013C0  ECBC  F00A         	call	_fputc	;wreg free
  2359   0013C4  2A15               	incf	vfpfcnvrt@c^0,f,c
  2360   0013C6                     l1520:
  2361                           
  2362                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  2363   0013C6  0E20               	movlw	32
  2364   0013C8  1815               	xorwf	vfpfcnvrt@c^0,w,c
  2365   0013CA  A4D8               	btfss	status,2,c
  2366   0013CC  EFEA  F009         	goto	u821
  2367   0013D0  EFEC  F009         	goto	u820
  2368   0013D4                     u821:
  2369   0013D4  EFD5  F009         	goto	l1516
  2370   0013D8                     u820:
  2371   0013D8  EF04  F00A         	goto	l992
  2372   0013DC                     l1522:
  2373                           
  2374                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2375   0013DC  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2376   0013DE  6ED9               	movwf	fsr2l,c
  2377   0013E0  6ADA               	clrf	fsr2h,c
  2378   0013E2  2ADF               	incf	indf2,f,c
  2379   0013E4  EF04  F00A         	goto	l992
  2380   0013E8                     l1526:
  2381                           
  2382                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2383   0013E8  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2384   0013EA  6ED9               	movwf	fsr2l,c
  2385   0013EC  6ADA               	clrf	fsr2h,c
  2386   0013EE  006F FF7F FFF6     	movff	indf2,tblptrl
  2387   0013F4                     	if	0	;There is only one active tblptr byte
  2388   0013F4                     	endif
  2389   0013F4                     	if	0	;tblptru may be non-zero
  2390   0013F4                     	endif
  2391   0013F4                     	if	0	;tblptru may be non-zero
  2392   0013F4                     	endif
  2393   0013F4  0008               	tblrd		*
  2394   0013F6  50F5               	movf	tablat,w,c
  2395   0013F8  6E01               	movwf	fputc@c^0,c
  2396   0013FA  6A02               	clrf	(fputc@c+1)^0,c
  2397   0013FC  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2398   001400  ECBC  F00A         	call	_fputc	;wreg free
  2399   001404  EFEE  F009         	goto	l1522
  2400   001408                     l992:
  2401   001408  0012               	return		;funcret
  2402   00140A                     __end_of_vfpfcnvrt:
  2403                           	callstack 0
  2404                           
  2405 ;; *************** function _fputc *****************
  2406 ;; Defined at:
  2407 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\nf_fputc.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;  c               2    0[COMRAM] int 
  2410 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  2411 ;;		 -> sprintf@f(11), 
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;		None
  2414 ;; Return value:  Size  Location     Type
  2415 ;;                  2    0[COMRAM] int 
  2416 ;; Registers used:
  2417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2423 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2425 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2426 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2427 ;;Total ram usage:        8 bytes
  2428 ;; Hardware stack levels used: 1
  2429 ;; Hardware stack levels required when called: 1
  2430 ;; This function calls:
  2431 ;;		_putch
  2432 ;; This function is called by:
  2433 ;;		_vfpfcnvrt
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           	psect	text4
  2438   001578                     __ptext4:
  2439                           	callstack 0
  2440   001578                     _fputc:
  2441                           	callstack 26
  2442   001578  5003               	movf	fputc@fp^0,w,c
  2443   00157A  B4D8               	btfsc	status,2,c
  2444   00157C  EFC2  F00A         	goto	u681
  2445   001580  EFC4  F00A         	goto	u680
  2446   001584                     u681:
  2447   001584  EFCC  F00A         	goto	l1468
  2448   001588                     u680:
  2449   001588  5003               	movf	fputc@fp^0,w,c
  2450   00158A  A4D8               	btfss	status,2,c
  2451   00158C  EFCA  F00A         	goto	u691
  2452   001590  EFCC  F00A         	goto	u690
  2453   001594                     u691:
  2454   001594  EFD1  F00A         	goto	l1470
  2455   001598                     u690:
  2456   001598                     l1468:
  2457   001598  5001               	movf	fputc@c^0,w,c
  2458   00159A  EC60  F00C         	call	_putch
  2459   00159E  EF11  F00B         	goto	l1017
  2460   0015A2                     l1470:
  2461   0015A2  5003               	movf	fputc@fp^0,w,c
  2462   0015A4  6ED9               	movwf	fsr2l,c
  2463   0015A6  6ADA               	clrf	fsr2h,c
  2464   0015A8  0E09               	movlw	9
  2465   0015AA  26D9               	addwf	fsr2l,f,c
  2466   0015AC  50DE               	movf	postinc2,w,c
  2467   0015AE  10DE               	iorwf	postinc2,w,c
  2468   0015B0  B4D8               	btfsc	status,2,c
  2469   0015B2  EFDD  F00A         	goto	u701
  2470   0015B6  EFDF  F00A         	goto	u700
  2471   0015BA                     u701:
  2472   0015BA  EFF8  F00A         	goto	l1474
  2473   0015BE                     u700:
  2474   0015BE  5003               	movf	fputc@fp^0,w,c
  2475   0015C0  6ED9               	movwf	fsr2l,c
  2476   0015C2  6ADA               	clrf	fsr2h,c
  2477   0015C4  0E09               	movlw	9
  2478   0015C6  26D9               	addwf	fsr2l,f,c
  2479   0015C8  5003               	movf	fputc@fp^0,w,c
  2480   0015CA  6EE1               	movwf	fsr1l,c
  2481   0015CC  6AE2               	clrf	fsr1h,c
  2482   0015CE  0E02               	movlw	2
  2483   0015D0  26E1               	addwf	fsr1l,f,c
  2484   0015D2  50DE               	movf	postinc2,w,c
  2485   0015D4  5CE6               	subwf	postinc1,w,c
  2486   0015D6  50E6               	movf	postinc1,w,c
  2487   0015D8  0A80               	xorlw	128
  2488   0015DA  6E08               	movwf	(??_fputc+4)^0,c
  2489   0015DC  50DE               	movf	postinc2,w,c
  2490   0015DE  0A80               	xorlw	128
  2491   0015E0  5808               	subwfb	(??_fputc+4)^0,w,c
  2492   0015E2  B0D8               	btfsc	status,0,c
  2493   0015E4  EFF6  F00A         	goto	u711
  2494   0015E8  EFF8  F00A         	goto	u710
  2495   0015EC                     u711:
  2496   0015EC  EF11  F00B         	goto	l1017
  2497   0015F0                     u710:
  2498   0015F0                     l1474:
  2499   0015F0  5003               	movf	fputc@fp^0,w,c
  2500   0015F2  6ED9               	movwf	fsr2l,c
  2501   0015F4  6ADA               	clrf	fsr2h,c
  2502   0015F6  0E02               	movlw	2
  2503   0015F8  26D9               	addwf	fsr2l,f,c
  2504   0015FA  50DF               	movf	indf2,w,c
  2505   0015FC  6E04               	movwf	??_fputc^0,c
  2506   0015FE  5003               	movf	fputc@fp^0,w,c
  2507   001600  6ED9               	movwf	fsr2l,c
  2508   001602  6ADA               	clrf	fsr2h,c
  2509   001604  50DF               	movf	indf2,w,c
  2510   001606  2404               	addwf	??_fputc^0,w,c
  2511   001608  6ED9               	movwf	fsr2l,c
  2512   00160A  6ADA               	clrf	fsr2h,c
  2513   00160C  0060  F007  FFDF   	movff	fputc@c,indf2
  2514   001612  5003               	movf	fputc@fp^0,w,c
  2515   001614  6ED9               	movwf	fsr2l,c
  2516   001616  6ADA               	clrf	fsr2h,c
  2517   001618  0E02               	movlw	2
  2518   00161A  26D9               	addwf	fsr2l,f,c
  2519   00161C  2ADE               	incf	postinc2,f,c
  2520   00161E  0E00               	movlw	0
  2521   001620  22DD               	addwfc	postdec2,f,c
  2522   001622                     l1017:
  2523   001622  0012               	return		;funcret
  2524   001624                     __end_of_fputc:
  2525                           	callstack 0
  2526                           
  2527 ;; *************** function _putch *****************
  2528 ;; Defined at:
  2529 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\putch.c"
  2530 ;; Parameters:    Size  Location     Type
  2531 ;;  c               1    wreg     unsigned char 
  2532 ;; Auto vars:     Size  Location     Type
  2533 ;;  c               1    0[COMRAM] unsigned char 
  2534 ;; Return value:  Size  Location     Type
  2535 ;;                  1    wreg      void 
  2536 ;; Registers used:
  2537 ;;		wreg
  2538 ;; Tracked objects:
  2539 ;;		On entry : 0/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2547 ;;Total ram usage:        0 bytes
  2548 ;; Hardware stack levels used: 1
  2549 ;; This function calls:
  2550 ;;		Nothing
  2551 ;; This function is called by:
  2552 ;;		_fputc
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556                           	psect	text5
  2557   0018C0                     __ptext5:
  2558                           	callstack 0
  2559   0018C0                     _putch:
  2560                           	callstack 26
  2561   0018C0  0012               	return		;funcret
  2562   0018C2                     __end_of_putch:
  2563                           	callstack 0
  2564                           
  2565 ;; *************** function _abs *****************
  2566 ;; Defined at:
  2567 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\abs.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;  a               2    6[COMRAM] int 
  2570 ;; Auto vars:     Size  Location     Type
  2571 ;;		None
  2572 ;; Return value:  Size  Location     Type
  2573 ;;                  2    6[COMRAM] int 
  2574 ;; Registers used:
  2575 ;;		wreg, status,2, status,0
  2576 ;; Tracked objects:
  2577 ;;		On entry : 0/0
  2578 ;;		On exit  : 0/0
  2579 ;;		Unchanged: 0/0
  2580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2581 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2583 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2584 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2585 ;;Total ram usage:        4 bytes
  2586 ;; Hardware stack levels used: 1
  2587 ;; This function calls:
  2588 ;;		Nothing
  2589 ;; This function is called by:
  2590 ;;		_vfpfcnvrt
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593                           
  2594                           	psect	text6
  2595   00180A                     __ptext6:
  2596                           	callstack 0
  2597   00180A                     _abs:
  2598                           	callstack 27
  2599   00180A  BE08               	btfsc	(abs@a+1)^0,7,c
  2600   00180C  EF0A  F00C         	goto	u721
  2601   001810  EF0C  F00C         	goto	u720
  2602   001814                     u721:
  2603   001814  EF12  F00C         	goto	l1002
  2604   001818                     u720:
  2605   001818  C007  F007         	movff	abs@a,?_abs
  2606   00181C  C008  F008         	movff	abs@a+1,?_abs+1
  2607   001820  EF1E  F00C         	goto	l1005
  2608   001824                     l1002:
  2609   001824  C007  F009         	movff	abs@a,??_abs
  2610   001828  C008  F00A         	movff	abs@a+1,??_abs+1
  2611   00182C  1E09               	comf	??_abs^0,f,c
  2612   00182E  1E0A               	comf	(??_abs+1)^0,f,c
  2613   001830  4A09               	infsnz	??_abs^0,f,c
  2614   001832  2A0A               	incf	(??_abs+1)^0,f,c
  2615   001834  C009  F007         	movff	??_abs,?_abs
  2616   001838  C00A  F008         	movff	??_abs+1,?_abs+1
  2617   00183C                     l1005:
  2618   00183C  0012               	return		;funcret
  2619   00183E                     __end_of_abs:
  2620                           	callstack 0
  2621                           
  2622 ;; *************** function ___awmod *****************
  2623 ;; Defined at:
  2624 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\awmod.c"
  2625 ;; Parameters:    Size  Location     Type
  2626 ;;  dividend        2    0[COMRAM] int 
  2627 ;;  divisor         2    2[COMRAM] int 
  2628 ;; Auto vars:     Size  Location     Type
  2629 ;;  sign            1    5[COMRAM] unsigned char 
  2630 ;;  counter         1    4[COMRAM] unsigned char 
  2631 ;; Return value:  Size  Location     Type
  2632 ;;                  2    0[COMRAM] int 
  2633 ;; Registers used:
  2634 ;;		wreg, status,2, status,0
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 0/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2640 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2641 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2643 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2644 ;;Total ram usage:        6 bytes
  2645 ;; Hardware stack levels used: 1
  2646 ;; This function calls:
  2647 ;;		Nothing
  2648 ;; This function is called by:
  2649 ;;		_vfpfcnvrt
  2650 ;; This function uses a non-reentrant model
  2651 ;;
  2652                           
  2653                           	psect	text7
  2654   0014CA                     __ptext7:
  2655                           	callstack 0
  2656   0014CA                     ___awmod:
  2657                           	callstack 27
  2658   0014CA  6A06               	clrf	___awmod@sign^0,c
  2659   0014CC  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2660   0014CE  EF6D  F00A         	goto	u620
  2661   0014D2  EF6B  F00A         	goto	u621
  2662   0014D6                     u621:
  2663   0014D6  EF73  F00A         	goto	l1436
  2664   0014DA                     u620:
  2665   0014DA  6C01               	negf	___awmod@dividend^0,c
  2666   0014DC  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2667   0014DE  B0D8               	btfsc	status,0,c
  2668   0014E0  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2669   0014E2  0E01               	movlw	1
  2670   0014E4  6E06               	movwf	___awmod@sign^0,c
  2671   0014E6                     l1436:
  2672   0014E6  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2673   0014E8  EF7A  F00A         	goto	u630
  2674   0014EC  EF78  F00A         	goto	u631
  2675   0014F0                     u631:
  2676   0014F0  EF7E  F00A         	goto	l1440
  2677   0014F4                     u630:
  2678   0014F4  6C03               	negf	___awmod@divisor^0,c
  2679   0014F6  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2680   0014F8  B0D8               	btfsc	status,0,c
  2681   0014FA  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2682   0014FC                     l1440:
  2683   0014FC  5003               	movf	___awmod@divisor^0,w,c
  2684   0014FE  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2685   001500  B4D8               	btfsc	status,2,c
  2686   001502  EF85  F00A         	goto	u641
  2687   001506  EF87  F00A         	goto	u640
  2688   00150A                     u641:
  2689   00150A  EFAB  F00A         	goto	l1456
  2690   00150E                     u640:
  2691   00150E  0E01               	movlw	1
  2692   001510  6E05               	movwf	___awmod@counter^0,c
  2693   001512  EF8F  F00A         	goto	l1446
  2694   001516                     l1444:
  2695   001516  90D8               	bcf	status,0,c
  2696   001518  3603               	rlcf	___awmod@divisor^0,f,c
  2697   00151A  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2698   00151C  2A05               	incf	___awmod@counter^0,f,c
  2699   00151E                     l1446:
  2700   00151E  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2701   001520  EF94  F00A         	goto	u651
  2702   001524  EF96  F00A         	goto	u650
  2703   001528                     u651:
  2704   001528  EF8B  F00A         	goto	l1444
  2705   00152C                     u650:
  2706   00152C                     l1448:
  2707   00152C  5003               	movf	___awmod@divisor^0,w,c
  2708   00152E  5C01               	subwf	___awmod@dividend^0,w,c
  2709   001530  5004               	movf	(___awmod@divisor+1)^0,w,c
  2710   001532  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2711   001534  A0D8               	btfss	status,0,c
  2712   001536  EF9F  F00A         	goto	u661
  2713   00153A  EFA1  F00A         	goto	u660
  2714   00153E                     u661:
  2715   00153E  EFA5  F00A         	goto	l1452
  2716   001542                     u660:
  2717   001542  5003               	movf	___awmod@divisor^0,w,c
  2718   001544  5E01               	subwf	___awmod@dividend^0,f,c
  2719   001546  5004               	movf	(___awmod@divisor+1)^0,w,c
  2720   001548  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2721   00154A                     l1452:
  2722   00154A  90D8               	bcf	status,0,c
  2723   00154C  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2724   00154E  3203               	rrcf	___awmod@divisor^0,f,c
  2725   001550  2E05               	decfsz	___awmod@counter^0,f,c
  2726   001552  EF96  F00A         	goto	l1448
  2727   001556                     l1456:
  2728   001556  5006               	movf	___awmod@sign^0,w,c
  2729   001558  B4D8               	btfsc	status,2,c
  2730   00155A  EFB1  F00A         	goto	u671
  2731   00155E  EFB3  F00A         	goto	u670
  2732   001562                     u671:
  2733   001562  EFB7  F00A         	goto	l1460
  2734   001566                     u670:
  2735   001566  6C01               	negf	___awmod@dividend^0,c
  2736   001568  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2737   00156A  B0D8               	btfsc	status,0,c
  2738   00156C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2739   00156E                     l1460:
  2740   00156E  C001  F001         	movff	___awmod@dividend,?___awmod
  2741   001572  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2742   001576  0012               	return		;funcret
  2743   001578                     __end_of___awmod:
  2744                           	callstack 0
  2745                           
  2746 ;; *************** function ___awdiv *****************
  2747 ;; Defined at:
  2748 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\awdiv.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;  dividend        2    0[COMRAM] int 
  2751 ;;  divisor         2    2[COMRAM] int 
  2752 ;; Auto vars:     Size  Location     Type
  2753 ;;  quotient        2    6[COMRAM] int 
  2754 ;;  sign            1    5[COMRAM] unsigned char 
  2755 ;;  counter         1    4[COMRAM] unsigned char 
  2756 ;; Return value:  Size  Location     Type
  2757 ;;                  2    0[COMRAM] int 
  2758 ;; Registers used:
  2759 ;;		wreg, status,2, status,0
  2760 ;; Tracked objects:
  2761 ;;		On entry : 0/0
  2762 ;;		On exit  : 0/0
  2763 ;;		Unchanged: 0/0
  2764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2765 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2766 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2768 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2769 ;;Total ram usage:        8 bytes
  2770 ;; Hardware stack levels used: 1
  2771 ;; This function calls:
  2772 ;;		Nothing
  2773 ;; This function is called by:
  2774 ;;		_vfpfcnvrt
  2775 ;; This function uses a non-reentrant model
  2776 ;;
  2777                           
  2778                           	psect	text8
  2779   00140A                     __ptext8:
  2780                           	callstack 0
  2781   00140A                     ___awdiv:
  2782                           	callstack 27
  2783   00140A  6A06               	clrf	___awdiv@sign^0,c
  2784   00140C  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2785   00140E  EF0D  F00A         	goto	u560
  2786   001412  EF0B  F00A         	goto	u561
  2787   001416                     u561:
  2788   001416  EF13  F00A         	goto	l1392
  2789   00141A                     u560:
  2790   00141A  6C03               	negf	___awdiv@divisor^0,c
  2791   00141C  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2792   00141E  B0D8               	btfsc	status,0,c
  2793   001420  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2794   001422  0E01               	movlw	1
  2795   001424  6E06               	movwf	___awdiv@sign^0,c
  2796   001426                     l1392:
  2797   001426  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2798   001428  EF1A  F00A         	goto	u570
  2799   00142C  EF18  F00A         	goto	u571
  2800   001430                     u571:
  2801   001430  EF20  F00A         	goto	l1398
  2802   001434                     u570:
  2803   001434  6C01               	negf	___awdiv@dividend^0,c
  2804   001436  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2805   001438  B0D8               	btfsc	status,0,c
  2806   00143A  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2807   00143C  0E01               	movlw	1
  2808   00143E  1A06               	xorwf	___awdiv@sign^0,f,c
  2809   001440                     l1398:
  2810   001440  6A08               	clrf	(___awdiv@quotient+1)^0,c
  2811   001442  0E00               	movlw	0
  2812   001444  6E07               	movwf	___awdiv@quotient^0,c
  2813   001446  5003               	movf	___awdiv@divisor^0,w,c
  2814   001448  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2815   00144A  B4D8               	btfsc	status,2,c
  2816   00144C  EF2A  F00A         	goto	u581
  2817   001450  EF2C  F00A         	goto	u580
  2818   001454                     u581:
  2819   001454  EF54  F00A         	goto	l1420
  2820   001458                     u580:
  2821   001458  0E01               	movlw	1
  2822   00145A  6E05               	movwf	___awdiv@counter^0,c
  2823   00145C  EF34  F00A         	goto	l1406
  2824   001460                     l1404:
  2825   001460  90D8               	bcf	status,0,c
  2826   001462  3603               	rlcf	___awdiv@divisor^0,f,c
  2827   001464  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2828   001466  2A05               	incf	___awdiv@counter^0,f,c
  2829   001468                     l1406:
  2830   001468  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2831   00146A  EF39  F00A         	goto	u591
  2832   00146E  EF3B  F00A         	goto	u590
  2833   001472                     u591:
  2834   001472  EF30  F00A         	goto	l1404
  2835   001476                     u590:
  2836   001476                     l1408:
  2837   001476  90D8               	bcf	status,0,c
  2838   001478  3607               	rlcf	___awdiv@quotient^0,f,c
  2839   00147A  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2840   00147C  5003               	movf	___awdiv@divisor^0,w,c
  2841   00147E  5C01               	subwf	___awdiv@dividend^0,w,c
  2842   001480  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2843   001482  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2844   001484  A0D8               	btfss	status,0,c
  2845   001486  EF47  F00A         	goto	u601
  2846   00148A  EF49  F00A         	goto	u600
  2847   00148E                     u601:
  2848   00148E  EF4E  F00A         	goto	l1416
  2849   001492                     u600:
  2850   001492  5003               	movf	___awdiv@divisor^0,w,c
  2851   001494  5E01               	subwf	___awdiv@dividend^0,f,c
  2852   001496  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2853   001498  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2854   00149A  8007               	bsf	___awdiv@quotient^0,0,c
  2855   00149C                     l1416:
  2856   00149C  90D8               	bcf	status,0,c
  2857   00149E  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2858   0014A0  3203               	rrcf	___awdiv@divisor^0,f,c
  2859   0014A2  2E05               	decfsz	___awdiv@counter^0,f,c
  2860   0014A4  EF3B  F00A         	goto	l1408
  2861   0014A8                     l1420:
  2862   0014A8  5006               	movf	___awdiv@sign^0,w,c
  2863   0014AA  B4D8               	btfsc	status,2,c
  2864   0014AC  EF5A  F00A         	goto	u611
  2865   0014B0  EF5C  F00A         	goto	u610
  2866   0014B4                     u611:
  2867   0014B4  EF60  F00A         	goto	l1424
  2868   0014B8                     u610:
  2869   0014B8  6C07               	negf	___awdiv@quotient^0,c
  2870   0014BA  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2871   0014BC  B0D8               	btfsc	status,0,c
  2872   0014BE  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2873   0014C0                     l1424:
  2874   0014C0  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2875   0014C4  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2876   0014C8  0012               	return		;funcret
  2877   0014CA                     __end_of___awdiv:
  2878                           	callstack 0
  2879                           
  2880 ;; *************** function _Lcd_Write_String *****************
  2881 ;; Defined at:
  2882 ;;		line 94 in file "./lcd.h"
  2883 ;; Parameters:    Size  Location     Type
  2884 ;;  a               1    4[COMRAM] PTR unsigned char 
  2885 ;;		 -> main@ligne1(32), 
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;  i               2    5[COMRAM] int 
  2888 ;; Return value:  Size  Location     Type
  2889 ;;                  1    wreg      void 
  2890 ;; Registers used:
  2891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2892 ;; Tracked objects:
  2893 ;;		On entry : 0/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2897 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2898 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2900 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2901 ;;Total ram usage:        3 bytes
  2902 ;; Hardware stack levels used: 1
  2903 ;; Hardware stack levels required when called: 2
  2904 ;; This function calls:
  2905 ;;		_Lcd_Write_Char
  2906 ;; This function is called by:
  2907 ;;		_main
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910                           
  2911                           	psect	text9
  2912   0017D4                     __ptext9:
  2913                           	callstack 0
  2914   0017D4                     _Lcd_Write_String:
  2915                           	callstack 28
  2916   0017D4                     
  2917                           ;./lcd.h: 94: void Lcd_Write_String(char *a);./lcd.h: 95: {;./lcd.h: 96:  int i;;./lcd.h
      +                          : 97:  for(i=0;a[i]!='\0';i++)
  2918   0017D4  6A07               	clrf	(Lcd_Write_String@i+1)^0,c
  2919   0017D6  0E00               	movlw	0
  2920   0017D8  6E06               	movwf	Lcd_Write_String@i^0,c
  2921   0017DA  EFF8  F00B         	goto	l1564
  2922   0017DE                     l1560:
  2923                           
  2924                           ;./lcd.h: 98:     Lcd_Write_Char(a[i]);
  2925   0017DE  5005               	movf	Lcd_Write_String@a^0,w,c
  2926   0017E0  2406               	addwf	Lcd_Write_String@i^0,w,c
  2927   0017E2  6ED9               	movwf	fsr2l,c
  2928   0017E4  6ADA               	clrf	fsr2h,c
  2929   0017E6  50DF               	movf	indf2,w,c
  2930   0017E8  ECCE  F00B         	call	_Lcd_Write_Char
  2931   0017EC  4A06               	infsnz	Lcd_Write_String@i^0,f,c
  2932   0017EE  2A07               	incf	(Lcd_Write_String@i+1)^0,f,c
  2933   0017F0                     l1564:
  2934   0017F0  5005               	movf	Lcd_Write_String@a^0,w,c
  2935   0017F2  2406               	addwf	Lcd_Write_String@i^0,w,c
  2936   0017F4  6ED9               	movwf	fsr2l,c
  2937   0017F6  6ADA               	clrf	fsr2h,c
  2938   0017F8  50DF               	movf	indf2,w,c
  2939   0017FA  A4D8               	btfss	status,2,c
  2940   0017FC  EF02  F00C         	goto	u861
  2941   001800  EF04  F00C         	goto	u860
  2942   001804                     u861:
  2943   001804  EFEF  F00B         	goto	l1560
  2944   001808                     u860:
  2945   001808  0012               	return		;funcret
  2946   00180A                     __end_of_Lcd_Write_String:
  2947                           	callstack 0
  2948                           
  2949 ;; *************** function _Lcd_Write_Char *****************
  2950 ;; Defined at:
  2951 ;;		line 78 in file "./lcd.h"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;  a               1    wreg     unsigned char 
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;  a               1    3[COMRAM] unsigned char 
  2956 ;;  y               1    2[COMRAM] unsigned char 
  2957 ;;  temp            1    1[COMRAM] unsigned char 
  2958 ;; Return value:  Size  Location     Type
  2959 ;;                  1    wreg      void 
  2960 ;; Registers used:
  2961 ;;		wreg, status,2, status,0, cstack
  2962 ;; Tracked objects:
  2963 ;;		On entry : 0/0
  2964 ;;		On exit  : 0/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2968 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2970 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2971 ;;Total ram usage:        3 bytes
  2972 ;; Hardware stack levels used: 1
  2973 ;; Hardware stack levels required when called: 1
  2974 ;; This function calls:
  2975 ;;		_Lcd_Port
  2976 ;; This function is called by:
  2977 ;;		_Lcd_Write_String
  2978 ;; This function uses a non-reentrant model
  2979 ;;
  2980                           
  2981                           	psect	text10
  2982   00179C                     __ptext10:
  2983                           	callstack 0
  2984   00179C                     _Lcd_Write_Char:
  2985                           	callstack 28
  2986                           
  2987                           ;incstack = 0
  2988                           ;Lcd_Write_Char@a stored from wreg
  2989   00179C  6E04               	movwf	Lcd_Write_Char@a^0,c
  2990   00179E                     
  2991                           ;./lcd.h: 78: void Lcd_Write_Char(char a);./lcd.h: 79: {;./lcd.h: 80:    char temp,y;;./
      +                          lcd.h: 81:    temp = a&0x0F;
  2992   00179E  5004               	movf	Lcd_Write_Char@a^0,w,c
  2993   0017A0  0B0F               	andlw	15
  2994   0017A2  6E02               	movwf	Lcd_Write_Char@temp^0,c
  2995                           
  2996                           ;./lcd.h: 82:    y = a&0xF0;
  2997   0017A4  5004               	movf	Lcd_Write_Char@a^0,w,c
  2998   0017A6  0BF0               	andlw	240
  2999   0017A8  6E03               	movwf	Lcd_Write_Char@y^0,c
  3000   0017AA                     
  3001                           ;./lcd.h: 83:    PORTAbits.RA0 = 1;
  3002   0017AA  80CA               	bsf	202,0,c	;volatile
  3003   0017AC                     
  3004                           ;./lcd.h: 84:    Lcd_Port(y>>4);
  3005   0017AC  3803               	swapf	Lcd_Write_Char@y^0,w,c
  3006   0017AE  0B0F               	andlw	15
  3007   0017B0  EC83  F00B         	call	_Lcd_Port
  3008   0017B4                     
  3009                           ;./lcd.h: 85:    PORTAbits.RA1 = 1;
  3010   0017B4  82CA               	bsf	202,1,c	;volatile
  3011   0017B6                     
  3012                           ;./lcd.h: 86:    _delay((unsigned long)((40)*(64000000/4000000.0)));
  3013   0017B6  0ED5               	movlw	213
  3014   0017B8                     u1097:
  3015   0017B8  2EE8               	decfsz	wreg,f,c
  3016   0017BA  D7FE               	bra	u1097
  3017   0017BC  0000               	nop	
  3018   0017BE                     
  3019                           ;./lcd.h: 87:    PORTAbits.RA1 = 0;
  3020   0017BE  92CA               	bcf	202,1,c	;volatile
  3021   0017C0                     
  3022                           ;./lcd.h: 88:    Lcd_Port(temp);
  3023   0017C0  5002               	movf	Lcd_Write_Char@temp^0,w,c
  3024   0017C2  EC83  F00B         	call	_Lcd_Port
  3025   0017C6                     
  3026                           ;./lcd.h: 89:    PORTAbits.RA1 = 1;
  3027   0017C6  82CA               	bsf	202,1,c	;volatile
  3028   0017C8                     
  3029                           ;./lcd.h: 90:    _delay((unsigned long)((40)*(64000000/4000000.0)));
  3030   0017C8  0ED5               	movlw	213
  3031   0017CA                     u1107:
  3032   0017CA  2EE8               	decfsz	wreg,f,c
  3033   0017CC  D7FE               	bra	u1107
  3034   0017CE  0000               	nop	
  3035   0017D0                     
  3036                           ;./lcd.h: 91:    PORTAbits.RA1 = 0;
  3037   0017D0  92CA               	bcf	202,1,c	;volatile
  3038   0017D2  0012               	return		;funcret
  3039   0017D4                     __end_of_Lcd_Write_Char:
  3040                           	callstack 0
  3041                           
  3042 ;; *************** function _Lcd_Set_Cursor *****************
  3043 ;; Defined at:
  3044 ;;		line 38 in file "./lcd.h"
  3045 ;; Parameters:    Size  Location     Type
  3046 ;;  a               1    wreg     unsigned char 
  3047 ;;  b               1    3[COMRAM] unsigned char 
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;  a               1    4[COMRAM] unsigned char 
  3050 ;;  temp            1    7[COMRAM] unsigned char 
  3051 ;;  y               1    6[COMRAM] unsigned char 
  3052 ;;  z               1    5[COMRAM] unsigned char 
  3053 ;; Return value:  Size  Location     Type
  3054 ;;                  1    wreg      void 
  3055 ;; Registers used:
  3056 ;;		wreg, status,2, status,0, cstack
  3057 ;; Tracked objects:
  3058 ;;		On entry : 0/0
  3059 ;;		On exit  : 0/0
  3060 ;;		Unchanged: 0/0
  3061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3062 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3063 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3065 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3066 ;;Total ram usage:        5 bytes
  3067 ;; Hardware stack levels used: 1
  3068 ;; Hardware stack levels required when called: 1
  3069 ;; This function calls:
  3070 ;;		_Lcd_Cmd
  3071 ;; This function is called by:
  3072 ;;		_main
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075                           
  3076                           	psect	text11
  3077   0016A0                     __ptext11:
  3078                           	callstack 0
  3079   0016A0                     _Lcd_Set_Cursor:
  3080                           	callstack 29
  3081                           
  3082                           ;incstack = 0
  3083                           ;Lcd_Set_Cursor@a stored from wreg
  3084   0016A0  6E05               	movwf	Lcd_Set_Cursor@a^0,c
  3085   0016A2                     
  3086                           ;./lcd.h: 38: void Lcd_Set_Cursor(char a, char b);./lcd.h: 39: {;./lcd.h: 40:  char temp
      +                          ,z,y;;./lcd.h: 41:  if(a == 1)
  3087   0016A2  0405               	decf	Lcd_Set_Cursor@a^0,w,c
  3088   0016A4  A4D8               	btfss	status,2,c
  3089   0016A6  EF57  F00B         	goto	u841
  3090   0016AA  EF59  F00B         	goto	u840
  3091   0016AE                     u841:
  3092   0016AE  EF6A  F00B         	goto	l1550
  3093   0016B2                     u840:
  3094   0016B2                     
  3095                           ;./lcd.h: 42:  {;./lcd.h: 43:    temp = 0x80 + b - 1;
  3096   0016B2  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  3097   0016B4  0F7F               	addlw	127
  3098   0016B6  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  3099                           
  3100                           ;./lcd.h: 44:   z = temp>>4;
  3101   0016B8  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  3102   0016BA  0B0F               	andlw	15
  3103   0016BC  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  3104                           
  3105                           ;./lcd.h: 45:   y = temp & 0x0F;
  3106   0016BE  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  3107   0016C0  0B0F               	andlw	15
  3108   0016C2  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  3109   0016C4                     
  3110                           ;./lcd.h: 46:   Lcd_Cmd(z);
  3111   0016C4  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  3112   0016C6  EC49  F00C         	call	_Lcd_Cmd
  3113   0016CA                     
  3114                           ;./lcd.h: 47:   Lcd_Cmd(y);
  3115   0016CA  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  3116   0016CC  EC49  F00C         	call	_Lcd_Cmd
  3117                           
  3118                           ;./lcd.h: 48:  }
  3119   0016D0  EF82  F00B         	goto	l91
  3120   0016D4                     l1550:
  3121   0016D4  0E02               	movlw	2
  3122   0016D6  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  3123   0016D8  A4D8               	btfss	status,2,c
  3124   0016DA  EF71  F00B         	goto	u851
  3125   0016DE  EF73  F00B         	goto	u850
  3126   0016E2                     u851:
  3127   0016E2  EF82  F00B         	goto	l91
  3128   0016E6                     u850:
  3129   0016E6                     
  3130                           ;./lcd.h: 50:  {;./lcd.h: 51:   temp = 0xC0 + b - 1;
  3131   0016E6  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  3132   0016E8  0FBF               	addlw	191
  3133   0016EA  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  3134                           
  3135                           ;./lcd.h: 52:   z = temp>>4;
  3136   0016EC  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  3137   0016EE  0B0F               	andlw	15
  3138   0016F0  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  3139                           
  3140                           ;./lcd.h: 53:   y = temp & 0x0F;
  3141   0016F2  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  3142   0016F4  0B0F               	andlw	15
  3143   0016F6  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  3144   0016F8                     
  3145                           ;./lcd.h: 54:   Lcd_Cmd(z);
  3146   0016F8  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  3147   0016FA  EC49  F00C         	call	_Lcd_Cmd
  3148   0016FE                     
  3149                           ;./lcd.h: 55:   Lcd_Cmd(y);
  3150   0016FE  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  3151   001700  EC49  F00C         	call	_Lcd_Cmd
  3152   001704                     l91:
  3153   001704  0012               	return		;funcret
  3154   001706                     __end_of_Lcd_Set_Cursor:
  3155                           	callstack 0
  3156                           
  3157 ;; *************** function _Lcd_Init *****************
  3158 ;; Defined at:
  3159 ;;		line 59 in file "./lcd.h"
  3160 ;; Parameters:    Size  Location     Type
  3161 ;;		None
  3162 ;; Auto vars:     Size  Location     Type
  3163 ;;		None
  3164 ;; Return value:  Size  Location     Type
  3165 ;;                  1    wreg      void 
  3166 ;; Registers used:
  3167 ;;		wreg, status,2, cstack
  3168 ;; Tracked objects:
  3169 ;;		On entry : 0/0
  3170 ;;		On exit  : 0/0
  3171 ;;		Unchanged: 0/0
  3172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3175 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3176 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3177 ;;Total ram usage:        2 bytes
  3178 ;; Hardware stack levels used: 1
  3179 ;; Hardware stack levels required when called: 1
  3180 ;; This function calls:
  3181 ;;		_Lcd_Cmd
  3182 ;;		_Lcd_Port
  3183 ;; This function is called by:
  3184 ;;		_main
  3185 ;; This function uses a non-reentrant model
  3186 ;;
  3187                           
  3188                           	psect	text12
  3189   001624                     __ptext12:
  3190                           	callstack 0
  3191   001624                     _Lcd_Init:
  3192                           	callstack 29
  3193   001624                     
  3194                           ;./lcd.h: 61:   Lcd_Port(0x00);
  3195   001624  0E00               	movlw	0
  3196   001626  EC83  F00B         	call	_Lcd_Port
  3197   00162A                     
  3198                           ;./lcd.h: 62:    _delay((unsigned long)((20)*(64000000/4000.0)));
  3199   00162A  0E02               	movlw	2
  3200   00162C  6E05               	movwf	(??_Lcd_Init+1)^0,c
  3201   00162E  0EA0               	movlw	160
  3202   001630  6E04               	movwf	??_Lcd_Init^0,c
  3203   001632  0E92               	movlw	146
  3204   001634                     u1117:
  3205   001634  2EE8               	decfsz	wreg,f,c
  3206   001636  D7FE               	bra	u1117
  3207   001638  2E04               	decfsz	??_Lcd_Init^0,f,c
  3208   00163A  D7FC               	bra	u1117
  3209   00163C  2E05               	decfsz	(??_Lcd_Init+1)^0,f,c
  3210   00163E  D7FA               	bra	u1117
  3211   001640  D000               	nop2	
  3212   001642                     
  3213                           ;./lcd.h: 63:   Lcd_Cmd(0x03);
  3214   001642  0E03               	movlw	3
  3215   001644  EC49  F00C         	call	_Lcd_Cmd
  3216   001648                     
  3217                           ;./lcd.h: 64:  _delay((unsigned long)((5)*(64000000/4000.0)));
  3218   001648  0E68               	movlw	104
  3219   00164A  6E04               	movwf	??_Lcd_Init^0,c
  3220   00164C  0EE4               	movlw	228
  3221   00164E                     u1127:
  3222   00164E  2EE8               	decfsz	wreg,f,c
  3223   001650  D7FE               	bra	u1127
  3224   001652  2E04               	decfsz	??_Lcd_Init^0,f,c
  3225   001654  D7FC               	bra	u1127
  3226   001656  D000               	nop2	
  3227   001658                     
  3228                           ;./lcd.h: 65:   Lcd_Cmd(0x03);
  3229   001658  0E03               	movlw	3
  3230   00165A  EC49  F00C         	call	_Lcd_Cmd
  3231   00165E                     
  3232                           ;./lcd.h: 66:  _delay((unsigned long)((11)*(64000000/4000.0)));
  3233   00165E  0EE5               	movlw	229
  3234   001660  6E04               	movwf	??_Lcd_Init^0,c
  3235   001662  0E91               	movlw	145
  3236   001664                     u1137:
  3237   001664  2EE8               	decfsz	wreg,f,c
  3238   001666  D7FE               	bra	u1137
  3239   001668  2E04               	decfsz	??_Lcd_Init^0,f,c
  3240   00166A  D7FC               	bra	u1137
  3241   00166C  0000               	nop	
  3242   00166E                     
  3243                           ;./lcd.h: 67:   Lcd_Cmd(0x03);
  3244   00166E  0E03               	movlw	3
  3245   001670  EC49  F00C         	call	_Lcd_Cmd
  3246   001674                     
  3247                           ;./lcd.h: 69:   Lcd_Cmd(0x02);
  3248   001674  0E02               	movlw	2
  3249   001676  EC49  F00C         	call	_Lcd_Cmd
  3250   00167A                     
  3251                           ;./lcd.h: 70:   Lcd_Cmd(0x02);
  3252   00167A  0E02               	movlw	2
  3253   00167C  EC49  F00C         	call	_Lcd_Cmd
  3254   001680                     
  3255                           ;./lcd.h: 71:   Lcd_Cmd(0x08);
  3256   001680  0E08               	movlw	8
  3257   001682  EC49  F00C         	call	_Lcd_Cmd
  3258   001686                     
  3259                           ;./lcd.h: 72:   Lcd_Cmd(0x00);
  3260   001686  0E00               	movlw	0
  3261   001688  EC49  F00C         	call	_Lcd_Cmd
  3262   00168C                     
  3263                           ;./lcd.h: 73:   Lcd_Cmd(0x0C);
  3264   00168C  0E0C               	movlw	12
  3265   00168E  EC49  F00C         	call	_Lcd_Cmd
  3266   001692                     
  3267                           ;./lcd.h: 74:   Lcd_Cmd(0x00);
  3268   001692  0E00               	movlw	0
  3269   001694  EC49  F00C         	call	_Lcd_Cmd
  3270   001698                     
  3271                           ;./lcd.h: 75:   Lcd_Cmd(0x06);
  3272   001698  0E06               	movlw	6
  3273   00169A  EC49  F00C         	call	_Lcd_Cmd
  3274   00169E  0012               	return		;funcret
  3275   0016A0                     __end_of_Lcd_Init:
  3276                           	callstack 0
  3277                           
  3278 ;; *************** function _Lcd_Clear *****************
  3279 ;; Defined at:
  3280 ;;		line 32 in file "./lcd.h"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;		None
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;		None
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  1    wreg      void 
  3287 ;; Registers used:
  3288 ;;		wreg, status,2, cstack
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3298 ;;Total ram usage:        0 bytes
  3299 ;; Hardware stack levels used: 1
  3300 ;; Hardware stack levels required when called: 2
  3301 ;; This function calls:
  3302 ;;		_Lcd_Cmd
  3303 ;; This function is called by:
  3304 ;;		_main
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           	psect	text13
  3309   0018B2                     __ptext13:
  3310                           	callstack 0
  3311   0018B2                     _Lcd_Clear:
  3312                           	callstack 28
  3313   0018B2                     
  3314                           ;./lcd.h: 34:  Lcd_Cmd(0);
  3315   0018B2  0E00               	movlw	0
  3316   0018B4  EC49  F00C         	call	_Lcd_Cmd
  3317                           
  3318                           ;./lcd.h: 35:  Lcd_Cmd(1);
  3319   0018B8  0E01               	movlw	1
  3320   0018BA  EC49  F00C         	call	_Lcd_Cmd
  3321   0018BE  0012               	return		;funcret
  3322   0018C0                     __end_of_Lcd_Clear:
  3323                           	callstack 0
  3324                           
  3325 ;; *************** function _Lcd_Cmd *****************
  3326 ;; Defined at:
  3327 ;;		line 23 in file "./lcd.h"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;  a               1    wreg     unsigned char 
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;  a               1    2[COMRAM] unsigned char 
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  1    wreg      void 
  3334 ;; Registers used:
  3335 ;;		wreg, status,2, cstack
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3342 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3343 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3344 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3345 ;;Total ram usage:        2 bytes
  3346 ;; Hardware stack levels used: 1
  3347 ;; This function calls:
  3348 ;;		_Lcd_Port
  3349 ;; This function is called by:
  3350 ;;		_Lcd_Clear
  3351 ;;		_Lcd_Set_Cursor
  3352 ;;		_Lcd_Init
  3353 ;;		_Lcd_Shift_Right
  3354 ;;		_Lcd_Shift_Left
  3355 ;; This function uses a non-reentrant model
  3356 ;;
  3357                           
  3358                           	psect	text14
  3359   001892                     __ptext14:
  3360                           	callstack 0
  3361   001892                     _Lcd_Cmd:
  3362                           	callstack 29
  3363                           
  3364                           ;incstack = 0
  3365                           ;Lcd_Cmd@a stored from wreg
  3366   001892  6E03               	movwf	Lcd_Cmd@a^0,c
  3367   001894                     
  3368                           ;./lcd.h: 23: void Lcd_Cmd(char a);./lcd.h: 24: {;./lcd.h: 25:  PORTAbits.RA0 = 0;
  3369   001894  90CA               	bcf	202,0,c	;volatile
  3370   001896                     
  3371                           ;./lcd.h: 26:  Lcd_Port(a);
  3372   001896  5003               	movf	Lcd_Cmd@a^0,w,c
  3373   001898  EC83  F00B         	call	_Lcd_Port
  3374   00189C                     
  3375                           ;./lcd.h: 27:  PORTAbits.RA1 = 1;
  3376   00189C  82CA               	bsf	202,1,c	;volatile
  3377   00189E                     
  3378                           ;./lcd.h: 28:     _delay((unsigned long)((4)*(64000000/4000.0)));
  3379   00189E  0E54               	movlw	84
  3380   0018A0  6E02               	movwf	??_Lcd_Cmd^0,c
  3381   0018A2  0E1C               	movlw	28
  3382   0018A4                     u1147:
  3383   0018A4  2EE8               	decfsz	wreg,f,c
  3384   0018A6  D7FE               	bra	u1147
  3385   0018A8  2E02               	decfsz	??_Lcd_Cmd^0,f,c
  3386   0018AA  D7FC               	bra	u1147
  3387   0018AC  D000               	nop2	
  3388   0018AE                     
  3389                           ;./lcd.h: 29:     PORTAbits.RA1 = 0;
  3390   0018AE  92CA               	bcf	202,1,c	;volatile
  3391   0018B0  0012               	return		;funcret
  3392   0018B2                     __end_of_Lcd_Cmd:
  3393                           	callstack 0
  3394                           
  3395 ;; *************** function _Lcd_Port *****************
  3396 ;; Defined at:
  3397 ;;		line 1 in file "./lcd.h"
  3398 ;; Parameters:    Size  Location     Type
  3399 ;;  a               1    wreg     unsigned char 
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;  a               1    0[COMRAM] unsigned char 
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  1    wreg      void 
  3404 ;; Registers used:
  3405 ;;		wreg
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3412 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3414 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3415 ;;Total ram usage:        1 bytes
  3416 ;; Hardware stack levels used: 1
  3417 ;; This function calls:
  3418 ;;		Nothing
  3419 ;; This function is called by:
  3420 ;;		_Lcd_Cmd
  3421 ;;		_Lcd_Init
  3422 ;;		_Lcd_Write_Char
  3423 ;; This function uses a non-reentrant model
  3424 ;;
  3425                           
  3426                           	psect	text15
  3427   001706                     __ptext15:
  3428                           	callstack 0
  3429   001706                     _Lcd_Port:
  3430                           	callstack 28
  3431                           
  3432                           ;incstack = 0
  3433                           ;Lcd_Port@a stored from wreg
  3434   001706  6E01               	movwf	Lcd_Port@a^0,c
  3435   001708                     
  3436                           ;./lcd.h: 1: void Lcd_Port(char a);./lcd.h: 2: {;./lcd.h: 3:  if(a & 1)
  3437   001708  A001               	btfss	Lcd_Port@a^0,0,c
  3438   00170A  EF89  F00B         	goto	u181
  3439   00170E  EF8B  F00B         	goto	u180
  3440   001712                     u181:
  3441   001712  EF8E  F00B         	goto	l71
  3442   001716                     u180:
  3443   001716                     
  3444                           ;./lcd.h: 4:   PORTAbits.RA2 = 1;
  3445   001716  84CA               	bsf	202,2,c	;volatile
  3446   001718  EF8F  F00B         	goto	l1132
  3447   00171C                     l71:
  3448                           
  3449                           ;./lcd.h: 6:   PORTAbits.RA2 = 0;
  3450   00171C  94CA               	bcf	202,2,c	;volatile
  3451   00171E                     l1132:
  3452                           
  3453                           ;./lcd.h: 8:  if(a & 2)
  3454   00171E  A201               	btfss	Lcd_Port@a^0,1,c
  3455   001720  EF94  F00B         	goto	u191
  3456   001724  EF96  F00B         	goto	u190
  3457   001728                     u191:
  3458   001728  EF99  F00B         	goto	l73
  3459   00172C                     u190:
  3460   00172C                     
  3461                           ;./lcd.h: 9:   PORTAbits.RA3 = 1;
  3462   00172C  86CA               	bsf	202,3,c	;volatile
  3463   00172E  EF9A  F00B         	goto	l1136
  3464   001732                     l73:
  3465                           
  3466                           ;./lcd.h: 11:   PORTAbits.RA3 = 0;
  3467   001732  96CA               	bcf	202,3,c	;volatile
  3468   001734                     l1136:
  3469                           
  3470                           ;./lcd.h: 13:  if(a & 4)
  3471   001734  A401               	btfss	Lcd_Port@a^0,2,c
  3472   001736  EF9F  F00B         	goto	u201
  3473   00173A  EFA1  F00B         	goto	u200
  3474   00173E                     u201:
  3475   00173E  EFA4  F00B         	goto	l75
  3476   001742                     u200:
  3477   001742                     
  3478                           ;./lcd.h: 14:   PORTAbits.RA4 = 1;
  3479   001742  88CA               	bsf	202,4,c	;volatile
  3480   001744  EFA5  F00B         	goto	l1140
  3481   001748                     l75:
  3482                           
  3483                           ;./lcd.h: 16:   PORTAbits.RA4 = 0;
  3484   001748  98CA               	bcf	202,4,c	;volatile
  3485   00174A                     l1140:
  3486                           
  3487                           ;./lcd.h: 18:  if(a & 8)
  3488   00174A  A601               	btfss	Lcd_Port@a^0,3,c
  3489   00174C  EFAA  F00B         	goto	u211
  3490   001750  EFAC  F00B         	goto	u210
  3491   001754                     u211:
  3492   001754  EFAF  F00B         	goto	l77
  3493   001758                     u210:
  3494   001758                     
  3495                           ;./lcd.h: 19:   PORTAbits.RA5 = 1;
  3496   001758  8ACA               	bsf	202,5,c	;volatile
  3497   00175A  EFB0  F00B         	goto	l79
  3498   00175E                     l77:
  3499                           
  3500                           ;./lcd.h: 21:   PORTAbits.RA5 = 0;
  3501   00175E  9ACA               	bcf	202,5,c	;volatile
  3502   001760                     l79:
  3503   001760  0012               	return		;funcret
  3504   001762                     __end_of_Lcd_Port:
  3505                           	callstack 0
  3506                           
  3507                           	psect	rparam
  3508   000001                     ___rparam_used  equ	1
  3509   000000                     ___param_bank   equ	0
  3510   000000                     __Lparam        equ	__Lrparam
  3511   000000                     __Hparam        equ	__Hrparam
  3512                           
  3513                           	psect	config
  3514                           
  3515                           ;Config register CONFIG1L @ 0x300000
  3516                           ;	External Oscillator Selection
  3517                           ;	FEXTOSC = OFF, Oscillator not enabled
  3518                           ;	Reset Oscillator Selection
  3519                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  3520   300000                     	org	3145728
  3521   300000  8C                 	db	140
  3522                           
  3523                           ;Config register CONFIG1H @ 0x300001
  3524                           ;	Clock out Enable bit
  3525                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  3526                           ;	PRLOCKED One-Way Set Enable bit
  3527                           ;	PR1WAY = OFF, PRLOCK bit can be set and cleared repeatedly
  3528                           ;	Clock Switch Enable bit
  3529                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  3530                           ;	Fail-Safe Clock Monitor Enable bit
  3531                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3532   300001                     	org	3145729
  3533   300001  FD                 	db	253
  3534                           
  3535                           ;Config register CONFIG2L @ 0x300002
  3536                           ;	MCLR Enable bit
  3537                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  3538                           ;	Power-up timer selection bits
  3539                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  3540                           ;	Multi-vector enable bit
  3541                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  3542                           ;	IVTLOCK bit One-way set enable bit
  3543                           ;	IVT1WAY = OFF, IVTLOCK bit can be cleared and set repeatedly
  3544                           ;	Low Power BOR Enable bit
  3545                           ;	LPBOREN = OFF, ULPBOR disabled
  3546                           ;	Brown-out Reset Enable bits
  3547                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  3548   300002                     	org	3145730
  3549   300002  E7                 	db	231
  3550                           
  3551                           ;Config register CONFIG2H @ 0x300003
  3552                           ;	Brown-out Reset Voltage Selection bits
  3553                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  3554                           ;	ZCD Disable bit
  3555                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  3556                           ;	PPSLOCK bit One-Way Set Enable bit
  3557                           ;	PPS1WAY = OFF, PPSLOCK bit can be set and cleared repeatedly (subject to the unlock se
      +                          quence)
  3558                           ;	Stack Full/Underflow Reset Enable bit
  3559                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3560                           ;	Debugger Enable bit
  3561                           ;	DEBUG = OFF, Background debugger disabled
  3562                           ;	Extended Instruction Set Enable bit
  3563                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3564   300003                     	org	3145731
  3565   300003  F7                 	db	247
  3566                           
  3567                           ;Config register CONFIG3L @ 0x300004
  3568                           ;	WDT Period selection bits
  3569                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3570                           ;	WDT operating mode
  3571                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  3572   300004                     	org	3145732
  3573   300004  9F                 	db	159
  3574                           
  3575                           ;Config register CONFIG3H @ 0x300005
  3576                           ;	WDT Window Select bits
  3577                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3578                           ;	WDT input clock selector
  3579                           ;	WDTCCS = SC, Software Control
  3580   300005                     	org	3145733
  3581   300005  FF                 	db	255
  3582                           
  3583                           ;Config register CONFIG4L @ 0x300006
  3584                           ;	Boot Block Size selection bits
  3585                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  3586                           ;	Boot Block enable bit
  3587                           ;	BBEN = OFF, Boot block disabled
  3588                           ;	Storage Area Flash enable bit
  3589                           ;	SAFEN = OFF, SAF disabled
  3590                           ;	Application Block write protection bit
  3591                           ;	WRTAPP = OFF, Application Block not write protected
  3592   300006                     	org	3145734
  3593   300006  FF                 	db	255
  3594                           
  3595                           ;Config register CONFIG4H @ 0x300007
  3596                           ;	Boot Block Write Protection bit
  3597                           ;	WRTB = OFF, Boot Block not write-protected
  3598                           ;	Configuration Register Write Protection bit
  3599                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  3600                           ;	Data EEPROM Write Protection bit
  3601                           ;	WRTD = OFF, Data EEPROM not write-protected
  3602                           ;	SAF Write protection bit
  3603                           ;	WRTSAF = OFF, SAF not Write Protected
  3604                           ;	Low Voltage Programming Enable bit
  3605                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  3606   300007                     	org	3145735
  3607   300007  DF                 	db	223
  3608                           
  3609                           ;Config register CONFIG5L @ 0x300008
  3610                           ;	PFM and Data EEPROM Code Protection bit
  3611                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  3612   300008                     	org	3145736
  3613   300008  FF                 	db	255
  3614                           
  3615                           ;Config register CONFIG5H @ 0x300009
  3616                           ;	unspecified, using default values
  3617   300009                     	org	3145737
  3618   300009  FF                 	db	255
  3619                           tosu	equ	0x3FFF
  3620                           tosh	equ	0x3FFE
  3621                           tosl	equ	0x3FFD
  3622                           stkptr	equ	0x3FFC
  3623                           pclatu	equ	0x3FFB
  3624                           pclath	equ	0x3FFA
  3625                           pcl	equ	0x3FF9
  3626                           tblptru	equ	0x3FF8
  3627                           tblptrh	equ	0x3FF7
  3628                           tblptrl	equ	0x3FF6
  3629                           tablat	equ	0x3FF5
  3630                           prodh	equ	0x3FF4
  3631                           prodl	equ	0x3FF3
  3632                           indf0	equ	0x3FEF
  3633                           postinc0	equ	0x3FEE
  3634                           postdec0	equ	0x3FED
  3635                           preinc0	equ	0x3FEC
  3636                           plusw0	equ	0x3FEB
  3637                           fsr0h	equ	0x3FEA
  3638                           fsr0l	equ	0x3FE9
  3639                           wreg	equ	0x3FE8
  3640                           indf1	equ	0x3FE7
  3641                           postinc1	equ	0x3FE6
  3642                           postdec1	equ	0x3FE5
  3643                           preinc1	equ	0x3FE4
  3644                           plusw1	equ	0x3FE3
  3645                           fsr1h	equ	0x3FE2
  3646                           fsr1l	equ	0x3FE1
  3647                           bsr	equ	0x3FE0
  3648                           indf2	equ	0x3FDF
  3649                           postinc2	equ	0x3FDE
  3650                           postdec2	equ	0x3FDD
  3651                           preinc2	equ	0x3FDC
  3652                           plusw2	equ	0x3FDB
  3653                           fsr2h	equ	0x3FDA
  3654                           fsr2l	equ	0x3FD9
  3655                           status	equ	0x3FD8

Data Sizes:
    Strings     8
    Constant    0
    Data        0
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     78      83
    BANK0           160      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(1) Largest target is 32
		 -> main@ligne1(COMRAM[32]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 32
		 -> main@ligne1(COMRAM[32]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 32
		 -> main@ligne1(COMRAM[32]), 

    main@ligne1	PTR unsigned char [16] size(2) Largest target is 0

    S951$buffer	PTR unsigned char  size(1) Largest target is 32
		 -> main@ligne1(COMRAM[32]), 

    S951$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 32
		 -> main@ligne1(COMRAM[32]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                37    37      0    2685
                                             41 COMRAM    37    37      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    14      4    1760
                                             25 COMRAM    16    12      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    1559
                                             21 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           11     8      3    1434
                                             10 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     230
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2      67
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     302
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     2      1     211
                                              4 COMRAM     3     2      1
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     120
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     360
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     135
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      75
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0      75
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      60
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _sprintf
     _vfprintf
       _vfpfcnvrt
         ___awdiv
         ___awmod
         _abs
           ___awmod (ARG)
         _fputc
           _putch

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            4095      0       0      0.0%
BITBIGSFRh        1306      0       0      0.0%
BITBIGSFRll        777      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBIGSFRlh        218      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0      32     20.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     78      83     87.4%
STACK                0      0       0      0.0%
DATA                 0      0     115      0.0%


Microchip Technology PIC18 Macro Assembler V3.10 build 20250813170317 
Symbol Table                                                                                   Fri Oct 10 09:12:58 2025

                      l71 171C                        l73 1732                        l82 18B0  
                      l75 1748                        l91 1704                        l77 175E  
                      l85 18BE                        l94 169E                        l79 1760  
                      l97 17D2              ___awdiv@sign 0006                       l103 1808  
                     l120 10B0                       l130 1126                       l122 10BE  
                     l114 108E                       l132 1134                       l124 1108  
                     l116 109C                       l141 1174                       l133 1140  
                     l117 109E                       l126 1116                       l151 11EA  
                     l143 11BE                       l135 114E                       l127 1118  
                     l160 122A                       l152 11F6                       l136 1152  
                     l145 11CC                       l154 1204                       l146 11CE  
                     l138 1160                       l155 1208                       l139 1166  
                     l157 1216                       l149 11DC                       l158 121C  
                     l520 1576                       l507 14C8                       l954 186C  
                     l992 1408                       l998 179A                       u200 1742  
                     u201 173E                       u210 1758                       u211 1754  
                     u180 1716                       u181 1712                       u190 172C  
                     u191 1728                       u600 1492                       u601 148E  
                     u610 14B8                       u611 14B4                       u620 14DA  
                     u700 15BE                       u621 14D6                       u701 15BA  
                     u630 14F4                       u710 15F0                       u631 14F0  
                     u711 15EC                       u560 141A                       u640 150E  
                     u720 1818                       u800 1388                       u561 1416  
                     u641 150A                       u721 1814                       u801 1384  
                     u570 1434                       u650 152C                       u810 1398  
                     u730 127C                       u571 1430                       u651 1528  
                     u811 1394                       u731 1278                       u580 1458  
                     u660 1542                       u820 13D8                       u740 12B6  
                     u900 10EC                       u581 1454                       u661 153E  
                     u821 13D4                       u741 12B2                       u901 10E4  
                     u590 1476                       u670 1566                       u750 12D0  
                     u830 1794                       u591 1472                       u671 1562  
                     u751 12CC                       u831 1790                       u840 16B2  
                     u680 1588                       u760 130A                       u920 1116  
                     u841 16AE                       u681 1584                       u761 1304  
                     u921 1112                       u850 16E6                       u690 1598  
                     u770 130C                       u930 1126                       u851 16E2  
                     u691 1594                       u931 1122                       u860 1808  
                     u780 1368                       u940 1134                       u861 1804  
                     u781 1364                       u941 1130                       u790 1378  
                     u950 114E                       u918 10EE                       u870 109C  
                     u791 1374                       u951 114A                       u871 1098  
                     u960 1160                       u880 10AC                       u961 115C  
                     u881 10A8                       u970 1174                       u890 10BE  
                     u971 1170                       u891 10BA                       u980 1188  
                     u981 1184                       u990 119A                       u991 1192  
                     _abs 180A              ___awmod@sign 0006                       wreg 3FE8  
                    l1002 1824                      l1005 183C                      l1200 189E  
                    l1017 1622                      l1130 1716                      l1202 18AE  
                    l1210 17B4                      ?_abs 0007                      l1140 174A  
                    l1132 171E                      l1220 17C8                      l1212 17B6  
                    l1204 179E                      l1028 18C0                      l1142 1758  
                    l1134 172C                      l1222 17D0                      l1214 17BE  
                    l1206 17AA                      l1136 1734                      l1128 1708  
                    l1216 17C0                      l1208 17AC                      l1400 1446  
                    l1138 1742                      l1234 18B2                      l1218 17C6  
                    l1410 147C                      l1402 1458                      l1260 1658  
                    l1252 1624                      l1412 1492                      l1404 1460  
                    l1420 14A8                      l1500 12F6                      l1270 1680  
                    l1262 165E                      l1254 162A                      l1422 14B8  
                    l1414 149A                      l1406 1468                      l1430 14CC  
                    l1510 1378                      l1502 130E                      l1272 1686  
                    l1264 166E                      l1256 1642                      l1424 14C0  
                    l1416 149C                      l1408 1476                      l1440 14FC  
                    l1432 14DA                      l1512 1388                      l1520 13C6  
                    l1504 133C                      l1600 1064                      l1194 1894  
                    l1274 168C                      l1266 1674                      l1258 1648  
                    l1418 14A2                      l1450 1542                      l1442 150E  
                    l1434 14E2                      l1514 1398                      l1506 1356  
                    l1522 13DC                      l1610 108A                      l1602 1066  
                    l1196 1896                      l1276 1692                      l1268 167A  
                    l1460 156E                      l1452 154A                      l1444 1516  
                    l1436 14E6                      l1428 14CA                      l1516 13AA  
                    l1508 1368                      l1532 1762                      l1620 10FA  
                    l1612 108C                      l1604 107E                      l1198 189C  
                    l1278 1698                      l1550 16D4                      l1542 16A2  
                    l1390 1422                      l1454 1550                      l1446 151E  
                    l1438 14F4                      l1470 15A2                      l1518 13C4  
                    l1526 13E8                      l1534 176A                      l1630 113E  
                    l1622 1100                      l1614 10AC                      l1606 1082  
                    l1552 16E6                      l1544 16B2                      l1560 17DE  
                    l1392 1426                      l1384 140A                      l1448 152C  
                    l1456 1556                      l1480 1818                      l1472 15BE  
                    l1464 1578                      l1536 177A                      l1640 11B4  
                    l1632 1176                      l1624 1104                      l1616 10C2  
                    l1608 1086                      l1554 16F8                      l1546 16C4  
                    l1562 17EC                      l1394 1434                      l1386 140C  
                    l1458 1566                      l1474 15F0                      l1466 1588  
                    l1490 1292                      l1482 125C                      l1538 1794  
                    l1570 184C                      l1650 122C                      l1642 11B8  
                    l1634 1188                      l1626 1106                      l1618 10DA  
                    l1556 16FE                      l1548 16CA                      l1564 17F0  
                    l1396 143C                      l1388 141A                      l1468 1598  
                    l1492 129C                      l1484 127C                      l1572 1852  
                    l1652 1230                      l1644 11BC                      l1636 11AA  
                    l1628 1136                      l1580 100E                      l1558 17D4  
                    l1398 1440                      l1478 180A                      l1494 12B6  
                    l1486 1284                      l1574 1862                      l1566 183E  
                    l1654 1242                      l1646 11EC                      l1638 11AE  
                    l1590 1024                      l1582 1012                      l1496 12D0  
                    l1488 128E                      l1568 1846                      l1656 124C  
                    l1648 11F4                      l1592 1026                      l1584 1018  
                    l1498 12EC                      l1594 104A                      l1586 101C  
                    l1578 100A                      l1596 105C                      l1588 101E  
                    l1598 1060                      STR_1 1001                      u1010 11CC  
                    u1011 11C8                      u1020 11DC                      u1021 11D8  
                    u1030 11EA                      u1031 11E6                      u1040 1204  
                    u1008 119C                      u1041 1200                      u1050 1216  
                    u1107 17CA                      u1051 1212                      u1060 122A  
                    u1117 1634                      u1061 1226                      u1127 164E  
                    u1137 1664                      u1147 18A4                      u1077 1070  
                    u1087 10CC                      u1097 17B8                      abs@a 0007  
       ?_Lcd_Write_String 0005                      _dbuf 0060                      _main 100A  
                    _prec 0051                      fsr1h 3FE2                      fsr2h 3FDA  
                    indf2 3FDF                      fsr1l 3FE1                      fsr2l 3FD9  
                    start FFFC        ??_Lcd_Write_String 0006           __end_of_Lcd_Cmd 18B2  
            ___param_bank 0000                     ??_abs 0009                     ?_main 0001  
         __end_of___awdiv 14CA           __end_of___awmod 1578           ___awdiv@divisor 0003  
                   _U1BRG 3DF5           ___awdiv@counter 0005              vfpfcnvrt@fmt 000C  
                   _PORTB 3FCB                     _PORTC 3FCC                     _TRISA 3FC2  
                   _TRISB 3FC3                     _TRISC 3FC4              main@secondes 004C  
                   _flags 0053                     _fputc 1578                     _width 004F  
                   _putch 18C0                     tablat 3FF5                     status 3FD8  
         __end_of_sprintf 186E          __end_of_Lcd_Init 16A0          __end_of_Lcd_Port 1762  
         __initialization 186E              __end_of_main 125C                    ??_main 002A  
           __activetblptr 0001                    ?_fputc 0001          ___awdiv@dividend 0001  
                  _ANSELA 3A40                    ?_putch 0001                    _ANSELB 3A50  
                  _ANSELC 3A60                    _U1CON0 3DF2                    _U1CON1 3DF3  
                  _U1CON2 3DF4                    _RB1PPS 3A09                    _RB2PPS 3A0A  
                  _ODCONB 3A52                    _RC6PPS 3A16                 ??_Lcd_Cmd 0002  
           vfpfcnvrt@done 000F              vfprintf@cfmt 0019                 ??___awdiv 0005  
               ??___awmod 0005                    clear_0 1874          ___awdiv@quotient 0007  
         ___awmod@divisor 0003                    isa$std 0001           ___awmod@counter 0005  
                  fputc@c 0001              __mediumconst 1000                    tblptrh 3FF7  
                  tblptrl 3FF6                    tblptru 3FF8                    putch@c 0001  
        __end_of_vfprintf 179C                 ??_sprintf 001E           Lcd_Set_Cursor@a 0005  
         Lcd_Set_Cursor@b 0004           Lcd_Set_Cursor@y 0007           Lcd_Set_Cursor@z 0006  
              __accesstop 0060   __end_of__initialization 1884         __end_of_Lcd_Clear 18C0  
           ___rparam_used 0001            __pcstackCOMRAM 0001             __end_of_fputc 1624  
           __end_of_putch 18C2            _Lcd_Set_Cursor 16A0                 ?_Lcd_Init 0001  
               ?_Lcd_Port 0001                   ??_fputc 0004                   ??_putch 0001  
              __pbssBANK0 0060                   _I2C2CLK 3D65                   _I2C2CNT 3D56  
                 _I2C2RXB 3D54                   _I2C2TXB 3D55    __end_of_Lcd_Set_Cursor 1706  
                 _U1RXPPS 3AE7            main@lectureBMP 004D            main@lectureRTC 004E  
              ??_Lcd_Init 0004                ??_Lcd_Port 0001            _Lcd_Write_Char 179C  
                 _Lcd_Cmd 1892                   __Hparam 0000                   __Lparam 0000  
                 ___awdiv 140A                   ___awmod 14CA                 ?_vfprintf 0016  
            __psmallconst 1000                   __pcinit 186E                   __ramtop 1000  
         ?_Lcd_Set_Cursor 0004                   __ptext0 100A                   __ptext1 183E  
                 __ptext2 1762                   __ptext3 125C                   __ptext4 1578  
                 __ptext5 18C0                   __ptext6 180A                   __ptext7 14CA  
                 __ptext8 140A                   __ptext9 17D4          ___awmod@dividend 0001  
             _I2C2PIRbits 3D63                   _sprintf 183E    __end_of_Lcd_Write_Char 17D4  
    end_of_initialization 1884                   fputc@fp 0003         __end_of_vfpfcnvrt 140A  
                 postdec2 3FDD                   postinc0 3FEE                   postinc1 3FE6  
                 postinc2 3FDE          vfpfcnvrt@convarg 0011                 Lcd_Port@a 0001  
              ??_vfprintf 0019                 _PORTAbits 3FCA                 _PORTBbits 3FCB  
               _PORTCbits 3FCC           ?_Lcd_Write_Char 0001         Lcd_Write_String@a 0005  
       Lcd_Write_String@i 0006                main@ligne1 002C                 _Lcd_Clear 18B2  
             vfpfcnvrt@ap 000D               vfpfcnvrt@cp 0010               vfpfcnvrt@fp 000B  
        _Lcd_Write_String 17D4       start_initialization 186E               __end_of_abs 183E  
             vfprintf@fmt 0017                ?_Lcd_Clear 0001           Lcd_Write_Char@a 0004  
         Lcd_Write_Char@y 0003               __pbssCOMRAM 004F                  ?_Lcd_Cmd 0001  
        ??_Lcd_Set_Cursor 0005                  ?___awdiv 0001                  ?___awmod 0001  
                _I2C2ADB1 3D58                  _I2C2CON0 3D5D               __smallconst 1000  
                ?_sprintf 001A                _I2C2SDAPPS 3AE6                _I2C2SCLPPS 3AE5  
                Lcd_Cmd@a 0003               ??_Lcd_Clear 0004             _I2C2STAT1bits 3D62  
               _vfpfcnvrt 125C          ??_Lcd_Write_Char 0002                  _Lcd_Init 1624  
                _Lcd_Port 1706                vfpfcnvrt@c 0015  __end_of_Lcd_Write_String 180A  
                __Hrparam 0000                vfprintf@ap 0018                  __Lrparam 0000  
              vfprintf@fp 0016              __Lsmallconst 1000                ?_vfpfcnvrt 000B  
              sprintf@fmt 001B              _I2C2CON0bits 3D5D              _I2C2CON1bits 3D5E  
                __ptext10 179C                  __ptext11 16A0                  __ptext12 1624  
                __ptext13 18B2                  __ptext14 1892                  __ptext15 1706  
                isa$xinst 0000                  _vfprintf 1762        Lcd_Write_Char@temp 0002  
               sprintf@ap 001E               ??_vfpfcnvrt 000E        Lcd_Set_Cursor@temp 0008  
                sprintf@f 001F                  sprintf@s 001A  
