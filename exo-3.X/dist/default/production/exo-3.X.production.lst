

Microchip MPLAB XC8 Assembler V3.10 build 20250813170317 
                                                                                               Fri Oct 10 10:03:03 2025

Microchip MPLAB XC8 C Compiler v3.10 (Free license) build 20250813170317 Og1 
     1                           	processor	18F26K83
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=3
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=1
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=3
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=3
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=3
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=3
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=2
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=2
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    36   000000                     
    37                           ; Generated 12/10/2023 GMT
    38                           ; 
    39                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F26K83 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71   003FE0                     bsr             equ	16352
    72   003FE9                     fsr0            equ	16361
    73   003FEA                     fsr0h           equ	16362
    74   003FE9                     fsr0l           equ	16361
    75   003FE1                     fsr1            equ	16353
    76   003FE2                     fsr1h           equ	16354
    77   003FE1                     fsr1l           equ	16353
    78   003FD9                     fsr2            equ	16345
    79   003FDA                     fsr2h           equ	16346
    80   003FD9                     fsr2l           equ	16345
    81   003FEF                     indf0           equ	16367
    82   003FE7                     indf1           equ	16359
    83   003FDF                     indf2           equ	16351
    84   003FD2                     intcon          equ	16338
    85   0039E5                     nvmcon          equ	14821
    86   003FF9                     pcl             equ	16377
    87   003FFA                     pclath          equ	16378
    88   003FFB                     pclatu          equ	16379
    89   003FEB                     plusw0          equ	16363
    90   003FE3                     plusw1          equ	16355
    91   003FDB                     plusw2          equ	16347
    92   003FED                     postdec0        equ	16365
    93   003FE5                     postdec1        equ	16357
    94   003FDD                     postdec2        equ	16349
    95   003FEE                     postinc0        equ	16366
    96   003FE6                     postinc1        equ	16358
    97   003FDE                     postinc2        equ	16350
    98   003FEC                     preinc0         equ	16364
    99   003FE4                     preinc1         equ	16356
   100   003FDC                     preinc2         equ	16348
   101   003FF3                     prod            equ	16371
   102   003FF4                     prodh           equ	16372
   103   003FF3                     prodl           equ	16371
   104   003FD8                     status          equ	16344
   105   003FF5                     tablat          equ	16373
   106   003FF6                     tblptr          equ	16374
   107   003FF7                     tblptrh         equ	16375
   108   003FF6                     tblptrl         equ	16374
   109   003FF8                     tblptru         equ	16376
   110   003FFD                     tosl            equ	16381
   111   003FE8                     wreg            equ	16360
   112   003700                     CIOCON          equ	14080	;# 
   113   003701                     RXERRCNT        equ	14081	;# 
   114   003702                     TXERRCNT        equ	14082	;# 
   115   003703                     BRGCON1         equ	14083	;# 
   116   003704                     BRGCON2         equ	14084	;# 
   117   003705                     BRGCON3         equ	14085	;# 
   118   003706                     RXFCON0         equ	14086	;# 
   119   003707                     RXFCON1         equ	14087	;# 
   120   003708                     RXF6SIDH        equ	14088	;# 
   121   003709                     RXF6SIDL        equ	14089	;# 
   122   00370A                     RXF6EIDH        equ	14090	;# 
   123   00370B                     RXF6EIDL        equ	14091	;# 
   124   00370C                     RXF7SIDH        equ	14092	;# 
   125   00370D                     RXF7SIDL        equ	14093	;# 
   126   00370E                     RXF7EIDH        equ	14094	;# 
   127   00370F                     RXF7EIDL        equ	14095	;# 
   128   003710                     RXF8SIDH        equ	14096	;# 
   129   003711                     RXF8SIDL        equ	14097	;# 
   130   003712                     RXF8EIDH        equ	14098	;# 
   131   003713                     RXF8EIDL        equ	14099	;# 
   132   003714                     RXF9SIDH        equ	14100	;# 
   133   003715                     RXF9SIDL        equ	14101	;# 
   134   003716                     RXF9EIDH        equ	14102	;# 
   135   003717                     RXF9EIDL        equ	14103	;# 
   136   003718                     RXF10SIDH       equ	14104	;# 
   137   003719                     RXF10SIDL       equ	14105	;# 
   138   00371A                     RXF10EIDH       equ	14106	;# 
   139   00371B                     RXF10EIDL       equ	14107	;# 
   140   00371C                     RXF11SIDH       equ	14108	;# 
   141   00371D                     RXF11SIDL       equ	14109	;# 
   142   00371E                     RXF11EIDH       equ	14110	;# 
   143   00371F                     RXF11EIDL       equ	14111	;# 
   144   003720                     RXF12SIDH       equ	14112	;# 
   145   003721                     RXF12SIDL       equ	14113	;# 
   146   003722                     RXF12EIDH       equ	14114	;# 
   147   003723                     RXF12EIDL       equ	14115	;# 
   148   003724                     RXF13SIDH       equ	14116	;# 
   149   003725                     RXF13SIDL       equ	14117	;# 
   150   003726                     RXF13EIDH       equ	14118	;# 
   151   003727                     RXF13EIDL       equ	14119	;# 
   152   003728                     RXF14SIDH       equ	14120	;# 
   153   003729                     RXF14SIDL       equ	14121	;# 
   154   00372A                     RXF14EIDH       equ	14122	;# 
   155   00372B                     RXF14EIDL       equ	14123	;# 
   156   00372C                     RXF15SIDH       equ	14124	;# 
   157   00372D                     RXF15SIDL       equ	14125	;# 
   158   00372E                     RXF15EIDH       equ	14126	;# 
   159   00372F                     RXF15EIDL       equ	14127	;# 
   160   003730                     SDFLC           equ	14128	;# 
   161   003731                     RXFBCON0        equ	14129	;# 
   162   003732                     RXFBCON1        equ	14130	;# 
   163   003733                     RXFBCON2        equ	14131	;# 
   164   003734                     RXFBCON3        equ	14132	;# 
   165   003735                     RXFBCON4        equ	14133	;# 
   166   003736                     RXFBCON5        equ	14134	;# 
   167   003737                     RXFBCON6        equ	14135	;# 
   168   003738                     RXFBCON7        equ	14136	;# 
   169   003739                     MSEL0           equ	14137	;# 
   170   00373A                     MSEL1           equ	14138	;# 
   171   00373B                     MSEL2           equ	14139	;# 
   172   00373C                     MSEL3           equ	14140	;# 
   173   00373D                     BSEL0           equ	14141	;# 
   174   00373E                     BIE0            equ	14142	;# 
   175   00373F                     TXBIE           equ	14143	;# 
   176   003740                     B0CON           equ	14144	;# 
   177   003741                     B0SIDH          equ	14145	;# 
   178   003742                     B0SIDL          equ	14146	;# 
   179   003743                     B0EIDH          equ	14147	;# 
   180   003744                     B0EIDL          equ	14148	;# 
   181   003745                     B0DLC           equ	14149	;# 
   182   003746                     B0D0            equ	14150	;# 
   183   003747                     B0D1            equ	14151	;# 
   184   003748                     B0D2            equ	14152	;# 
   185   003749                     B0D3            equ	14153	;# 
   186   00374A                     B0D4            equ	14154	;# 
   187   00374B                     B0D5            equ	14155	;# 
   188   00374C                     B0D6            equ	14156	;# 
   189   00374D                     B0D7            equ	14157	;# 
   190   00374E                     CANSTAT_RO9     equ	14158	;# 
   191   00374F                     CANCON_RO9      equ	14159	;# 
   192   003750                     B1CON           equ	14160	;# 
   193   003751                     B1SIDH          equ	14161	;# 
   194   003752                     B1SIDL          equ	14162	;# 
   195   003753                     B1EIDH          equ	14163	;# 
   196   003754                     B1EIDL          equ	14164	;# 
   197   003755                     B1DLC           equ	14165	;# 
   198   003756                     B1D0            equ	14166	;# 
   199   003757                     B1D1            equ	14167	;# 
   200   003758                     B1D2            equ	14168	;# 
   201   003759                     B1D3            equ	14169	;# 
   202   00375A                     B1D4            equ	14170	;# 
   203   00375B                     B1D5            equ	14171	;# 
   204   00375C                     B1D6            equ	14172	;# 
   205   00375D                     B1D7            equ	14173	;# 
   206   00375E                     CANSTAT_RO8     equ	14174	;# 
   207   00375F                     CANCON_RO8      equ	14175	;# 
   208   003760                     B2CON           equ	14176	;# 
   209   003761                     B2SIDH          equ	14177	;# 
   210   003762                     B2SIDL          equ	14178	;# 
   211   003763                     B2EIDH          equ	14179	;# 
   212   003764                     B2EIDL          equ	14180	;# 
   213   003765                     B2DLC           equ	14181	;# 
   214   003766                     B2D0            equ	14182	;# 
   215   003767                     B2D1            equ	14183	;# 
   216   003768                     B2D2            equ	14184	;# 
   217   003769                     B2D3            equ	14185	;# 
   218   00376A                     B2D4            equ	14186	;# 
   219   00376B                     B2D5            equ	14187	;# 
   220   00376C                     B2D6            equ	14188	;# 
   221   00376D                     B2D7            equ	14189	;# 
   222   00376E                     CANSTAT_RO7     equ	14190	;# 
   223   00376F                     CANCON_RO7      equ	14191	;# 
   224   003770                     B3CON           equ	14192	;# 
   225   003771                     B3SIDH          equ	14193	;# 
   226   003772                     B3SIDL          equ	14194	;# 
   227   003773                     B3EIDH          equ	14195	;# 
   228   003774                     B3EIDL          equ	14196	;# 
   229   003775                     B3DLC           equ	14197	;# 
   230   003776                     B3D0            equ	14198	;# 
   231   003777                     B3D1            equ	14199	;# 
   232   003778                     B3D2            equ	14200	;# 
   233   003779                     B3D3            equ	14201	;# 
   234   00377A                     B3D4            equ	14202	;# 
   235   00377B                     B3D5            equ	14203	;# 
   236   00377C                     B3D6            equ	14204	;# 
   237   00377D                     B3D7            equ	14205	;# 
   238   00377E                     CANSTAT_RO6     equ	14206	;# 
   239   00377F                     CANCON_RO6      equ	14207	;# 
   240   003780                     B4CON           equ	14208	;# 
   241   003781                     B4SIDH          equ	14209	;# 
   242   003782                     B4SIDL          equ	14210	;# 
   243   003783                     B4EIDH          equ	14211	;# 
   244   003784                     B4EIDL          equ	14212	;# 
   245   003785                     B4DLC           equ	14213	;# 
   246   003786                     B4D0            equ	14214	;# 
   247   003787                     B4D1            equ	14215	;# 
   248   003788                     B4D2            equ	14216	;# 
   249   003789                     B4D3            equ	14217	;# 
   250   00378A                     B4D4            equ	14218	;# 
   251   00378B                     B4D5            equ	14219	;# 
   252   00378C                     B4D6            equ	14220	;# 
   253   00378D                     B4D7            equ	14221	;# 
   254   00378E                     CANSTAT_RO5     equ	14222	;# 
   255   00378F                     CANCON_RO5      equ	14223	;# 
   256   003790                     B5CON           equ	14224	;# 
   257   003791                     B5SIDH          equ	14225	;# 
   258   003792                     B5SIDL          equ	14226	;# 
   259   003793                     B5EIDH          equ	14227	;# 
   260   003794                     B5EIDL          equ	14228	;# 
   261   003795                     B5DLC           equ	14229	;# 
   262   003796                     B5D0            equ	14230	;# 
   263   003797                     B5D1            equ	14231	;# 
   264   003798                     B5D2            equ	14232	;# 
   265   003799                     B5D3            equ	14233	;# 
   266   00379A                     B5D4            equ	14234	;# 
   267   00379B                     B5D5            equ	14235	;# 
   268   00379C                     B5D6            equ	14236	;# 
   269   00379D                     B5D7            equ	14237	;# 
   270   00379E                     CANSTAT_RO4     equ	14238	;# 
   271   00379F                     CANCON_RO4      equ	14239	;# 
   272   0037A0                     RXF0SIDH        equ	14240	;# 
   273   0037A1                     RXF0SIDL        equ	14241	;# 
   274   0037A2                     RXF0EIDH        equ	14242	;# 
   275   0037A3                     RXF0EIDL        equ	14243	;# 
   276   0037A4                     RXF1SIDH        equ	14244	;# 
   277   0037A5                     RXF1SIDL        equ	14245	;# 
   278   0037A6                     RXF1EIDH        equ	14246	;# 
   279   0037A7                     RXF1EIDL        equ	14247	;# 
   280   0037A8                     RXF2SIDH        equ	14248	;# 
   281   0037A9                     RXF2SIDL        equ	14249	;# 
   282   0037AA                     RXF2EIDH        equ	14250	;# 
   283   0037AB                     RXF2EIDL        equ	14251	;# 
   284   0037AC                     RXF3SIDH        equ	14252	;# 
   285   0037AD                     RXF3SIDL        equ	14253	;# 
   286   0037AE                     RXF3EIDH        equ	14254	;# 
   287   0037AF                     RXF3EIDL        equ	14255	;# 
   288   0037B0                     RXF4SIDH        equ	14256	;# 
   289   0037B1                     RXF4SIDL        equ	14257	;# 
   290   0037B2                     RXF4EIDH        equ	14258	;# 
   291   0037B3                     RXF4EIDL        equ	14259	;# 
   292   0037B4                     RXF5SIDH        equ	14260	;# 
   293   0037B5                     RXF5SIDL        equ	14261	;# 
   294   0037B6                     RXF5EIDH        equ	14262	;# 
   295   0037B7                     RXF5EIDL        equ	14263	;# 
   296   0037B8                     RXM0SIDH        equ	14264	;# 
   297   0037B9                     RXM0SIDL        equ	14265	;# 
   298   0037BA                     RXM0EIDH        equ	14266	;# 
   299   0037BB                     RXM0EIDL        equ	14267	;# 
   300   0037BC                     RXM1SIDH        equ	14268	;# 
   301   0037BD                     RXM1SIDL        equ	14269	;# 
   302   0037BE                     RXM1EIDH        equ	14270	;# 
   303   0037BF                     RXM1EIDL        equ	14271	;# 
   304   0037C0                     TXB2CON         equ	14272	;# 
   305   0037C1                     TXB2SIDH        equ	14273	;# 
   306   0037C2                     TXB2SIDL        equ	14274	;# 
   307   0037C3                     TXB2EIDH        equ	14275	;# 
   308   0037C4                     TXB2EIDL        equ	14276	;# 
   309   0037C5                     TXB2DLC         equ	14277	;# 
   310   0037C6                     TXB2D0          equ	14278	;# 
   311   0037C7                     TXB2D1          equ	14279	;# 
   312   0037C8                     TXB2D2          equ	14280	;# 
   313   0037C9                     TXB2D3          equ	14281	;# 
   314   0037CA                     TXB2D4          equ	14282	;# 
   315   0037CB                     TXB2D5          equ	14283	;# 
   316   0037CC                     TXB2D6          equ	14284	;# 
   317   0037CD                     TXB2D7          equ	14285	;# 
   318   0037CE                     CANSTAT_R03     equ	14286	;# 
   319   0037CF                     CANCON_R03      equ	14287	;# 
   320   0037D0                     TXB1CON         equ	14288	;# 
   321   0037D1                     TXB1SIDH        equ	14289	;# 
   322   0037D2                     TXB1SIDL        equ	14290	;# 
   323   0037D3                     TXB1EIDH        equ	14291	;# 
   324   0037D4                     TXB1EIDL        equ	14292	;# 
   325   0037D5                     TXB1DLC         equ	14293	;# 
   326   0037D6                     TXB1D0          equ	14294	;# 
   327   0037D7                     TXB1D1          equ	14295	;# 
   328   0037D8                     TXB1D2          equ	14296	;# 
   329   0037D9                     TXB1D3          equ	14297	;# 
   330   0037DA                     TXB1D4          equ	14298	;# 
   331   0037DB                     TXB1D5          equ	14299	;# 
   332   0037DC                     TXB1D6          equ	14300	;# 
   333   0037DD                     TXB1D7          equ	14301	;# 
   334   0037DE                     CANSTAT_RO2     equ	14302	;# 
   335   0037DF                     CANCON_RO2      equ	14303	;# 
   336   0037E0                     TXB0CON         equ	14304	;# 
   337   0037E1                     TXB0SIDH        equ	14305	;# 
   338   0037E2                     TXB0SIDL        equ	14306	;# 
   339   0037E3                     TXB0EIDH        equ	14307	;# 
   340   0037E4                     TXB0EIDL        equ	14308	;# 
   341   0037E5                     TXB0DLC         equ	14309	;# 
   342   0037E6                     TXB0D0          equ	14310	;# 
   343   0037E7                     TXB0D1          equ	14311	;# 
   344   0037E8                     TXB0D2          equ	14312	;# 
   345   0037E9                     TXB0D3          equ	14313	;# 
   346   0037EA                     TXB0D4          equ	14314	;# 
   347   0037EB                     TXB0D5          equ	14315	;# 
   348   0037EC                     TXB0D6          equ	14316	;# 
   349   0037ED                     TXB0D7          equ	14317	;# 
   350   0037EE                     CANSTAT_RO1     equ	14318	;# 
   351   0037EF                     CANCON_RO1      equ	14319	;# 
   352   0037F0                     RXB1CON         equ	14320	;# 
   353   0037F1                     RXB1SIDH        equ	14321	;# 
   354   0037F2                     RXB1SIDL        equ	14322	;# 
   355   0037F3                     RXB1EIDH        equ	14323	;# 
   356   0037F4                     RXB1EIDL        equ	14324	;# 
   357   0037F5                     RXB1DLC         equ	14325	;# 
   358   0037F6                     RXB1D0          equ	14326	;# 
   359   0037F7                     RXB1D1          equ	14327	;# 
   360   0037F8                     RXB1D2          equ	14328	;# 
   361   0037F9                     RXB1D3          equ	14329	;# 
   362   0037FA                     RXB1D4          equ	14330	;# 
   363   0037FB                     RXB1D5          equ	14331	;# 
   364   0037FC                     RXB1D6          equ	14332	;# 
   365   0037FD                     RXB1D7          equ	14333	;# 
   366   0037FE                     CANSTAT_RO0     equ	14334	;# 
   367   0037FF                     CANCON_RO0      equ	14335	;# 
   368   003880                     STATUS_CSHAD    equ	14464	;# 
   369   003881                     WREG_CSHAD      equ	14465	;# 
   370   003882                     BSR_CSHAD       equ	14466	;# 
   371   003883                     SHADCON         equ	14467	;# 
   372   003884                     STATUS_SHAD     equ	14468	;# 
   373   003885                     WREG_SHAD       equ	14469	;# 
   374   003886                     BSR_SHAD        equ	14470	;# 
   375   003887                     PCLATH_SHAD     equ	14471	;# 
   376   003888                     PCLATU_SHAD     equ	14472	;# 
   377   003889                     FSR0SH          equ	14473	;# 
   378   003889                     FSR0L_SHAD      equ	14473	;# 
   379   00388A                     FSR0H_SHAD      equ	14474	;# 
   380   00388B                     FSR1SH          equ	14475	;# 
   381   00388B                     FSR1L_SHAD      equ	14475	;# 
   382   00388C                     FSR1H_SHAD      equ	14476	;# 
   383   00388D                     FSR2SH          equ	14477	;# 
   384   00388D                     FSR2L_SHAD      equ	14477	;# 
   385   00388E                     FSR2H_SHAD      equ	14478	;# 
   386   00388F                     PRODSH          equ	14479	;# 
   387   00388F                     PRODL_SHAD      equ	14479	;# 
   388   003890                     PRODH_SHAD      equ	14480	;# 
   389   00389D                     IVTADL          equ	14493	;# 
   390   00389E                     IVTADH          equ	14494	;# 
   391   00389F                     IVTADU          equ	14495	;# 
   392   00395B                     WDTCON0         equ	14683	;# 
   393   00395C                     WDTCON1         equ	14684	;# 
   394   00395D                     WDTPSL          equ	14685	;# 
   395   00395E                     WDTPSH          equ	14686	;# 
   396   00395F                     WDTTMR          equ	14687	;# 
   397   003960                     CRCDATA         equ	14688	;# 
   398   003960                     CRCDATL         equ	14688	;# 
   399   003961                     CRCDATH         equ	14689	;# 
   400   003962                     CRCACC          equ	14690	;# 
   401   003962                     CRCACCL         equ	14690	;# 
   402   003963                     CRCACCH         equ	14691	;# 
   403   003964                     CRCSHFT         equ	14692	;# 
   404   003964                     CRCSHIFTL       equ	14692	;# 
   405   003965                     CRCSHIFTH       equ	14693	;# 
   406   003966                     CRCXOR          equ	14694	;# 
   407   003966                     CRCXORL         equ	14694	;# 
   408   003967                     CRCXORH         equ	14695	;# 
   409   003968                     CRCCON0         equ	14696	;# 
   410   003969                     CRCCON1         equ	14697	;# 
   411   003976                     SCANLADR        equ	14710	;# 
   412   003976                     SCANLADRL       equ	14710	;# 
   413   003977                     SCANLADRH       equ	14711	;# 
   414   003978                     SCANLADRU       equ	14712	;# 
   415   003979                     SCANHADR        equ	14713	;# 
   416   003979                     SCANHADRL       equ	14713	;# 
   417   00397A                     SCANHADRH       equ	14714	;# 
   418   00397B                     SCANHADRU       equ	14715	;# 
   419   00397C                     SCANCON0        equ	14716	;# 
   420   00397D                     SCANTRIG        equ	14717	;# 
   421   003980                     IPR0            equ	14720	;# 
   422   003981                     IPR1            equ	14721	;# 
   423   003982                     IPR2            equ	14722	;# 
   424   003983                     IPR3            equ	14723	;# 
   425   003984                     IPR4            equ	14724	;# 
   426   003985                     IPR5            equ	14725	;# 
   427   003986                     IPR6            equ	14726	;# 
   428   003987                     IPR7            equ	14727	;# 
   429   003988                     IPR8            equ	14728	;# 
   430   003989                     IPR9            equ	14729	;# 
   431   003990                     PIE0            equ	14736	;# 
   432   003991                     PIE1            equ	14737	;# 
   433   003992                     PIE2            equ	14738	;# 
   434   003993                     PIE3            equ	14739	;# 
   435   003994                     PIE4            equ	14740	;# 
   436   003995                     PIE5            equ	14741	;# 
   437   003996                     PIE6            equ	14742	;# 
   438   003997                     PIE7            equ	14743	;# 
   439   003998                     PIE8            equ	14744	;# 
   440   003999                     PIE9            equ	14745	;# 
   441   0039A0                     PIR0            equ	14752	;# 
   442   0039A1                     PIR1            equ	14753	;# 
   443   0039A2                     PIR2            equ	14754	;# 
   444   0039A3                     PIR3            equ	14755	;# 
   445   0039A4                     PIR4            equ	14756	;# 
   446   0039A5                     PIR5            equ	14757	;# 
   447   0039A6                     PIR6            equ	14758	;# 
   448   0039A7                     PIR7            equ	14759	;# 
   449   0039A8                     PIR8            equ	14760	;# 
   450   0039A9                     PIR9            equ	14761	;# 
   451   0039C0                     PMD0            equ	14784	;# 
   452   0039C1                     PMD1            equ	14785	;# 
   453   0039C2                     PMD2            equ	14786	;# 
   454   0039C3                     PMD3            equ	14787	;# 
   455   0039C4                     PMD4            equ	14788	;# 
   456   0039C5                     PMD5            equ	14789	;# 
   457   0039C6                     PMD6            equ	14790	;# 
   458   0039C7                     PMD7            equ	14791	;# 
   459   0039D0                     BORCON          equ	14800	;# 
   460   0039D1                     VREGCON         equ	14801	;# 
   461   0039D8                     CPUDOZE         equ	14808	;# 
   462   0039D9                     OSCCON1         equ	14809	;# 
   463   0039DA                     OSCCON2         equ	14810	;# 
   464   0039DB                     OSCCON3         equ	14811	;# 
   465   0039DC                     OSCSTAT         equ	14812	;# 
   466   0039DC                     OSCSTAT1        equ	14812	;# 
   467   0039DD                     OSCEN           equ	14813	;# 
   468   0039DE                     OSCTUNE         equ	14814	;# 
   469   0039DF                     OSCFRQ          equ	14815	;# 
   470   0039E0                     NVMADRL         equ	14816	;# 
   471   0039E1                     NVMADRH         equ	14817	;# 
   472   0039E3                     NVMDAT          equ	14819	;# 
   473   0039E5                     NVMCON1         equ	14821	;# 
   474   0039E6                     NVMCON2         equ	14822	;# 
   475   0039EF                     PRLOCK          equ	14831	;# 
   476   0039F1                     ISRPR           equ	14833	;# 
   477   0039F2                     MAINPR          equ	14834	;# 
   478   0039F3                     DMA1PR          equ	14835	;# 
   479   0039F4                     DMA2PR          equ	14836	;# 
   480   0039F7                     SCANPR          equ	14839	;# 
   481   003A00                     RA0PPS          equ	14848	;# 
   482   003A01                     RA1PPS          equ	14849	;# 
   483   003A02                     RA2PPS          equ	14850	;# 
   484   003A03                     RA3PPS          equ	14851	;# 
   485   003A04                     RA4PPS          equ	14852	;# 
   486   003A05                     RA5PPS          equ	14853	;# 
   487   003A06                     RA6PPS          equ	14854	;# 
   488   003A07                     RA7PPS          equ	14855	;# 
   489   003A08                     RB0PPS          equ	14856	;# 
   490   003A09                     RB1PPS          equ	14857	;# 
   491   003A0A                     RB2PPS          equ	14858	;# 
   492   003A0B                     RB3PPS          equ	14859	;# 
   493   003A0C                     RB4PPS          equ	14860	;# 
   494   003A0D                     RB5PPS          equ	14861	;# 
   495   003A0E                     RB6PPS          equ	14862	;# 
   496   003A0F                     RB7PPS          equ	14863	;# 
   497   003A10                     RC0PPS          equ	14864	;# 
   498   003A11                     RC1PPS          equ	14865	;# 
   499   003A12                     RC2PPS          equ	14866	;# 
   500   003A13                     RC3PPS          equ	14867	;# 
   501   003A14                     RC4PPS          equ	14868	;# 
   502   003A15                     RC5PPS          equ	14869	;# 
   503   003A16                     RC6PPS          equ	14870	;# 
   504   003A17                     RC7PPS          equ	14871	;# 
   505   003A40                     ANSELA          equ	14912	;# 
   506   003A41                     WPUA            equ	14913	;# 
   507   003A42                     ODCONA          equ	14914	;# 
   508   003A43                     SLRCONA         equ	14915	;# 
   509   003A44                     INLVLA          equ	14916	;# 
   510   003A45                     IOCAP           equ	14917	;# 
   511   003A46                     IOCAN           equ	14918	;# 
   512   003A47                     IOCAF           equ	14919	;# 
   513   003A50                     ANSELB          equ	14928	;# 
   514   003A51                     WPUB            equ	14929	;# 
   515   003A52                     ODCONB          equ	14930	;# 
   516   003A53                     SLRCONB         equ	14931	;# 
   517   003A54                     INLVLB          equ	14932	;# 
   518   003A55                     IOCBP           equ	14933	;# 
   519   003A56                     IOCBN           equ	14934	;# 
   520   003A57                     IOCBF           equ	14935	;# 
   521   003A5A                     RB1I2C          equ	14938	;# 
   522   003A5B                     RB2I2C          equ	14939	;# 
   523   003A60                     ANSELC          equ	14944	;# 
   524   003A61                     WPUC            equ	14945	;# 
   525   003A62                     ODCONC          equ	14946	;# 
   526   003A63                     SLRCONC         equ	14947	;# 
   527   003A64                     INLVLC          equ	14948	;# 
   528   003A65                     IOCCP           equ	14949	;# 
   529   003A66                     IOCCN           equ	14950	;# 
   530   003A67                     IOCCF           equ	14951	;# 
   531   003A6A                     RC3I2C          equ	14954	;# 
   532   003A6B                     RC4I2C          equ	14955	;# 
   533   003A81                     WPUE            equ	14977	;# 
   534   003A84                     INLVLE          equ	14980	;# 
   535   003A85                     IOCEP           equ	14981	;# 
   536   003A86                     IOCEN           equ	14982	;# 
   537   003A87                     IOCEF           equ	14983	;# 
   538   003ABF                     PPSLOCK         equ	15039	;# 
   539   003AC0                     INT0PPS         equ	15040	;# 
   540   003AC1                     INT1PPS         equ	15041	;# 
   541   003AC2                     INT2PPS         equ	15042	;# 
   542   003AC3                     T0CKIPPS        equ	15043	;# 
   543   003AC4                     T1CKIPPS        equ	15044	;# 
   544   003AC5                     T1GPPS          equ	15045	;# 
   545   003AC6                     T3CKIPPS        equ	15046	;# 
   546   003AC7                     T3GPPS          equ	15047	;# 
   547   003AC8                     T5CKIPPS        equ	15048	;# 
   548   003AC9                     T5GPPS          equ	15049	;# 
   549   003ACA                     T2INPPS         equ	15050	;# 
   550   003ACB                     T4INPPS         equ	15051	;# 
   551   003ACC                     T6INPPS         equ	15052	;# 
   552   003ACD                     CCP1PPS         equ	15053	;# 
   553   003ACE                     CCP2PPS         equ	15054	;# 
   554   003ACF                     CCP3PPS         equ	15055	;# 
   555   003AD0                     CCP4PPS         equ	15056	;# 
   556   003AD1                     SMT1WINPPS      equ	15057	;# 
   557   003AD2                     SMT1SIGPPS      equ	15058	;# 
   558   003AD3                     SMT2WINPPS      equ	15059	;# 
   559   003AD4                     SMT2SIGPPS      equ	15060	;# 
   560   003AD5                     CWG1INPPS       equ	15061	;# 
   561   003AD6                     CWG2INPPS       equ	15062	;# 
   562   003AD7                     CWG3INPPS       equ	15063	;# 
   563   003AD8                     MD1CARLPPS      equ	15064	;# 
   564   003AD9                     MD1CARHPPS      equ	15065	;# 
   565   003ADA                     MD1SRCPPS       equ	15066	;# 
   566   003ADB                     CLCIN0PPS       equ	15067	;# 
   567   003ADC                     CLCIN1PPS       equ	15068	;# 
   568   003ADD                     CLCIN2PPS       equ	15069	;# 
   569   003ADE                     CLCIN3PPS       equ	15070	;# 
   570   003ADF                     ADACTPPS        equ	15071	;# 
   571   003AE0                     SPI1SCKPPS      equ	15072	;# 
   572   003AE1                     SPI1SDIPPS      equ	15073	;# 
   573   003AE2                     SPI1SSPPS       equ	15074	;# 
   574   003AE3                     I2C1SCLPPS      equ	15075	;# 
   575   003AE4                     I2C1SDAPPS      equ	15076	;# 
   576   003AE5                     I2C2SCLPPS      equ	15077	;# 
   577   003AE6                     I2C2SDAPPS      equ	15078	;# 
   578   003AE7                     U1RXPPS         equ	15079	;# 
   579   003AE8                     U1CTSPPS        equ	15080	;# 
   580   003AEA                     U2RXPPS         equ	15082	;# 
   581   003AEB                     U2CTSPPS        equ	15083	;# 
   582   003AED                     CANRXPPS        equ	15085	;# 
   583   003BC9                     DMA2BUF         equ	15305	;# 
   584   003BCA                     DMA2DCNT        equ	15306	;# 
   585   003BCA                     DMA2DCNTL       equ	15306	;# 
   586   003BCB                     DMA2DCNTH       equ	15307	;# 
   587   003BCC                     DMA2DPTR        equ	15308	;# 
   588   003BCC                     DMA2DPTRL       equ	15308	;# 
   589   003BCD                     DMA2DPTRH       equ	15309	;# 
   590   003BCE                     DMA2DSZ         equ	15310	;# 
   591   003BCE                     DMA2DSZL        equ	15310	;# 
   592   003BCF                     DMA2DSZH        equ	15311	;# 
   593   003BD0                     DMA2DSA         equ	15312	;# 
   594   003BD0                     DMA2DSAL        equ	15312	;# 
   595   003BD1                     DMA2DSAH        equ	15313	;# 
   596   003BD2                     DMA2SCNT        equ	15314	;# 
   597   003BD2                     DMA2SCNTL       equ	15314	;# 
   598   003BD3                     DMA2SCNTH       equ	15315	;# 
   599   003BD4                     DMA2SPTR        equ	15316	;# 
   600   003BD4                     DMA2SPTRL       equ	15316	;# 
   601   003BD5                     DMA2SPTRH       equ	15317	;# 
   602   003BD6                     DMA2SPTRU       equ	15318	;# 
   603   003BD7                     DMA2SSZ         equ	15319	;# 
   604   003BD7                     DMA2SSZL        equ	15319	;# 
   605   003BD8                     DMA2SSZH        equ	15320	;# 
   606   003BD9                     DMA2SSA         equ	15321	;# 
   607   003BD9                     DMA2SSAL        equ	15321	;# 
   608   003BDA                     DMA2SSAH        equ	15322	;# 
   609   003BDB                     DMA2SSAU        equ	15323	;# 
   610   003BDC                     DMA2CON0        equ	15324	;# 
   611   003BDD                     DMA2CON1        equ	15325	;# 
   612   003BDE                     DMA2AIRQ        equ	15326	;# 
   613   003BDF                     DMA2SIRQ        equ	15327	;# 
   614   003BE9                     DMA1BUF         equ	15337	;# 
   615   003BEA                     DMA1DCNT        equ	15338	;# 
   616   003BEA                     DMA1DCNTL       equ	15338	;# 
   617   003BEB                     DMA1DCNTH       equ	15339	;# 
   618   003BEC                     DMA1DPTR        equ	15340	;# 
   619   003BEC                     DMA1DPTRL       equ	15340	;# 
   620   003BED                     DMA1DPTRH       equ	15341	;# 
   621   003BEE                     DMA1DSZ         equ	15342	;# 
   622   003BEE                     DMA1DSZL        equ	15342	;# 
   623   003BEF                     DMA1DSZH        equ	15343	;# 
   624   003BF0                     DMA1DSA         equ	15344	;# 
   625   003BF0                     DMA1DSAL        equ	15344	;# 
   626   003BF1                     DMA1DSAH        equ	15345	;# 
   627   003BF2                     DMA1SCNT        equ	15346	;# 
   628   003BF2                     DMA1SCNTL       equ	15346	;# 
   629   003BF3                     DMA1SCNTH       equ	15347	;# 
   630   003BF4                     DMA1SPTR        equ	15348	;# 
   631   003BF4                     DMA1SPTRL       equ	15348	;# 
   632   003BF5                     DMA1SPTRH       equ	15349	;# 
   633   003BF6                     DMA1SPTRU       equ	15350	;# 
   634   003BF7                     DMA1SSZ         equ	15351	;# 
   635   003BF7                     DMA1SSZL        equ	15351	;# 
   636   003BF8                     DMA1SSZH        equ	15352	;# 
   637   003BF9                     DMA1SSA         equ	15353	;# 
   638   003BF9                     DMA1SSAL        equ	15353	;# 
   639   003BFA                     DMA1SSAH        equ	15354	;# 
   640   003BFB                     DMA1SSAU        equ	15355	;# 
   641   003BFC                     DMA1CON0        equ	15356	;# 
   642   003BFD                     DMA1CON1        equ	15357	;# 
   643   003BFE                     DMA1AIRQ        equ	15358	;# 
   644   003BFF                     DMA1SIRQ        equ	15359	;# 
   645   003C56                     CLC4CON         equ	15446	;# 
   646   003C57                     CLC4POL         equ	15447	;# 
   647   003C58                     CLC4SEL0        equ	15448	;# 
   648   003C59                     CLC4SEL1        equ	15449	;# 
   649   003C5A                     CLC4SEL2        equ	15450	;# 
   650   003C5B                     CLC4SEL3        equ	15451	;# 
   651   003C5C                     CLC4GLS0        equ	15452	;# 
   652   003C5D                     CLC4GLS1        equ	15453	;# 
   653   003C5E                     CLC4GLS2        equ	15454	;# 
   654   003C5F                     CLC4GLS3        equ	15455	;# 
   655   003C60                     CLC3CON         equ	15456	;# 
   656   003C61                     CLC3POL         equ	15457	;# 
   657   003C62                     CLC3SEL0        equ	15458	;# 
   658   003C63                     CLC3SEL1        equ	15459	;# 
   659   003C64                     CLC3SEL2        equ	15460	;# 
   660   003C65                     CLC3SEL3        equ	15461	;# 
   661   003C66                     CLC3GLS0        equ	15462	;# 
   662   003C67                     CLC3GLS1        equ	15463	;# 
   663   003C68                     CLC3GLS2        equ	15464	;# 
   664   003C69                     CLC3GLS3        equ	15465	;# 
   665   003C6A                     CLC2CON         equ	15466	;# 
   666   003C6B                     CLC2POL         equ	15467	;# 
   667   003C6C                     CLC2SEL0        equ	15468	;# 
   668   003C6D                     CLC2SEL1        equ	15469	;# 
   669   003C6E                     CLC2SEL2        equ	15470	;# 
   670   003C6F                     CLC2SEL3        equ	15471	;# 
   671   003C70                     CLC2GLS0        equ	15472	;# 
   672   003C71                     CLC2GLS1        equ	15473	;# 
   673   003C72                     CLC2GLS2        equ	15474	;# 
   674   003C73                     CLC2GLS3        equ	15475	;# 
   675   003C74                     CLC1CON         equ	15476	;# 
   676   003C75                     CLC1POL         equ	15477	;# 
   677   003C76                     CLC1SEL0        equ	15478	;# 
   678   003C77                     CLC1SEL1        equ	15479	;# 
   679   003C78                     CLC1SEL2        equ	15480	;# 
   680   003C79                     CLC1SEL3        equ	15481	;# 
   681   003C7A                     CLC1GLS0        equ	15482	;# 
   682   003C7B                     CLC1GLS1        equ	15483	;# 
   683   003C7C                     CLC1GLS2        equ	15484	;# 
   684   003C7D                     CLC1GLS3        equ	15485	;# 
   685   003C7E                     CLCDATA0        equ	15486	;# 
   686   003CE5                     CLKRCON         equ	15589	;# 
   687   003CE6                     CLKRCLK         equ	15590	;# 
   688   003CFA                     MD1CON0         equ	15610	;# 
   689   003CFB                     MD1CON1         equ	15611	;# 
   690   003CFC                     MD1SRC          equ	15612	;# 
   691   003CFD                     MD1CARL         equ	15613	;# 
   692   003CFE                     MD1CARH         equ	15614	;# 
   693   003D10                     SPI1RXB         equ	15632	;# 
   694   003D11                     SPI1TXB         equ	15633	;# 
   695   003D12                     SPI1TCNT        equ	15634	;# 
   696   003D12                     SPI1TCNTL       equ	15634	;# 
   697   003D13                     SPI1TCNTH       equ	15635	;# 
   698   003D14                     SPI1CON0        equ	15636	;# 
   699   003D15                     SPI1CON1        equ	15637	;# 
   700   003D16                     SPI1CON2        equ	15638	;# 
   701   003D17                     SPI1STATUS      equ	15639	;# 
   702   003D18                     SPI1TWIDTH      equ	15640	;# 
   703   003D19                     SPI1BAUD        equ	15641	;# 
   704   003D1A                     SPI1INTF        equ	15642	;# 
   705   003D1B                     SPI1INTE        equ	15643	;# 
   706   003D1C                     SPI1CLK         equ	15644	;# 
   707   003D54                     I2C2RXB         equ	15700	;# 
   708   003D55                     I2C2TXB         equ	15701	;# 
   709   003D56                     I2C2CNT         equ	15702	;# 
   710   003D57                     I2C2ADB0        equ	15703	;# 
   711   003D58                     I2C2ADB1        equ	15704	;# 
   712   003D59                     I2C2ADR0        equ	15705	;# 
   713   003D5A                     I2C2ADR1        equ	15706	;# 
   714   003D5B                     I2C2ADR2        equ	15707	;# 
   715   003D5C                     I2C2ADR3        equ	15708	;# 
   716   003D5D                     I2C2CON0        equ	15709	;# 
   717   003D5E                     I2C2CON1        equ	15710	;# 
   718   003D5F                     I2C2CON2        equ	15711	;# 
   719   003D60                     I2C2ERR         equ	15712	;# 
   720   003D61                     I2C2STAT0       equ	15713	;# 
   721   003D62                     I2C2STAT1       equ	15714	;# 
   722   003D63                     I2C2PIR         equ	15715	;# 
   723   003D64                     I2C2PIE         equ	15716	;# 
   724   003D65                     I2C2CLK         equ	15717	;# 
   725   003D66                     I2C2BTO         equ	15718	;# 
   726   003D6A                     I2C1RXB         equ	15722	;# 
   727   003D6B                     I2C1TXB         equ	15723	;# 
   728   003D6C                     I2C1CNT         equ	15724	;# 
   729   003D6D                     I2C1ADB0        equ	15725	;# 
   730   003D6E                     I2C1ADB1        equ	15726	;# 
   731   003D6F                     I2C1ADR0        equ	15727	;# 
   732   003D70                     I2C1ADR1        equ	15728	;# 
   733   003D71                     I2C1ADR2        equ	15729	;# 
   734   003D72                     I2C1ADR3        equ	15730	;# 
   735   003D73                     I2C1CON0        equ	15731	;# 
   736   003D74                     I2C1CON1        equ	15732	;# 
   737   003D75                     I2C1CON2        equ	15733	;# 
   738   003D76                     I2C1ERR         equ	15734	;# 
   739   003D77                     I2C1STAT0       equ	15735	;# 
   740   003D78                     I2C1STAT1       equ	15736	;# 
   741   003D79                     I2C1PIR         equ	15737	;# 
   742   003D7A                     I2C1PIE         equ	15738	;# 
   743   003D7B                     I2C1CLK         equ	15739	;# 
   744   003D7C                     I2C1BTO         equ	15740	;# 
   745   003DD0                     U2RXB           equ	15824	;# 
   746   003DD0                     U2RXBL          equ	15824	;# 
   747   003DD1                     U2RXCHK         equ	15825	;# 
   748   003DD2                     U2TXB           equ	15826	;# 
   749   003DD2                     U2TXBL          equ	15826	;# 
   750   003DD3                     U2TXCHK         equ	15827	;# 
   751   003DD4                     U2P1            equ	15828	;# 
   752   003DD4                     U2P1L           equ	15828	;# 
   753   003DD5                     U2P1H           equ	15829	;# 
   754   003DD6                     U2P2            equ	15830	;# 
   755   003DD6                     U2P2L           equ	15830	;# 
   756   003DD7                     U2P2H           equ	15831	;# 
   757   003DD8                     U2P3            equ	15832	;# 
   758   003DD8                     U2P3L           equ	15832	;# 
   759   003DD9                     U2P3H           equ	15833	;# 
   760   003DDA                     U2CON0          equ	15834	;# 
   761   003DDB                     U2CON1          equ	15835	;# 
   762   003DDC                     U2CON2          equ	15836	;# 
   763   003DDD                     U2BRG           equ	15837	;# 
   764   003DDD                     U2BRGL          equ	15837	;# 
   765   003DDE                     U2BRGH          equ	15838	;# 
   766   003DDF                     U2FIFO          equ	15839	;# 
   767   003DE0                     U2UIR           equ	15840	;# 
   768   003DE1                     U2ERRIR         equ	15841	;# 
   769   003DE2                     U2ERRIE         equ	15842	;# 
   770   003DE8                     U1RXB           equ	15848	;# 
   771   003DE8                     U1RXBL          equ	15848	;# 
   772   003DE9                     U1RXCHK         equ	15849	;# 
   773   003DEA                     U1TXB           equ	15850	;# 
   774   003DEA                     U1TXBL          equ	15850	;# 
   775   003DEB                     U1TXCHK         equ	15851	;# 
   776   003DEC                     U1P1            equ	15852	;# 
   777   003DEC                     U1P1L           equ	15852	;# 
   778   003DED                     U1P1H           equ	15853	;# 
   779   003DEE                     U1P2            equ	15854	;# 
   780   003DEE                     U1P2L           equ	15854	;# 
   781   003DEF                     U1P2H           equ	15855	;# 
   782   003DF0                     U1P3            equ	15856	;# 
   783   003DF0                     U1P3L           equ	15856	;# 
   784   003DF1                     U1P3H           equ	15857	;# 
   785   003DF2                     U1CON0          equ	15858	;# 
   786   003DF3                     U1CON1          equ	15859	;# 
   787   003DF4                     U1CON2          equ	15860	;# 
   788   003DF5                     U1BRG           equ	15861	;# 
   789   003DF5                     U1BRGL          equ	15861	;# 
   790   003DF6                     U1BRGH          equ	15862	;# 
   791   003DF7                     U1FIFO          equ	15863	;# 
   792   003DF8                     U1UIR           equ	15864	;# 
   793   003DF9                     U1ERRIR         equ	15865	;# 
   794   003DFA                     U1ERRIE         equ	15866	;# 
   795   003E9C                     DAC1CON1        equ	16028	;# 
   796   003E9E                     DAC1CON0        equ	16030	;# 
   797   003EB8                     CM2CON0         equ	16056	;# 
   798   003EB9                     CM2CON1         equ	16057	;# 
   799   003EBA                     CM2NCH          equ	16058	;# 
   800   003EBB                     CM2PCH          equ	16059	;# 
   801   003EBC                     CM1CON0         equ	16060	;# 
   802   003EBD                     CM1CON1         equ	16061	;# 
   803   003EBE                     CM1NCH          equ	16062	;# 
   804   003EBF                     CM1PCH          equ	16063	;# 
   805   003EC0                     CMOUT           equ	16064	;# 
   806   003EC1                     FVRCON          equ	16065	;# 
   807   003EC3                     ZCDCON          equ	16067	;# 
   808   003EC9                     HLVDCON0        equ	16073	;# 
   809   003ECA                     HLVDCON1        equ	16074	;# 
   810   003ED7                     ADCP            equ	16087	;# 
   811   003EDE                     ADLTH           equ	16094	;# 
   812   003EDE                     ADLTHL          equ	16094	;# 
   813   003EDF                     ADLTHH          equ	16095	;# 
   814   003EE0                     ADUTH           equ	16096	;# 
   815   003EE0                     ADUTHL          equ	16096	;# 
   816   003EE1                     ADUTHH          equ	16097	;# 
   817   003EE2                     ADERR           equ	16098	;# 
   818   003EE2                     ADERRL          equ	16098	;# 
   819   003EE3                     ADERRH          equ	16099	;# 
   820   003EE4                     ADSTPT          equ	16100	;# 
   821   003EE4                     ADSTPTL         equ	16100	;# 
   822   003EE5                     ADSTPTH         equ	16101	;# 
   823   003EE6                     ADFLTR          equ	16102	;# 
   824   003EE6                     ADFLTRL         equ	16102	;# 
   825   003EE7                     ADFLTRH         equ	16103	;# 
   826   003EE8                     ADACC           equ	16104	;# 
   827   003EE8                     ADACCL          equ	16104	;# 
   828   003EE9                     ADACCH          equ	16105	;# 
   829   003EEA                     ADACCU          equ	16106	;# 
   830   003EEB                     ADCNT           equ	16107	;# 
   831   003EEC                     ADRPT           equ	16108	;# 
   832   003EED                     ADPREV          equ	16109	;# 
   833   003EED                     ADPREVL         equ	16109	;# 
   834   003EEE                     ADPREVH         equ	16110	;# 
   835   003EEF                     ADRES           equ	16111	;# 
   836   003EEF                     ADRESL          equ	16111	;# 
   837   003EF0                     ADRESH          equ	16112	;# 
   838   003EF1                     ADPCH           equ	16113	;# 
   839   003EF3                     ADACQ           equ	16115	;# 
   840   003EF3                     ADACQL          equ	16115	;# 
   841   003EF4                     ADACQH          equ	16116	;# 
   842   003EF5                     ADCAP           equ	16117	;# 
   843   003EF6                     ADPRE           equ	16118	;# 
   844   003EF6                     ADPREL          equ	16118	;# 
   845   003EF7                     ADPREH          equ	16119	;# 
   846   003EF8                     ADCON0          equ	16120	;# 
   847   003EF9                     ADCON1          equ	16121	;# 
   848   003EFA                     ADCON2          equ	16122	;# 
   849   003EFB                     ADCON3          equ	16123	;# 
   850   003EFC                     ADSTAT          equ	16124	;# 
   851   003EFD                     ADREF           equ	16125	;# 
   852   003EFE                     ADACT           equ	16126	;# 
   853   003EFF                     ADCLK           equ	16127	;# 
   854   003F00                     SMT2TMR         equ	16128	;# 
   855   003F00                     SMT2TMRL        equ	16128	;# 
   856   003F01                     SMT2TMRH        equ	16129	;# 
   857   003F02                     SMT2TMRU        equ	16130	;# 
   858   003F03                     SMT2CPR         equ	16131	;# 
   859   003F03                     SMT2CPRL        equ	16131	;# 
   860   003F04                     SMT2CPRH        equ	16132	;# 
   861   003F05                     SMT2CPRU        equ	16133	;# 
   862   003F06                     SMT2CPW         equ	16134	;# 
   863   003F06                     SMT2CPWL        equ	16134	;# 
   864   003F07                     SMT2CPWH        equ	16135	;# 
   865   003F08                     SMT2CPWU        equ	16136	;# 
   866   003F09                     SMT2PR          equ	16137	;# 
   867   003F09                     SMT2PRL         equ	16137	;# 
   868   003F0A                     SMT2PRH         equ	16138	;# 
   869   003F0B                     SMT2PRU         equ	16139	;# 
   870   003F0C                     SMT2CON0        equ	16140	;# 
   871   003F0D                     SMT2CON1        equ	16141	;# 
   872   003F0E                     SMT2STAT        equ	16142	;# 
   873   003F0F                     SMT2CLK         equ	16143	;# 
   874   003F10                     SMT2SIG         equ	16144	;# 
   875   003F11                     SMT2WIN         equ	16145	;# 
   876   003F12                     SMT1TMR         equ	16146	;# 
   877   003F12                     SMT1TMRL        equ	16146	;# 
   878   003F13                     SMT1TMRH        equ	16147	;# 
   879   003F14                     SMT1TMRU        equ	16148	;# 
   880   003F15                     SMT1CPR         equ	16149	;# 
   881   003F15                     SMT1CPRL        equ	16149	;# 
   882   003F16                     SMT1CPRH        equ	16150	;# 
   883   003F17                     SMT1CPRU        equ	16151	;# 
   884   003F18                     SMT1CPW         equ	16152	;# 
   885   003F18                     SMT1CPWL        equ	16152	;# 
   886   003F19                     SMT1CPWH        equ	16153	;# 
   887   003F1A                     SMT1CPWU        equ	16154	;# 
   888   003F1B                     SMT1PR          equ	16155	;# 
   889   003F1B                     SMT1PRL         equ	16155	;# 
   890   003F1C                     SMT1PRH         equ	16156	;# 
   891   003F1D                     SMT1PRU         equ	16157	;# 
   892   003F1E                     SMT1CON0        equ	16158	;# 
   893   003F1F                     SMT1CON1        equ	16159	;# 
   894   003F20                     SMT1STAT        equ	16160	;# 
   895   003F21                     SMT1CLK         equ	16161	;# 
   896   003F22                     SMT1SIG         equ	16162	;# 
   897   003F23                     SMT1WIN         equ	16163	;# 
   898   003F38                     NCO1ACC         equ	16184	;# 
   899   003F38                     NCO1ACCL        equ	16184	;# 
   900   003F39                     NCO1ACCH        equ	16185	;# 
   901   003F3A                     NCO1ACCU        equ	16186	;# 
   902   003F3B                     NCO1INC         equ	16187	;# 
   903   003F3B                     NCO1INCL        equ	16187	;# 
   904   003F3C                     NCO1INCH        equ	16188	;# 
   905   003F3D                     NCO1INCU        equ	16189	;# 
   906   003F3E                     NCO1CON         equ	16190	;# 
   907   003F3F                     NCO1CLK         equ	16191	;# 
   908   003F40                     CWG3CLK         equ	16192	;# 
   909   003F40                     CWG3CLKCON      equ	16192	;# 
   910   003F41                     CWG3ISM         equ	16193	;# 
   911   003F42                     CWG3DBR         equ	16194	;# 
   912   003F43                     CWG3DBF         equ	16195	;# 
   913   003F44                     CWG3CON0        equ	16196	;# 
   914   003F45                     CWG3CON1        equ	16197	;# 
   915   003F46                     CWG3AS0         equ	16198	;# 
   916   003F47                     CWG3AS1         equ	16199	;# 
   917   003F48                     CWG3STR         equ	16200	;# 
   918   003F49                     CWG2CLK         equ	16201	;# 
   919   003F49                     CWG2CLKCON      equ	16201	;# 
   920   003F4A                     CWG2ISM         equ	16202	;# 
   921   003F4B                     CWG2DBR         equ	16203	;# 
   922   003F4C                     CWG2DBF         equ	16204	;# 
   923   003F4D                     CWG2CON0        equ	16205	;# 
   924   003F4E                     CWG2CON1        equ	16206	;# 
   925   003F4F                     CWG2AS0         equ	16207	;# 
   926   003F50                     CWG2AS1         equ	16208	;# 
   927   003F51                     CWG2STR         equ	16209	;# 
   928   003F52                     CWG1CLK         equ	16210	;# 
   929   003F52                     CWG1CLKCON      equ	16210	;# 
   930   003F53                     CWG1ISM         equ	16211	;# 
   931   003F54                     CWG1DBR         equ	16212	;# 
   932   003F55                     CWG1DBF         equ	16213	;# 
   933   003F56                     CWG1CON0        equ	16214	;# 
   934   003F57                     CWG1CON1        equ	16215	;# 
   935   003F58                     CWG1AS0         equ	16216	;# 
   936   003F59                     CWG1AS1         equ	16217	;# 
   937   003F5A                     CWG1STR         equ	16218	;# 
   938   003F5E                     CCPTMRS0        equ	16222	;# 
   939   003F5F                     CCPTMRS1        equ	16223	;# 
   940   003F60                     PWM8DC          equ	16224	;# 
   941   003F60                     PWM8DCL         equ	16224	;# 
   942   003F61                     PWM8DCH         equ	16225	;# 
   943   003F62                     PWM8CON         equ	16226	;# 
   944   003F64                     PWM7DC          equ	16228	;# 
   945   003F64                     PWM7DCL         equ	16228	;# 
   946   003F65                     PWM7DCH         equ	16229	;# 
   947   003F66                     PWM7CON         equ	16230	;# 
   948   003F68                     PWM6DC          equ	16232	;# 
   949   003F68                     PWM6DCL         equ	16232	;# 
   950   003F69                     PWM6DCH         equ	16233	;# 
   951   003F6A                     PWM6CON         equ	16234	;# 
   952   003F6C                     PWM5DC          equ	16236	;# 
   953   003F6C                     PWM5DCL         equ	16236	;# 
   954   003F6D                     PWM5DCH         equ	16237	;# 
   955   003F6E                     PWM5CON         equ	16238	;# 
   956   003F70                     CCPR4           equ	16240	;# 
   957   003F70                     CCPR4L          equ	16240	;# 
   958   003F71                     CCPR4H          equ	16241	;# 
   959   003F72                     CCP4CON         equ	16242	;# 
   960   003F73                     CCP4CAP         equ	16243	;# 
   961   003F74                     CCPR3           equ	16244	;# 
   962   003F74                     CCPR3L          equ	16244	;# 
   963   003F75                     CCPR3H          equ	16245	;# 
   964   003F76                     CCP3CON         equ	16246	;# 
   965   003F77                     CCP3CAP         equ	16247	;# 
   966   003F78                     CCPR2           equ	16248	;# 
   967   003F78                     CCPR2L          equ	16248	;# 
   968   003F79                     CCPR2H          equ	16249	;# 
   969   003F7A                     CCP2CON         equ	16250	;# 
   970   003F7B                     CCP2CAP         equ	16251	;# 
   971   003F7C                     CCPR1           equ	16252	;# 
   972   003F7C                     CCPR1L          equ	16252	;# 
   973   003F7D                     CCPR1H          equ	16253	;# 
   974   003F7E                     CCP1CON         equ	16254	;# 
   975   003F7F                     CCP1CAP         equ	16255	;# 
   976   003F80                     RXB0CON         equ	16256	;# 
   977   003F81                     RXB0SIDH        equ	16257	;# 
   978   003F82                     RXB0SIDL        equ	16258	;# 
   979   003F83                     RXB0EIDH        equ	16259	;# 
   980   003F84                     RXB0EIDL        equ	16260	;# 
   981   003F85                     RXB0DLC         equ	16261	;# 
   982   003F86                     RXB0D0          equ	16262	;# 
   983   003F87                     RXB0D1          equ	16263	;# 
   984   003F88                     RXB0D2          equ	16264	;# 
   985   003F89                     RXB0D3          equ	16265	;# 
   986   003F8A                     RXB0D4          equ	16266	;# 
   987   003F8B                     RXB0D5          equ	16267	;# 
   988   003F8C                     RXB0D6          equ	16268	;# 
   989   003F8D                     RXB0D7          equ	16269	;# 
   990   003F8E                     CANSTAT         equ	16270	;# 
   991   003F8F                     CANCON          equ	16271	;# 
   992   003F90                     COMSTAT         equ	16272	;# 
   993   003F91                     ECANCON         equ	16273	;# 
   994   003F92                     T6TMR           equ	16274	;# 
   995   003F92                     TMR6            equ	16274	;# 
   996   003F93                     T6PR            equ	16275	;# 
   997   003F93                     PR6             equ	16275	;# 
   998   003F94                     T6CON           equ	16276	;# 
   999   003F95                     T6HLT           equ	16277	;# 
  1000   003F96                     T6CLKCON        equ	16278	;# 
  1001   003F96                     T6CLK           equ	16278	;# 
  1002   003F97                     T6RST           equ	16279	;# 
  1003   003F98                     TMR5            equ	16280	;# 
  1004   003F98                     TMR5L           equ	16280	;# 
  1005   003F99                     TMR5H           equ	16281	;# 
  1006   003F9A                     T5CON           equ	16282	;# 
  1007   003F9A                     TMR5CON         equ	16282	;# 
  1008   003F9B                     T5GCON          equ	16283	;# 
  1009   003F9B                     TMR5GCON        equ	16283	;# 
  1010   003F9C                     T5GATE          equ	16284	;# 
  1011   003F9C                     TMR5GATE        equ	16284	;# 
  1012   003F9D                     T5CLK           equ	16285	;# 
  1013   003F9D                     TMR5CLK         equ	16285	;# 
  1014   003F9D                     PR5             equ	16285	;# 
  1015   003F9E                     T4TMR           equ	16286	;# 
  1016   003F9E                     TMR4            equ	16286	;# 
  1017   003F9F                     T4PR            equ	16287	;# 
  1018   003F9F                     PR4             equ	16287	;# 
  1019   003FA0                     T4CON           equ	16288	;# 
  1020   003FA1                     T4HLT           equ	16289	;# 
  1021   003FA2                     T4CLKCON        equ	16290	;# 
  1022   003FA2                     T4CLK           equ	16290	;# 
  1023   003FA3                     T4RST           equ	16291	;# 
  1024   003FA4                     TMR3            equ	16292	;# 
  1025   003FA4                     TMR3L           equ	16292	;# 
  1026   003FA5                     TMR3H           equ	16293	;# 
  1027   003FA6                     T3CON           equ	16294	;# 
  1028   003FA6                     TMR3CON         equ	16294	;# 
  1029   003FA7                     T3GCON          equ	16295	;# 
  1030   003FA7                     TMR3GCON        equ	16295	;# 
  1031   003FA8                     T3GATE          equ	16296	;# 
  1032   003FA8                     TMR3GATE        equ	16296	;# 
  1033   003FA9                     T3CLK           equ	16297	;# 
  1034   003FA9                     TMR3CLK         equ	16297	;# 
  1035   003FA9                     PR3             equ	16297	;# 
  1036   003FAA                     T2TMR           equ	16298	;# 
  1037   003FAA                     TMR2            equ	16298	;# 
  1038   003FAB                     T2PR            equ	16299	;# 
  1039   003FAB                     PR2             equ	16299	;# 
  1040   003FAC                     T2CON           equ	16300	;# 
  1041   003FAD                     T2HLT           equ	16301	;# 
  1042   003FAE                     T2CLKCON        equ	16302	;# 
  1043   003FAE                     T2CLK           equ	16302	;# 
  1044   003FAF                     T2RST           equ	16303	;# 
  1045   003FB0                     TMR1            equ	16304	;# 
  1046   003FB0                     TMR1L           equ	16304	;# 
  1047   003FB1                     TMR1H           equ	16305	;# 
  1048   003FB2                     T1CON           equ	16306	;# 
  1049   003FB2                     TMR1CON         equ	16306	;# 
  1050   003FB3                     T1GCON          equ	16307	;# 
  1051   003FB3                     TMR1GCON        equ	16307	;# 
  1052   003FB4                     T1GATE          equ	16308	;# 
  1053   003FB4                     TMR1GATE        equ	16308	;# 
  1054   003FB5                     T1CLK           equ	16309	;# 
  1055   003FB5                     TMR1CLK         equ	16309	;# 
  1056   003FB5                     PR1             equ	16309	;# 
  1057   003FB6                     TMR0L           equ	16310	;# 
  1058   003FB6                     TMR0            equ	16310	;# 
  1059   003FB7                     TMR0H           equ	16311	;# 
  1060   003FB7                     PR0             equ	16311	;# 
  1061   003FB8                     T0CON0          equ	16312	;# 
  1062   003FB9                     T0CON1          equ	16313	;# 
  1063   003FBA                     LATA            equ	16314	;# 
  1064   003FBB                     LATB            equ	16315	;# 
  1065   003FBC                     LATC            equ	16316	;# 
  1066   003FC2                     TRISA           equ	16322	;# 
  1067   003FC3                     TRISB           equ	16323	;# 
  1068   003FC4                     TRISC           equ	16324	;# 
  1069   003FCA                     PORTA           equ	16330	;# 
  1070   003FCB                     PORTB           equ	16331	;# 
  1071   003FCC                     PORTC           equ	16332	;# 
  1072   003FCE                     PORTE           equ	16334	;# 
  1073   003FD2                     INTCON0         equ	16338	;# 
  1074   003FD3                     INTCON1         equ	16339	;# 
  1075   003FD4                     IVTLOCK         equ	16340	;# 
  1076   003FD5                     IVTBASE         equ	16341	;# 
  1077   003FD5                     IVTBASEL        equ	16341	;# 
  1078   003FD6                     IVTBASEH        equ	16342	;# 
  1079   003FD7                     IVTBASEU        equ	16343	;# 
  1080   003FD8                     STATUS          equ	16344	;# 
  1081   003FD9                     FSR2            equ	16345	;# 
  1082   003FD9                     FSR2L           equ	16345	;# 
  1083   003FDA                     FSR2H           equ	16346	;# 
  1084   003FDB                     PLUSW2          equ	16347	;# 
  1085   003FDC                     PREINC2         equ	16348	;# 
  1086   003FDD                     POSTDEC2        equ	16349	;# 
  1087   003FDE                     POSTINC2        equ	16350	;# 
  1088   003FDF                     INDF2           equ	16351	;# 
  1089   003FE0                     BSR             equ	16352	;# 
  1090   003FE1                     FSR1            equ	16353	;# 
  1091   003FE1                     FSR1L           equ	16353	;# 
  1092   003FE2                     FSR1H           equ	16354	;# 
  1093   003FE3                     PLUSW1          equ	16355	;# 
  1094   003FE4                     PREINC1         equ	16356	;# 
  1095   003FE5                     POSTDEC1        equ	16357	;# 
  1096   003FE6                     POSTINC1        equ	16358	;# 
  1097   003FE7                     INDF1           equ	16359	;# 
  1098   003FE8                     WREG            equ	16360	;# 
  1099   003FE9                     FSR0            equ	16361	;# 
  1100   003FE9                     FSR0L           equ	16361	;# 
  1101   003FEA                     FSR0H           equ	16362	;# 
  1102   003FEB                     PLUSW0          equ	16363	;# 
  1103   003FEC                     PREINC0         equ	16364	;# 
  1104   003FED                     POSTDEC0        equ	16365	;# 
  1105   003FEE                     POSTINC0        equ	16366	;# 
  1106   003FEF                     INDF0           equ	16367	;# 
  1107   003FF0                     PCON0           equ	16368	;# 
  1108   003FF1                     PCON1           equ	16369	;# 
  1109   003FF3                     PROD            equ	16371	;# 
  1110   003FF3                     PRODL           equ	16371	;# 
  1111   003FF4                     PRODH           equ	16372	;# 
  1112   003FF5                     TABLAT          equ	16373	;# 
  1113   003FF6                     TBLPTR          equ	16374	;# 
  1114   003FF6                     TBLPTRL         equ	16374	;# 
  1115   003FF7                     TBLPTRH         equ	16375	;# 
  1116   003FF8                     TBLPTRU         equ	16376	;# 
  1117   003FF9                     PCLAT           equ	16377	;# 
  1118   003FF9                     PCL             equ	16377	;# 
  1119   003FFA                     PCLATH          equ	16378	;# 
  1120   003FFB                     PCLATU          equ	16379	;# 
  1121   003FFC                     STKPTR          equ	16380	;# 
  1122   003FFD                     TOS             equ	16381	;# 
  1123   003FFD                     TOSL            equ	16381	;# 
  1124   003FFE                     TOSH            equ	16382	;# 
  1125   003FFF                     TOSU            equ	16383	;# 
  1126   0039A3                     _PIR3bits       set	14755
  1127   003A0A                     _RB2PPS         set	14858
  1128   003A09                     _RB1PPS         set	14857
  1129   003AE6                     _I2C2SDAPPS     set	15078
  1130   003AE5                     _I2C2SCLPPS     set	15077
  1131   003A16                     _RC6PPS         set	14870
  1132   003AE7                     _U1RXPPS        set	15079
  1133   003A52                     _ODCONB         set	14930
  1134   003A60                     _ANSELC         set	14944
  1135   003A50                     _ANSELB         set	14928
  1136   003A40                     _ANSELA         set	14912
  1137   003DF5                     _U1BRG          set	15861
  1138   003D65                     _I2C2CLK        set	15717
  1139   003D5D                     _I2C2CON0       set	15709
  1140   003DF4                     _U1CON2         set	15860
  1141   003DF3                     _U1CON1         set	15859
  1142   003DF2                     _U1CON0         set	15858
  1143   003D54                     _I2C2RXB        set	15700
  1144   003D5E                     _I2C2CON1bits   set	15710
  1145   003D62                     _I2C2STAT1bits  set	15714
  1146   003D63                     _I2C2PIRbits    set	15715
  1147   003D5D                     _I2C2CON0bits   set	15709
  1148   003D55                     _I2C2TXB        set	15701
  1149   003D58                     _I2C2ADB1       set	15704
  1150   003D56                     _I2C2CNT        set	15702
  1151   003DEA                     _U1TXB          set	15850
  1152   003FCC                     _PORTCbits      set	16332
  1153   003FCB                     _PORTBbits      set	16331
  1154   003FCC                     _PORTC          set	16332
  1155   003FCB                     _PORTB          set	16331
  1156   003FC4                     _TRISC          set	16324
  1157   003FC3                     _TRISB          set	16323
  1158   003FC2                     _TRISA          set	16322
  1159   003FCA                     _PORTAbits      set	16330
  1160                           
  1161                           	psect	smallconst
  1162   001000                     __psmallconst:
  1163                           	callstack 0
  1164   001000  00                 	db	0
  1165   001001                     STR_1:
  1166   001001  25                 	db	37
  1167   001002  30                 	db	48	;'0'
  1168   001003  32                 	db	50	;'2'
  1169   001004  64                 	db	100	;'d'
  1170   001005  3A                 	db	58	;':'
  1171   001006  25                 	db	37
  1172   001007  30                 	db	48	;'0'
  1173   001008  32                 	db	50	;'2'
  1174   001009  64                 	db	100	;'d'
  1175   00100A  00                 	db	0
  1176   00100B  00                 	db	0	; dummy byte at the end
  1177   001000                     __smallconst    set	__psmallconst
  1178   001000                     __mediumconst   set	__psmallconst
  1179   000002                     __activetblptr  equ	2
  1180                           
  1181                           ; #config settings
  1182                           
  1183                           	psect	cinit
  1184   001B1C                     __pcinit:
  1185                           	callstack 0
  1186   001B1C                     start_initialization:
  1187                           	callstack 0
  1188   001B1C                     __initialization:
  1189                           	callstack 0
  1190                           
  1191                           ; Clear objects allocated to BANK0 (32 bytes)
  1192   001B1C  EE00  F060         	lfsr	0,__pbssBANK0
  1193   001B20  0E20               	movlw	32
  1194   001B22                     clear_0:
  1195   001B22  6AEE               	clrf	postinc0,c
  1196   001B24  06E8               	decf	wreg,f,c
  1197   001B26  E1FD               	bnz	clear_0
  1198                           
  1199                           ; Clear objects allocated to COMRAM (5 bytes)
  1200   001B28  6A4E               	clrf	(__pbssCOMRAM+4)& (0+255),c
  1201   001B2A  6A4D               	clrf	(__pbssCOMRAM+3)& (0+255),c
  1202   001B2C  6A4C               	clrf	(__pbssCOMRAM+2)& (0+255),c
  1203   001B2E  6A4B               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1204   001B30  6A4A               	clrf	__pbssCOMRAM& (0+255),c
  1205   001B32                     end_of_initialization:
  1206                           	callstack 0
  1207   001B32                     __end_of__initialization:
  1208                           	callstack 0
  1209   001B32  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1210   001B34  6EF8               	movwf	tblptru,c
  1211   001B36  0100               	movlb	0
  1212   001B38  EF06  F008         	goto	_main	;jump to C main() function
  1213                           
  1214                           	psect	bssCOMRAM
  1215   00004A                     __pbssCOMRAM:
  1216                           	callstack 0
  1217   00004A                     _width:
  1218                           	callstack 0
  1219   00004A                     	ds	2
  1220   00004C                     _prec:
  1221                           	callstack 0
  1222   00004C                     	ds	2
  1223   00004E                     _flags:
  1224                           	callstack 0
  1225   00004E                     	ds	1
  1226                           
  1227                           	psect	bssBANK0
  1228   000060                     __pbssBANK0:
  1229                           	callstack 0
  1230   000060                     _dbuf:
  1231                           	callstack 0
  1232   000060                     	ds	32
  1233                           
  1234                           	psect	cstackCOMRAM
  1235   000001                     __pcstackCOMRAM:
  1236                           	callstack 0
  1237   000001                     ?___awdiv:
  1238                           	callstack 0
  1239   000001                     ?___awmod:
  1240                           	callstack 0
  1241   000001                     ?_read_prec_or_width:
  1242                           	callstack 0
  1243   000001                     Lcd_Port@a:
  1244                           	callstack 0
  1245   000001                     bcd_to_dec@bcd:
  1246                           	callstack 0
  1247   000001                     uart_send_string@s:
  1248                           	callstack 0
  1249   000001                     read_prec_or_width@fmt:
  1250                           	callstack 0
  1251   000001                     rtc_read@reg_adress:
  1252                           	callstack 0
  1253   000001                     ___awdiv@dividend:
  1254                           	callstack 0
  1255   000001                     ___awmod@dividend:
  1256                           	callstack 0
  1257   000001                     fputc@c:
  1258                           	callstack 0
  1259   000001                     
  1260                           ; 1 bytes @ 0x0
  1261   000001                     	ds	1
  1262   000002                     Lcd_Write_Char@temp:
  1263                           	callstack 0
  1264   000002                     read_prec_or_width@ap:
  1265                           	callstack 0
  1266   000002                     ??_Lcd_Cmd:
  1267   000002                     ??_bcd_to_dec:
  1268   000002                     
  1269                           ; 1 bytes @ 0x1
  1270   000002                     	ds	1
  1271   000003                     Lcd_Cmd@a:
  1272                           	callstack 0
  1273   000003                     Lcd_Write_Char@y:
  1274                           	callstack 0
  1275   000003                     rtc_read@result:
  1276                           	callstack 0
  1277   000003                     fputc@fp:
  1278                           	callstack 0
  1279   000003                     ___awdiv@divisor:
  1280                           	callstack 0
  1281   000003                     ___awmod@divisor:
  1282                           	callstack 0
  1283   000003                     ??_read_prec_or_width:
  1284                           
  1285                           ; 1 bytes @ 0x2
  1286   000003                     	ds	1
  1287   000004                     Lcd_Set_Cursor@b:
  1288                           	callstack 0
  1289   000004                     Lcd_Write_Char@a:
  1290                           	callstack 0
  1291   000004                     ??_fputc:
  1292   000004                     ??_Lcd_Init:
  1293                           
  1294                           ; 1 bytes @ 0x3
  1295   000004                     	ds	1
  1296   000005                     Lcd_Set_Cursor@a:
  1297                           	callstack 0
  1298   000005                     Lcd_Write_String@a:
  1299                           	callstack 0
  1300   000005                     ___awdiv@counter:
  1301                           	callstack 0
  1302   000005                     ___awmod@counter:
  1303                           	callstack 0
  1304   000005                     read_prec_or_width@c:
  1305                           	callstack 0
  1306   000005                     
  1307                           ; 1 bytes @ 0x4
  1308   000005                     	ds	1
  1309   000006                     Lcd_Set_Cursor@z:
  1310                           	callstack 0
  1311   000006                     ___awdiv@sign:
  1312                           	callstack 0
  1313   000006                     ___awmod@sign:
  1314                           	callstack 0
  1315   000006                     Lcd_Write_String@i:
  1316                           	callstack 0
  1317   000006                     read_prec_or_width@n:
  1318                           	callstack 0
  1319   000006                     
  1320                           ; 1 bytes @ 0x5
  1321   000006                     	ds	1
  1322   000007                     ?_abs:
  1323                           	callstack 0
  1324   000007                     Lcd_Set_Cursor@y:
  1325                           	callstack 0
  1326   000007                     ___awdiv@quotient:
  1327                           	callstack 0
  1328   000007                     abs@a:
  1329                           	callstack 0
  1330                           
  1331                           ; 2 bytes @ 0x6
  1332   000007                     	ds	1
  1333   000008                     Lcd_Set_Cursor@temp:
  1334                           	callstack 0
  1335                           
  1336                           ; 1 bytes @ 0x7
  1337   000008                     	ds	1
  1338   000009                     fputs@s:
  1339                           	callstack 0
  1340   000009                     ??_abs:
  1341                           
  1342                           ; 1 bytes @ 0x8
  1343   000009                     	ds	1
  1344   00000A                     fputs@fp:
  1345                           	callstack 0
  1346                           
  1347                           ; 1 bytes @ 0x9
  1348   00000A                     	ds	1
  1349   00000B                     fputs@c:
  1350                           	callstack 0
  1351   00000B                     
  1352                           ; 1 bytes @ 0xA
  1353   00000B                     	ds	1
  1354   00000C                     fputs@i:
  1355                           	callstack 0
  1356                           
  1357                           ; 2 bytes @ 0xB
  1358   00000C                     	ds	2
  1359   00000E                     pad@fp:
  1360                           	callstack 0
  1361                           
  1362                           ; 1 bytes @ 0xD
  1363   00000E                     	ds	1
  1364   00000F                     pad@buf:
  1365                           	callstack 0
  1366                           
  1367                           ; 1 bytes @ 0xE
  1368   00000F                     	ds	1
  1369   000010                     pad@p:
  1370                           	callstack 0
  1371                           
  1372                           ; 2 bytes @ 0xF
  1373   000010                     	ds	2
  1374   000012                     ??_pad:
  1375                           
  1376                           ; 1 bytes @ 0x11
  1377   000012                     	ds	1
  1378   000013                     pad@i:
  1379                           	callstack 0
  1380                           
  1381                           ; 2 bytes @ 0x12
  1382   000013                     	ds	2
  1383   000015                     dtoa@fp:
  1384                           	callstack 0
  1385                           
  1386                           ; 1 bytes @ 0x14
  1387   000015                     	ds	1
  1388   000016                     dtoa@d:
  1389                           	callstack 0
  1390                           
  1391                           ; 2 bytes @ 0x15
  1392   000016                     	ds	2
  1393   000018                     _dtoa$1081:
  1394                           	callstack 0
  1395   000018                     
  1396                           ; 1 bytes @ 0x17
  1397   000018                     	ds	2
  1398   00001A                     dtoa@p:
  1399                           	callstack 0
  1400                           
  1401                           ; 1 bytes @ 0x19
  1402   00001A                     	ds	1
  1403   00001B                     dtoa@w:
  1404                           	callstack 0
  1405                           
  1406                           ; 2 bytes @ 0x1A
  1407   00001B                     	ds	2
  1408   00001D                     dtoa@s:
  1409                           	callstack 0
  1410                           
  1411                           ; 1 bytes @ 0x1C
  1412   00001D                     	ds	1
  1413   00001E                     dtoa@i:
  1414                           	callstack 0
  1415                           
  1416                           ; 2 bytes @ 0x1D
  1417   00001E                     	ds	2
  1418   000020                     vfpfcnvrt@fp:
  1419                           	callstack 0
  1420                           
  1421                           ; 1 bytes @ 0x1F
  1422   000020                     	ds	1
  1423   000021                     vfpfcnvrt@fmt:
  1424                           	callstack 0
  1425                           
  1426                           ; 1 bytes @ 0x20
  1427   000021                     	ds	1
  1428   000022                     vfpfcnvrt@ap:
  1429                           	callstack 0
  1430                           
  1431                           ; 1 bytes @ 0x21
  1432   000022                     	ds	1
  1433   000023                     vfpfcnvrt@convarg:
  1434                           	callstack 0
  1435   000023                     
  1436                           ; 1 bytes @ 0x22
  1437   000023                     	ds	4
  1438   000027                     vfpfcnvrt@done:
  1439                           	callstack 0
  1440                           
  1441                           ; 1 bytes @ 0x26
  1442   000027                     	ds	1
  1443   000028                     vfpfcnvrt@cp:
  1444                           	callstack 0
  1445                           
  1446                           ; 1 bytes @ 0x27
  1447   000028                     	ds	1
  1448   000029                     ?_vfprintf:
  1449                           	callstack 0
  1450   000029                     vfprintf@fp:
  1451                           	callstack 0
  1452                           
  1453                           ; 1 bytes @ 0x28
  1454   000029                     	ds	1
  1455   00002A                     vfprintf@fmt:
  1456                           	callstack 0
  1457                           
  1458                           ; 1 bytes @ 0x29
  1459   00002A                     	ds	1
  1460   00002B                     vfprintf@ap:
  1461                           	callstack 0
  1462                           
  1463                           ; 1 bytes @ 0x2A
  1464   00002B                     	ds	1
  1465   00002C                     vfprintf@cfmt:
  1466                           	callstack 0
  1467   00002C                     
  1468                           ; 1 bytes @ 0x2B
  1469   00002C                     	ds	1
  1470   00002D                     ?_sprintf:
  1471                           	callstack 0
  1472   00002D                     sprintf@s:
  1473                           	callstack 0
  1474                           
  1475                           ; 1 bytes @ 0x2C
  1476   00002D                     	ds	1
  1477   00002E                     sprintf@fmt:
  1478                           	callstack 0
  1479                           
  1480                           ; 1 bytes @ 0x2D
  1481   00002E                     	ds	5
  1482   000033                     sprintf@ap:
  1483                           	callstack 0
  1484   000033                     
  1485                           ; 1 bytes @ 0x32
  1486   000033                     	ds	1
  1487   000034                     sprintf@f:
  1488                           	callstack 0
  1489                           
  1490                           ; 11 bytes @ 0x33
  1491   000034                     	ds	11
  1492   00003F                     ??_main:
  1493                           
  1494                           ; 1 bytes @ 0x3E
  1495   00003F                     	ds	2
  1496   000041                     main@buffer:
  1497                           	callstack 0
  1498                           
  1499                           ; 6 bytes @ 0x40
  1500   000041                     	ds	6
  1501   000047                     main@last_secondes:
  1502                           	callstack 0
  1503                           
  1504                           ; 1 bytes @ 0x46
  1505   000047                     	ds	1
  1506   000048                     main@minute:
  1507                           	callstack 0
  1508                           
  1509                           ; 1 bytes @ 0x47
  1510   000048                     	ds	1
  1511   000049                     main@secondes:
  1512                           	callstack 0
  1513                           
  1514                           ; 1 bytes @ 0x48
  1515   000049                     	ds	1
  1516                           
  1517 ;;
  1518 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1519 ;;
  1520 ;; *************** function _main *****************
  1521 ;; Defined at:
  1522 ;;		line 155 in file "EX3I2C26K83.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;		None
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;  buffer          6   64[COMRAM] unsigned char [6]
  1527 ;;  secondes        1   72[COMRAM] unsigned char 
  1528 ;;  minute          1   71[COMRAM] unsigned char 
  1529 ;;  last_seconde    1   70[COMRAM] unsigned char 
  1530 ;; Return value:  Size  Location     Type
  1531 ;;                  1    wreg      void 
  1532 ;; Registers used:
  1533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1534 ;; Tracked objects:
  1535 ;;		On entry : 0/0
  1536 ;;		On exit  : 0/0
  1537 ;;		Unchanged: 0/0
  1538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1540 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1541 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1542 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1543 ;;Total ram usage:       11 bytes
  1544 ;; Hardware stack levels required when called: 7
  1545 ;; This function calls:
  1546 ;;		_Lcd_Clear
  1547 ;;		_Lcd_Init
  1548 ;;		_Lcd_Set_Cursor
  1549 ;;		_Lcd_Write_String
  1550 ;;		_bcd_to_dec
  1551 ;;		_rtc_read
  1552 ;;		_sprintf
  1553 ;;		_uart_send_string
  1554 ;; This function is called by:
  1555 ;;		Startup code after reset
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           	psect	text0
  1560   00100C                     __ptext0:
  1561                           	callstack 0
  1562   00100C                     _main:
  1563                           	callstack 24
  1564   00100C                     
  1565                           ;EX3I2C26K83.c: 157:     char minute = 0;
  1566   00100C  6A48               	clrf	main@minute^0,c
  1567                           
  1568                           ;EX3I2C26K83.c: 158:     char last_secondes = -1;
  1569   00100E  6847               	setf	main@last_secondes^0,c
  1570   001010                     
  1571                           ;EX3I2C26K83.c: 160:     TRISA = 0b11000000;
  1572   001010  0EC0               	movlw	192
  1573   001012  6EC2               	movwf	194,c	;volatile
  1574   001014                     
  1575                           ;EX3I2C26K83.c: 161:     TRISB = 0;
  1576   001014  6AC3               	clrf	195,c	;volatile
  1577                           
  1578                           ;EX3I2C26K83.c: 162:     TRISC = 0b10000011;
  1579   001016  0E83               	movlw	131
  1580   001018  6EC4               	movwf	196,c	;volatile
  1581   00101A                     
  1582                           ;EX3I2C26K83.c: 163:     ANSELA = 0;
  1583   00101A  013A               	movlb	58	; () banked
  1584   00101C  6B40               	clrf	64,b	;volatile
  1585   00101E                     
  1586                           ; BSR set to: 58
  1587                           ;EX3I2C26K83.c: 164:     ANSELB = 0;
  1588   00101E  6B50               	clrf	80,b	;volatile
  1589   001020                     
  1590                           ; BSR set to: 58
  1591                           ;EX3I2C26K83.c: 165:     ANSELC = 0;
  1592   001020  6B60               	clrf	96,b	;volatile
  1593                           
  1594                           ;EX3I2C26K83.c: 166:     ODCONB = 0b00000110;
  1595   001022  0E06               	movlw	6
  1596   001024  6F52               	movwf	82,b	;volatile
  1597   001026                     
  1598                           ; BSR set to: 58
  1599                           ;EX3I2C26K83.c: 167:     PORTB = 0;
  1600   001026  6ACB               	clrf	203,c	;volatile
  1601   001028                     
  1602                           ; BSR set to: 58
  1603                           ;EX3I2C26K83.c: 168:     PORTC = 0;
  1604   001028  6ACC               	clrf	204,c	;volatile
  1605                           
  1606                           ;EX3I2C26K83.c: 171:     U1RXPPS = 0b00010111;
  1607   00102A  0E17               	movlw	23
  1608   00102C  6FE7               	movwf	231,b	;volatile
  1609                           
  1610                           ;EX3I2C26K83.c: 172:     RC6PPS = 0b00010011;
  1611   00102E  0E13               	movlw	19
  1612   001030  6F16               	movwf	22,b	;volatile
  1613                           
  1614                           ;EX3I2C26K83.c: 173:     I2C2SCLPPS = 0b00001001;
  1615   001032  0E09               	movlw	9
  1616   001034  6FE5               	movwf	229,b	;volatile
  1617                           
  1618                           ;EX3I2C26K83.c: 174:     I2C2SDAPPS = 0b00001010;
  1619   001036  0E0A               	movlw	10
  1620   001038  6FE6               	movwf	230,b	;volatile
  1621                           
  1622                           ;EX3I2C26K83.c: 175:     RB1PPS = 0b00100011;
  1623   00103A  0E23               	movlw	35
  1624   00103C  6F09               	movwf	9,b	;volatile
  1625                           
  1626                           ;EX3I2C26K83.c: 176:     RB2PPS = 0b00100100;
  1627   00103E  0E24               	movlw	36
  1628   001040  6F0A               	movwf	10,b	;volatile
  1629                           
  1630                           ;EX3I2C26K83.c: 179:     U1CON0 = 0b10100000;
  1631   001042  0EA0               	movlw	160
  1632   001044  013D               	movlb	61	; () banked
  1633   001046  6FF2               	movwf	242,b	;volatile
  1634                           
  1635                           ;EX3I2C26K83.c: 180:     U1CON1 = 0b10000000;
  1636   001048  0E80               	movlw	128
  1637   00104A  6FF3               	movwf	243,b	;volatile
  1638   00104C                     
  1639                           ; BSR set to: 61
  1640                           ;EX3I2C26K83.c: 181:     U1CON2 = 0;
  1641   00104C  6BF4               	clrf	244,b	;volatile
  1642                           
  1643                           ;EX3I2C26K83.c: 182:     U1BRG = 1666;
  1644   00104E  0E06               	movlw	6
  1645   001050  6FF6               	movwf	246,b	;volatile
  1646   001052  0E82               	movlw	130
  1647   001054  6FF5               	movwf	245,b	;volatile
  1648                           
  1649                           ;EX3I2C26K83.c: 186:     I2C2CON0 = 0b10000100;
  1650   001056  0E84               	movlw	132
  1651   001058  6F5D               	movwf	93,b	;volatile
  1652                           
  1653                           ;EX3I2C26K83.c: 187:     I2C2CLK = 0b00000011;
  1654   00105A  0E03               	movlw	3
  1655   00105C  6F65               	movwf	101,b	;volatile
  1656   00105E                     
  1657                           ; BSR set to: 61
  1658                           ;EX3I2C26K83.c: 190:     Lcd_Init();
  1659   00105E  EC01  F00C         	call	_Lcd_Init	;wreg free
  1660   001062                     
  1661                           ;EX3I2C26K83.c: 191:     Lcd_Clear();
  1662   001062  ECAE  F00D         	call	_Lcd_Clear	;wreg free
  1663   001066                     
  1664                           ;EX3I2C26K83.c: 192:     PORTBbits.RB5 = 1;
  1665   001066  8ACB               	bsf	203,5,c	;volatile
  1666   001068                     
  1667                           ;EX3I2C26K83.c: 193:     _delay((unsigned long)((200)*(64000000/4000.0)));
  1668   001068  0E11               	movlw	17
  1669   00106A  6E40               	movwf	(??_main+1)^0,c
  1670   00106C  0E3C               	movlw	60
  1671   00106E  6E3F               	movwf	??_main^0,c
  1672   001070  0ECB               	movlw	203
  1673   001072                     u1237:
  1674   001072  2EE8               	decfsz	wreg,f,c
  1675   001074  D7FE               	bra	u1237
  1676   001076  2E3F               	decfsz	??_main^0,f,c
  1677   001078  D7FC               	bra	u1237
  1678   00107A  2E40               	decfsz	(??_main+1)^0,f,c
  1679   00107C  D7FA               	bra	u1237
  1680   00107E  0000               	nop	
  1681   001080                     
  1682                           ;EX3I2C26K83.c: 196:     I2C2CON0bits.RSEN = 0;
  1683   001080  013D               	movlb	61	; () banked
  1684   001082  9D5D               	bcf	93,6,b	;volatile
  1685   001084                     
  1686                           ; BSR set to: 61
  1687                           ;EX3I2C26K83.c: 197:     I2C2CNT = 2;
  1688   001084  0E02               	movlw	2
  1689   001086  6F56               	movwf	86,b	;volatile
  1690   001088                     
  1691                           ; BSR set to: 61
  1692                           ;EX3I2C26K83.c: 198:     I2C2ADB1 = 0b11010000;
  1693   001088  0ED0               	movlw	208
  1694   00108A  6F58               	movwf	88,b	;volatile
  1695   00108C                     
  1696                           ; BSR set to: 61
  1697                           ;EX3I2C26K83.c: 199:     I2C2TXB = 0;
  1698   00108C  6B55               	clrf	85,b	;volatile
  1699   00108E                     
  1700                           ; BSR set to: 61
  1701                           ;EX3I2C26K83.c: 200:     I2C2CON0bits.S = 1;
  1702   00108E  8B5D               	bsf	93,5,b	;volatile
  1703   001090                     l157:
  1704                           
  1705                           ; BSR set to: 61
  1706   001090  A163               	btfss	99,0,b	;volatile
  1707   001092  EF4D  F008         	goto	u1171
  1708   001096  EF4F  F008         	goto	u1170
  1709   00109A                     u1171:
  1710   00109A  EF48  F008         	goto	l157
  1711   00109E                     u1170:
  1712   00109E                     
  1713                           ; BSR set to: 61
  1714                           ;EX3I2C26K83.c: 202:     I2C2PIRbits.SCIF = 0;
  1715   00109E  9163               	bcf	99,0,b	;volatile
  1716   0010A0                     l160:
  1717                           
  1718                           ; BSR set to: 61
  1719   0010A0  AB62               	btfss	98,5,b	;volatile
  1720   0010A2  EF55  F008         	goto	u1181
  1721   0010A6  EF57  F008         	goto	u1180
  1722   0010AA                     u1181:
  1723   0010AA  EF50  F008         	goto	l160
  1724   0010AE                     u1180:
  1725   0010AE                     
  1726                           ; BSR set to: 61
  1727                           ;EX3I2C26K83.c: 204:     I2C2TXB = 0x45;
  1728   0010AE  0E45               	movlw	69
  1729   0010B0  6F55               	movwf	85,b	;volatile
  1730   0010B2                     l163:
  1731                           
  1732                           ; BSR set to: 61
  1733   0010B2  A563               	btfss	99,2,b	;volatile
  1734   0010B4  EF5E  F008         	goto	u1191
  1735   0010B8  EF60  F008         	goto	u1190
  1736   0010BC                     u1191:
  1737   0010BC  EF59  F008         	goto	l163
  1738   0010C0                     u1190:
  1739   0010C0                     
  1740                           ; BSR set to: 61
  1741                           ;EX3I2C26K83.c: 206:     I2C2PIRbits.PCIF = 0;
  1742   0010C0  9563               	bcf	99,2,b	;volatile
  1743                           
  1744                           ;EX3I2C26K83.c: 208:     PORTBbits.RB5 = 0;
  1745   0010C2  9ACB               	bcf	203,5,c	;volatile
  1746   0010C4                     l1869:
  1747                           
  1748                           ;EX3I2C26K83.c: 211:     {;EX3I2C26K83.c: 212:         _delay((unsigned long)((5)*(64000
      +                          000/4000.0)));
  1749   0010C4  0E68               	movlw	104
  1750   0010C6  6E3F               	movwf	??_main^0,c
  1751   0010C8  0EE4               	movlw	228
  1752   0010CA                     u1247:
  1753   0010CA  2EE8               	decfsz	wreg,f,c
  1754   0010CC  D7FE               	bra	u1247
  1755   0010CE  2E3F               	decfsz	??_main^0,f,c
  1756   0010D0  D7FC               	bra	u1247
  1757   0010D2  D000               	nop2	
  1758   0010D4                     
  1759                           ;EX3I2C26K83.c: 214:         secondes = rtc_read(0x00);
  1760   0010D4  6A02               	clrf	(rtc_read@reg_adress+1)^0,c
  1761   0010D6  0E00               	movlw	0
  1762   0010D8  6E01               	movwf	rtc_read@reg_adress^0,c
  1763   0010DA  ECBF  F00B         	call	_rtc_read	;wreg free
  1764   0010DE  6E49               	movwf	main@secondes^0,c
  1765   0010E0                     
  1766                           ;EX3I2C26K83.c: 215:         minute = rtc_read(0x01);
  1767   0010E0  6A02               	clrf	(rtc_read@reg_adress+1)^0,c
  1768   0010E2  0E01               	movlw	1
  1769   0010E4  6E01               	movwf	rtc_read@reg_adress^0,c
  1770   0010E6  ECBF  F00B         	call	_rtc_read	;wreg free
  1771   0010EA  6E48               	movwf	main@minute^0,c
  1772   0010EC                     
  1773                           ;EX3I2C26K83.c: 216:         bcd_to_dec(&secondes);
  1774   0010EC  0E49               	movlw	low main@secondes
  1775   0010EE  6E01               	movwf	bcd_to_dec@bcd^0,c
  1776   0010F0  EC78  F00D         	call	_bcd_to_dec	;wreg free
  1777   0010F4                     
  1778                           ;EX3I2C26K83.c: 217:         bcd_to_dec(&minute);
  1779   0010F4  0E48               	movlw	low main@minute
  1780   0010F6  6E01               	movwf	bcd_to_dec@bcd^0,c
  1781   0010F8  EC78  F00D         	call	_bcd_to_dec	;wreg free
  1782   0010FC                     
  1783                           ;EX3I2C26K83.c: 219:         if (secondes != last_secondes) {
  1784   0010FC  5047               	movf	main@last_secondes^0,w,c
  1785   0010FE  1849               	xorwf	main@secondes^0,w,c
  1786   001100  B4D8               	btfsc	status,2,c
  1787   001102  EF85  F008         	goto	u1201
  1788   001106  EF87  F008         	goto	u1200
  1789   00110A                     u1201:
  1790   00110A  EF62  F008         	goto	l1869
  1791   00110E                     u1200:
  1792   00110E                     
  1793                           ;EX3I2C26K83.c: 220:             last_secondes = secondes;
  1794   00110E  C049  F047         	movff	main@secondes,main@last_secondes
  1795   001112                     
  1796                           ;EX3I2C26K83.c: 221:             PORTCbits.RC2 = !PORTCbits.RC2;
  1797   001112  A4CC               	btfss	204,2,c	;volatile
  1798   001114  EF8E  F008         	goto	u1211
  1799   001118  EF92  F008         	goto	u1210
  1800   00111C                     u1211:
  1801   00111C  6A3F               	clrf	??_main^0,c
  1802   00111E  2A3F               	incf	??_main^0,f,c
  1803   001120  EF93  F008         	goto	u1228
  1804   001124                     u1210:
  1805   001124  6A3F               	clrf	??_main^0,c
  1806   001126                     u1228:
  1807   001126  463F               	rlncf	??_main^0,f,c
  1808   001128  463F               	rlncf	??_main^0,f,c
  1809   00112A  50CC               	movf	204,w,c	;volatile
  1810   00112C  183F               	xorwf	??_main^0,w,c
  1811   00112E  0BFB               	andlw	-5
  1812   001130  183F               	xorwf	??_main^0,w,c
  1813   001132  6ECC               	movwf	204,c	;volatile
  1814   001134                     
  1815                           ;EX3I2C26K83.c: 222:             char buffer[6];;EX3I2C26K83.c: 223:             sprintf
      +                          (buffer, "%02d:%02d", minute, secondes);
  1816   001134  0E41               	movlw	low main@buffer
  1817   001136  6E2D               	movwf	sprintf@s^0,c
  1818   001138  0E01               	movlw	low STR_1
  1819   00113A  6E2E               	movwf	sprintf@fmt^0,c
  1820   00113C  C048  F02F         	movff	main@minute,?_sprintf+2
  1821   001140  6A30               	clrf	(?_sprintf+3)^0,c
  1822   001142  C049  F031         	movff	main@secondes,?_sprintf+4
  1823   001146  6A32               	clrf	(?_sprintf+5)^0,c
  1824   001148  EC60  F00D         	call	_sprintf	;wreg free
  1825   00114C                     
  1826                           ;EX3I2C26K83.c: 224:             Lcd_Clear();
  1827   00114C  ECAE  F00D         	call	_Lcd_Clear	;wreg free
  1828   001150                     
  1829                           ;EX3I2C26K83.c: 225:             Lcd_Set_Cursor(1,1);
  1830   001150  0E01               	movlw	1
  1831   001152  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1832   001154  0E01               	movlw	1
  1833   001156  EC72  F00C         	call	_Lcd_Set_Cursor
  1834   00115A                     
  1835                           ;EX3I2C26K83.c: 226:             Lcd_Write_String(buffer);
  1836   00115A  0E41               	movlw	low main@buffer
  1837   00115C  6E05               	movwf	Lcd_Write_String@a^0,c
  1838   00115E  EC2B  F00D         	call	_Lcd_Write_String	;wreg free
  1839   001162                     
  1840                           ;EX3I2C26K83.c: 227:             uart_send_string(buffer);
  1841   001162  0E41               	movlw	low main@buffer
  1842   001164  6E01               	movwf	uart_send_string@s^0,c
  1843   001166  EC3F  F00C         	call	_uart_send_string	;wreg free
  1844   00116A  EF62  F008         	goto	l1869
  1845   00116E  EFFE  F07F         	goto	start
  1846   001172                     __end_of_main:
  1847                           	callstack 0
  1848                           
  1849 ;; *************** function _uart_send_string *****************
  1850 ;; Defined at:
  1851 ;;		line 103 in file "EX3I2C26K83.c"
  1852 ;; Parameters:    Size  Location     Type
  1853 ;;  s               1    0[COMRAM] PTR const unsigned char 
  1854 ;;		 -> main@buffer(6), 
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;		None
  1857 ;; Return value:  Size  Location     Type
  1858 ;;                  1    wreg      void 
  1859 ;; Registers used:
  1860 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1866 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1869 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1870 ;;Total ram usage:        1 bytes
  1871 ;; Hardware stack levels used: 1
  1872 ;; This function calls:
  1873 ;;		Nothing
  1874 ;; This function is called by:
  1875 ;;		_main
  1876 ;; This function uses a non-reentrant model
  1877 ;;
  1878                           
  1879                           	psect	text1
  1880   00187E                     __ptext1:
  1881                           	callstack 0
  1882   00187E                     _uart_send_string:
  1883                           	callstack 30
  1884   00187E                     
  1885                           ;EX3I2C26K83.c: 104:     while (*s) {
  1886   00187E  EF50  F00C         	goto	l1799
  1887   001882                     l121:
  1888   001882  0139               	movlb	57	; () banked
  1889   001884  A9A3               	btfss	163,4,b	;volatile
  1890   001886  EF47  F00C         	goto	u1071
  1891   00188A  EF49  F00C         	goto	u1070
  1892   00188E                     u1071:
  1893   00188E  EF41  F00C         	goto	l121
  1894   001892                     u1070:
  1895   001892                     
  1896                           ; BSR set to: 57
  1897                           ;EX3I2C26K83.c: 106:         U1TXB = *s++;
  1898   001892  5001               	movf	uart_send_string@s^0,w,c
  1899   001894  6ED9               	movwf	fsr2l,c
  1900   001896  6ADA               	clrf	fsr2h,c
  1901   001898  50DF               	movf	indf2,w,c
  1902   00189A  013D               	movlb	61	; () banked
  1903   00189C  6FEA               	movwf	234,b	;volatile
  1904   00189E                     
  1905                           ; BSR set to: 61
  1906   00189E  2A01               	incf	uart_send_string@s^0,f,c
  1907   0018A0                     l1799:
  1908                           
  1909                           ;EX3I2C26K83.c: 104:     while (*s) {
  1910   0018A0  5001               	movf	uart_send_string@s^0,w,c
  1911   0018A2  6ED9               	movwf	fsr2l,c
  1912   0018A4  6ADA               	clrf	fsr2h,c
  1913   0018A6  50DF               	movf	indf2,w,c
  1914   0018A8  A4D8               	btfss	status,2,c
  1915   0018AA  EF59  F00C         	goto	u1081
  1916   0018AE  EF5B  F00C         	goto	u1080
  1917   0018B2                     u1081:
  1918   0018B2  EF41  F00C         	goto	l121
  1919   0018B6                     u1080:
  1920   0018B6                     l125:
  1921   0018B6  0139               	movlb	57	; () banked
  1922   0018B8  A9A3               	btfss	163,4,b	;volatile
  1923   0018BA  EF61  F00C         	goto	u1091
  1924   0018BE  EF63  F00C         	goto	u1090
  1925   0018C2                     u1091:
  1926   0018C2  EF5B  F00C         	goto	l125
  1927   0018C6                     u1090:
  1928   0018C6                     
  1929                           ; BSR set to: 57
  1930                           ;EX3I2C26K83.c: 109:     U1TXB = '\r';
  1931   0018C6  0E0D               	movlw	13
  1932   0018C8  013D               	movlb	61	; () banked
  1933   0018CA  6FEA               	movwf	234,b	;volatile
  1934   0018CC                     l128:
  1935   0018CC  0139               	movlb	57	; () banked
  1936   0018CE  A9A3               	btfss	163,4,b	;volatile
  1937   0018D0  EF6C  F00C         	goto	u1101
  1938   0018D4  EF6E  F00C         	goto	u1100
  1939   0018D8                     u1101:
  1940   0018D8  EF66  F00C         	goto	l128
  1941   0018DC                     u1100:
  1942   0018DC                     
  1943                           ; BSR set to: 57
  1944                           ;EX3I2C26K83.c: 111:     U1TXB = '\n';
  1945   0018DC  0E0A               	movlw	10
  1946   0018DE  013D               	movlb	61	; () banked
  1947   0018E0  6FEA               	movwf	234,b	;volatile
  1948   0018E2                     
  1949                           ; BSR set to: 61
  1950   0018E2  0012               	return		;funcret
  1951   0018E4                     __end_of_uart_send_string:
  1952                           	callstack 0
  1953                           
  1954 ;; *************** function _sprintf *****************
  1955 ;; Defined at:
  1956 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\nf_sprintf.c"
  1957 ;; Parameters:    Size  Location     Type
  1958 ;;  s               1   44[COMRAM] PTR unsigned char 
  1959 ;;		 -> main@buffer(6), 
  1960 ;;  fmt             1   45[COMRAM] PTR const unsigned char 
  1961 ;;		 -> STR_1(10), 
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;  f              11   51[COMRAM] struct _IO_FILE
  1964 ;;  ret             2    0        int 
  1965 ;;  ap              1   50[COMRAM] PTR void [1]
  1966 ;;		 -> ?_sprintf(2), 
  1967 ;; Return value:  Size  Location     Type
  1968 ;;                  2   44[COMRAM] int 
  1969 ;; Registers used:
  1970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1971 ;; Tracked objects:
  1972 ;;		On entry : 0/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1976 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1977 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1979 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1980 ;;Total ram usage:       18 bytes
  1981 ;; Hardware stack levels used: 1
  1982 ;; Hardware stack levels required when called: 6
  1983 ;; This function calls:
  1984 ;;		_vfprintf
  1985 ;; This function is called by:
  1986 ;;		_main
  1987 ;; This function uses a non-reentrant model
  1988 ;;
  1989                           
  1990                           	psect	text2
  1991   001AC0                     __ptext2:
  1992                           	callstack 0
  1993   001AC0                     _sprintf:
  1994                           	callstack 24
  1995   001AC0  0E2F               	movlw	low (?_sprintf+2)
  1996   001AC2  6E33               	movwf	sprintf@ap^0,c
  1997   001AC4  C02D  F034         	movff	sprintf@s,sprintf@f
  1998   001AC8  6A37               	clrf	(sprintf@f+3)^0,c
  1999   001ACA  0E00               	movlw	0
  2000   001ACC  6E36               	movwf	(sprintf@f+2)^0,c
  2001   001ACE  6A3E               	clrf	(sprintf@f+10)^0,c
  2002   001AD0  0E00               	movlw	0
  2003   001AD2  6E3D               	movwf	(sprintf@f+9)^0,c
  2004   001AD4  0E34               	movlw	low sprintf@f
  2005   001AD6  6E29               	movwf	vfprintf@fp^0,c
  2006   001AD8  C02E  F02A         	movff	sprintf@fmt,vfprintf@fmt
  2007   001ADC  0E33               	movlw	low sprintf@ap
  2008   001ADE  6E2B               	movwf	vfprintf@ap^0,c
  2009   001AE0  ECD3  F00C         	call	_vfprintf	;wreg free
  2010   001AE4  502D               	movf	sprintf@s^0,w,c
  2011   001AE6  2436               	addwf	(sprintf@f+2)^0,w,c
  2012   001AE8  6ED9               	movwf	fsr2l,c
  2013   001AEA  6ADA               	clrf	fsr2h,c
  2014   001AEC  6ADF               	clrf	indf2,c
  2015   001AEE  0012               	return		;funcret
  2016   001AF0                     __end_of_sprintf:
  2017                           	callstack 0
  2018                           
  2019 ;; *************** function _vfprintf *****************
  2020 ;; Defined at:
  2021 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c"
  2022 ;; Parameters:    Size  Location     Type
  2023 ;;  fp              1   40[COMRAM] PTR struct _IO_FILE
  2024 ;;		 -> sprintf@f(11), 
  2025 ;;  fmt             1   41[COMRAM] PTR const unsigned char 
  2026 ;;		 -> STR_1(10), 
  2027 ;;  ap              1   42[COMRAM] PTR PTR void 
  2028 ;;		 -> sprintf@ap(1), 
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;  cfmt            1   43[COMRAM] PTR unsigned char 
  2031 ;;		 -> STR_1(10), 
  2032 ;; Return value:  Size  Location     Type
  2033 ;;                  2   40[COMRAM] int 
  2034 ;; Registers used:
  2035 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2036 ;; Tracked objects:
  2037 ;;		On entry : 0/0
  2038 ;;		On exit  : 0/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2041 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2042 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2044 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2045 ;;Total ram usage:        4 bytes
  2046 ;; Hardware stack levels used: 1
  2047 ;; Hardware stack levels required when called: 5
  2048 ;; This function calls:
  2049 ;;		_vfpfcnvrt
  2050 ;; This function is called by:
  2051 ;;		_sprintf
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055                           	psect	text3
  2056   0019A6                     __ptext3:
  2057                           	callstack 0
  2058   0019A6                     _vfprintf:
  2059                           	callstack 24
  2060   0019A6                     
  2061                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.10\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2062   0019A6  C02A  F02C         	movff	vfprintf@fmt,vfprintf@cfmt
  2063                           
  2064                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2065   0019AA  EFDF  F00C         	goto	l1761
  2066   0019AE                     l1759:
  2067                           
  2068                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2069   0019AE  C029  F020         	movff	vfprintf@fp,vfpfcnvrt@fp
  2070   0019B2  0E2C               	movlw	low vfprintf@cfmt
  2071   0019B4  6E21               	movwf	vfpfcnvrt@fmt^0,c
  2072   0019B6  C02B  F022         	movff	vfprintf@ap,vfpfcnvrt@ap
  2073   0019BA  ECB9  F008         	call	_vfpfcnvrt	;wreg free
  2074   0019BE                     l1761:
  2075                           
  2076                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2077   0019BE  0060  F0B3  FFF6   	movff	vfprintf@cfmt,tblptrl
  2078   0019C4                     	if	1	;There is more than 1 active tblptr byte
  2079   0019C4  0E10               	movlw	high __smallconst
  2080   0019C6  6EF7               	movwf	tblptrh,c
  2081   0019C8                     	endif
  2082   0019C8                     	if	0	;tblptru may be non-zero
  2083   0019C8                     	endif
  2084   0019C8                     	if	0	;tblptru may be non-zero
  2085   0019C8                     	endif
  2086   0019C8  0008               	tblrd		*
  2087   0019CA  50F5               	movf	tablat,w,c
  2088   0019CC  0900               	iorlw	0
  2089   0019CE  A4D8               	btfss	status,2,c
  2090   0019D0  EFEC  F00C         	goto	u1031
  2091   0019D4  EFEE  F00C         	goto	u1030
  2092   0019D8                     u1031:
  2093   0019D8  EFD7  F00C         	goto	l1759
  2094   0019DC                     u1030:
  2095   0019DC                     
  2096                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2097   0019DC  6A2A               	clrf	(?_vfprintf+1)^0,c
  2098   0019DE  0E00               	movlw	0
  2099   0019E0  6E29               	movwf	?_vfprintf^0,c
  2100   0019E2  0012               	return		;funcret
  2101   0019E4                     __end_of_vfprintf:
  2102                           	callstack 0
  2103                           
  2104 ;; *************** function _vfpfcnvrt *****************
  2105 ;; Defined at:
  2106 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;  fp              1   31[COMRAM] PTR struct _IO_FILE
  2109 ;;		 -> sprintf@f(11), 
  2110 ;;  fmt             1   32[COMRAM] PTR PTR unsigned char 
  2111 ;;		 -> vfprintf@cfmt(1), 
  2112 ;;  ap              1   33[COMRAM] PTR PTR void 
  2113 ;;		 -> sprintf@ap(1), 
  2114 ;; Auto vars:     Size  Location     Type
  2115 ;;  convarg         4   34[COMRAM] struct .
  2116 ;;  cp              1   39[COMRAM] PTR unsigned char 
  2117 ;;		 -> STR_1(10), 
  2118 ;;  done            1   38[COMRAM] _Bool 
  2119 ;;  c               1    0        unsigned char 
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  1    wreg      void 
  2122 ;; Registers used:
  2123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2129 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2130 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2132 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2133 ;;Total ram usage:        9 bytes
  2134 ;; Hardware stack levels used: 1
  2135 ;; Hardware stack levels required when called: 4
  2136 ;; This function calls:
  2137 ;;		_dtoa
  2138 ;;		_fputc
  2139 ;;		_read_prec_or_width
  2140 ;; This function is called by:
  2141 ;;		_vfprintf
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145                           	psect	text4
  2146   001172                     __ptext4:
  2147                           	callstack 0
  2148   001172                     _vfpfcnvrt:
  2149                           	callstack 24
  2150   001172                     
  2151                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2152   001172  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2153   001174  6ED9               	movwf	fsr2l,c
  2154   001176  6ADA               	clrf	fsr2h,c
  2155   001178  006F FF7F FFF6     	movff	indf2,tblptrl
  2156   00117E                     	if	1	;There is more than 1 active tblptr byte
  2157   00117E  0E10               	movlw	high __smallconst
  2158   001180  6EF7               	movwf	tblptrh,c
  2159   001182                     	endif
  2160   001182                     	if	0	;tblptru may be non-zero
  2161   001182                     	endif
  2162   001182                     	if	0	;tblptru may be non-zero
  2163   001182                     	endif
  2164   001182  0008               	tblrd		*
  2165   001184  50F5               	movf	tablat,w,c
  2166   001186  0A25               	xorlw	37
  2167   001188  A4D8               	btfss	status,2,c
  2168   00118A  EFC9  F008         	goto	u981
  2169   00118E  EFCB  F008         	goto	u980
  2170   001192                     u981:
  2171   001192  EF58  F009         	goto	l1751
  2172   001196                     u980:
  2173   001196                     
  2174                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2175   001196  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2176   001198  6ED9               	movwf	fsr2l,c
  2177   00119A  6ADA               	clrf	fsr2h,c
  2178   00119C  2ADF               	incf	indf2,f,c
  2179   00119E                     
  2180                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2181   00119E  6A4B               	clrf	(_width+1)^0,c
  2182   0011A0  0E00               	movlw	0
  2183   0011A2  6E4A               	movwf	_width^0,c
  2184   0011A4  C04A  F04E         	movff	_width,_flags
  2185   0011A8                     
  2186                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2187   0011A8  684C               	setf	_prec^0,c
  2188   0011AA  684D               	setf	(_prec+1)^0,c
  2189   0011AC                     
  2190                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  2191   0011AC  6A27               	clrf	vfpfcnvrt@done^0,c
  2192                           
  2193                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2194   0011AE  EFF4  F008         	goto	l1725
  2195   0011B2                     l1715:
  2196                           
  2197                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  2198   0011B2  824E               	bsf	_flags^0,1,c
  2199   0011B4                     
  2200                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  2201   0011B4  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2202   0011B6  6ED9               	movwf	fsr2l,c
  2203   0011B8  6ADA               	clrf	fsr2h,c
  2204   0011BA  2ADF               	incf	indf2,f,c
  2205                           
  2206                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  2207   0011BC  EFF4  F008         	goto	l1725
  2208   0011C0                     l1719:
  2209                           
  2210                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  2211   0011C0  0E01               	movlw	1
  2212   0011C2  6E27               	movwf	vfpfcnvrt@done^0,c
  2213                           
  2214                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  2215   0011C4  EFF4  F008         	goto	l1725
  2216   0011C8                     l1723:
  2217   0011C8  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2218   0011CA  6ED9               	movwf	fsr2l,c
  2219   0011CC  6ADA               	clrf	fsr2h,c
  2220   0011CE  006F FF7F FFF6     	movff	indf2,tblptrl
  2221   0011D4                     	if	1	;There is more than 1 active tblptr byte
  2222   0011D4  0E10               	movlw	high __smallconst
  2223   0011D6  6EF7               	movwf	tblptrh,c
  2224   0011D8                     	endif
  2225   0011D8                     	if	0	;tblptru may be non-zero
  2226   0011D8                     	endif
  2227   0011D8                     	if	0	;tblptru may be non-zero
  2228   0011D8                     	endif
  2229   0011D8  0008               	tblrd		*
  2230   0011DA  50F5               	movf	tablat,w,c
  2231                           
  2232                           ; Switch size 1, requested type "simple"
  2233                           ; Number of cases is 1, Range of values is 48 to 48
  2234                           ; switch strategies available:
  2235                           ; Name         Instructions Cycles
  2236                           ; simple_byte            4     3 (average)
  2237                           ;	Chosen strategy is simple_byte
  2238   0011DC  0A30               	xorlw	48	; case 48
  2239   0011DE  B4D8               	btfsc	status,2,c
  2240   0011E0  EFD9  F008         	goto	l1715
  2241   0011E4  EFE0  F008         	goto	l1719
  2242   0011E8                     l1725:
  2243                           
  2244                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2245   0011E8  5027               	movf	vfpfcnvrt@done^0,w,c
  2246   0011EA  B4D8               	btfsc	status,2,c
  2247   0011EC  EFFA  F008         	goto	u991
  2248   0011F0  EFFC  F008         	goto	u990
  2249   0011F4                     u991:
  2250   0011F4  EFE4  F008         	goto	l1723
  2251   0011F8                     u990:
  2252   0011F8                     
  2253                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  2254   0011F8  C021  F001         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2255   0011FC  C022  F002         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2256   001200  EC79  F00A         	call	_read_prec_or_width	;wreg free
  2257   001204  C001  F04A         	movff	?_read_prec_or_width,_width
  2258   001208  C002  F04B         	movff	?_read_prec_or_width+1,_width+1
  2259   00120C                     
  2260                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  2261   00120C  BE4B               	btfsc	(_width+1)^0,7,c
  2262   00120E  EF0D  F009         	goto	u1000
  2263   001212  EF0B  F009         	goto	u1001
  2264   001216                     u1001:
  2265   001216  EF12  F009         	goto	l1733
  2266   00121A                     u1000:
  2267   00121A                     
  2268                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  2269   00121A  804E               	bsf	_flags^0,0,c
  2270                           
  2271                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  2272   00121C  6C4A               	negf	_width^0,c
  2273   00121E  1E4B               	comf	(_width+1)^0,f,c
  2274   001220  B0D8               	btfsc	status,0,c
  2275   001222  2A4B               	incf	(_width+1)^0,f,c
  2276   001224                     l1733:
  2277                           
  2278                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2279   001224  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2280   001226  6ED9               	movwf	fsr2l,c
  2281   001228  6ADA               	clrf	fsr2h,c
  2282   00122A  50DF               	movf	indf2,w,c
  2283   00122C  6E28               	movwf	vfpfcnvrt@cp^0,c
  2284   00122E                     
  2285                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2286   00122E  0060  F0A3  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2287   001234                     	if	1	;There is more than 1 active tblptr byte
  2288   001234  0E10               	movlw	high __smallconst
  2289   001236  6EF7               	movwf	tblptrh,c
  2290   001238                     	endif
  2291   001238                     	if	0	;tblptru may be non-zero
  2292   001238                     	endif
  2293   001238                     	if	0	;tblptru may be non-zero
  2294   001238                     	endif
  2295   001238  0008               	tblrd		*
  2296   00123A  50F5               	movf	tablat,w,c
  2297   00123C  0A64               	xorlw	100
  2298   00123E  B4D8               	btfsc	status,2,c
  2299   001240  EF24  F009         	goto	u1011
  2300   001244  EF26  F009         	goto	u1010
  2301   001248                     u1011:
  2302   001248  EF35  F009         	goto	l1739
  2303   00124C                     u1010:
  2304   00124C  0060  F0A3  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2305   001252                     	if	1	;There is more than 1 active tblptr byte
  2306   001252  0E10               	movlw	high __smallconst
  2307   001254  6EF7               	movwf	tblptrh,c
  2308   001256                     	endif
  2309   001256                     	if	0	;tblptru may be non-zero
  2310   001256                     	endif
  2311   001256                     	if	0	;tblptru may be non-zero
  2312   001256                     	endif
  2313   001256  0008               	tblrd		*
  2314   001258  50F5               	movf	tablat,w,c
  2315   00125A  0A69               	xorlw	105
  2316   00125C  A4D8               	btfss	status,2,c
  2317   00125E  EF33  F009         	goto	u1021
  2318   001262  EF35  F009         	goto	u1020
  2319   001266                     u1021:
  2320   001266  EF52  F009         	goto	l1747
  2321   00126A                     u1020:
  2322   00126A                     l1739:
  2323                           
  2324                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2325   00126A  5022               	movf	vfpfcnvrt@ap^0,w,c
  2326   00126C  6ED9               	movwf	fsr2l,c
  2327   00126E  6ADA               	clrf	fsr2h,c
  2328   001270  0E02               	movlw	2
  2329   001272  26DF               	addwf	indf2,f,c
  2330   001274  5CDF               	subwf	indf2,w,c
  2331   001276  6ED9               	movwf	fsr2l,c
  2332   001278  6ADA               	clrf	fsr2h,c
  2333   00127A  006F FF78  F023    	movff	postinc2,vfpfcnvrt@convarg
  2334   001280  006F FF78  F024    	movff	postinc2,vfpfcnvrt@convarg+1
  2335   001286                     
  2336                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2337   001286  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2338   001288  6ED9               	movwf	fsr2l,c
  2339   00128A  6ADA               	clrf	fsr2h,c
  2340   00128C  2828               	incf	vfpfcnvrt@cp^0,w,c
  2341   00128E  6EDF               	movwf	indf2,c
  2342   001290                     
  2343                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2344   001290  C020  F015         	movff	vfpfcnvrt@fp,dtoa@fp
  2345   001294  C023  F016         	movff	vfpfcnvrt@convarg,dtoa@d
  2346   001298  C024  F017         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2347   00129C  EC6B  F009         	call	_dtoa	;wreg free
  2348   0012A0  EF6A  F009         	goto	l1025
  2349   0012A4                     l1747:
  2350                           
  2351                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2352   0012A4  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2353   0012A6  6ED9               	movwf	fsr2l,c
  2354   0012A8  6ADA               	clrf	fsr2h,c
  2355   0012AA  2ADF               	incf	indf2,f,c
  2356   0012AC  EF6A  F009         	goto	l1025
  2357   0012B0                     l1751:
  2358                           
  2359                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2360   0012B0  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2361   0012B2  6ED9               	movwf	fsr2l,c
  2362   0012B4  6ADA               	clrf	fsr2h,c
  2363   0012B6  006F FF7F FFF6     	movff	indf2,tblptrl
  2364   0012BC                     	if	1	;There is more than 1 active tblptr byte
  2365   0012BC  0E10               	movlw	high __smallconst
  2366   0012BE  6EF7               	movwf	tblptrh,c
  2367   0012C0                     	endif
  2368   0012C0                     	if	0	;tblptru may be non-zero
  2369   0012C0                     	endif
  2370   0012C0                     	if	0	;tblptru may be non-zero
  2371   0012C0                     	endif
  2372   0012C0  0008               	tblrd		*
  2373   0012C2  50F5               	movf	tablat,w,c
  2374   0012C4  6E01               	movwf	fputc@c^0,c
  2375   0012C6  6A02               	clrf	(fputc@c+1)^0,c
  2376   0012C8  C020  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2377   0012CC  EC27  F00B         	call	_fputc	;wreg free
  2378   0012D0  EF52  F009         	goto	l1747
  2379   0012D4                     l1025:
  2380   0012D4  0012               	return		;funcret
  2381   0012D6                     __end_of_vfpfcnvrt:
  2382                           	callstack 0
  2383                           
  2384 ;; *************** function _read_prec_or_width *****************
  2385 ;; Defined at:
  2386 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;  fmt             1    0[COMRAM] PTR PTR const unsigned c
  2389 ;;		 -> vfprintf@cfmt(1), 
  2390 ;;  ap              1    1[COMRAM] PTR PTR void [1]
  2391 ;;		 -> sprintf@ap(1), 
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;  c               1    4[COMRAM] unsigned char 
  2394 ;;  n               2    5[COMRAM] int 
  2395 ;; Return value:  Size  Location     Type
  2396 ;;                  2    0[COMRAM] int 
  2397 ;; Registers used:
  2398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2404 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2405 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2406 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2407 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2408 ;;Total ram usage:        7 bytes
  2409 ;; Hardware stack levels used: 1
  2410 ;; This function calls:
  2411 ;;		Nothing
  2412 ;; This function is called by:
  2413 ;;		_vfpfcnvrt
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417                           	psect	text5
  2418   0014F2                     __ptext5:
  2419                           	callstack 0
  2420   0014F2                     _read_prec_or_width:
  2421                           	callstack 27
  2422   0014F2                     
  2423                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2424   0014F2  6A07               	clrf	(read_prec_or_width@n+1)^0,c
  2425   0014F4  0E00               	movlw	0
  2426   0014F6  6E06               	movwf	read_prec_or_width@n^0,c
  2427   0014F8                     
  2428                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2429   0014F8  5001               	movf	read_prec_or_width@fmt^0,w,c
  2430   0014FA  6ED9               	movwf	fsr2l,c
  2431   0014FC  6ADA               	clrf	fsr2h,c
  2432   0014FE  006F FF7F FFF6     	movff	indf2,tblptrl
  2433   001504                     	if	1	;There is more than 1 active tblptr byte
  2434   001504  0E10               	movlw	high __smallconst
  2435   001506  6EF7               	movwf	tblptrh,c
  2436   001508                     	endif
  2437   001508                     	if	0	;tblptru may be non-zero
  2438   001508                     	endif
  2439   001508                     	if	0	;tblptru may be non-zero
  2440   001508                     	endif
  2441   001508  0008               	tblrd		*
  2442   00150A  50F5               	movf	tablat,w,c
  2443   00150C  0A2A               	xorlw	42
  2444   00150E  A4D8               	btfss	status,2,c
  2445   001510  EF8C  F00A         	goto	u961
  2446   001514  EF8E  F00A         	goto	u960
  2447   001518                     u961:
  2448   001518  EFB7  F00A         	goto	l1703
  2449   00151C                     u960:
  2450   00151C                     
  2451                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2452   00151C  5001               	movf	read_prec_or_width@fmt^0,w,c
  2453   00151E  6ED9               	movwf	fsr2l,c
  2454   001520  6ADA               	clrf	fsr2h,c
  2455   001522  2ADF               	incf	indf2,f,c
  2456   001524                     
  2457                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2458   001524  5002               	movf	read_prec_or_width@ap^0,w,c
  2459   001526  6ED9               	movwf	fsr2l,c
  2460   001528  6ADA               	clrf	fsr2h,c
  2461   00152A  0E02               	movlw	2
  2462   00152C  26DF               	addwf	indf2,f,c
  2463   00152E  5CDF               	subwf	indf2,w,c
  2464   001530  6ED9               	movwf	fsr2l,c
  2465   001532  6ADA               	clrf	fsr2h,c
  2466   001534  006F FF78  F006    	movff	postinc2,read_prec_or_width@n
  2467   00153A  006F FF78  F007    	movff	postinc2,read_prec_or_width@n+1
  2468                           
  2469                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2470   001540  EFCB  F00A         	goto	l1006
  2471   001544                     l1699:
  2472                           
  2473                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2474   001544  0E0A               	movlw	10
  2475   001546  0206               	mulwf	read_prec_or_width@n^0,c
  2476   001548  006F FFCC  F003    	movff	prodl,??_read_prec_or_width
  2477   00154E  006F FFD0  F004    	movff	prodh,??_read_prec_or_width+1
  2478   001554  0207               	mulwf	(read_prec_or_width@n+1)^0,c
  2479   001556  50F3               	movf	prodl,w,c
  2480   001558  2604               	addwf	(??_read_prec_or_width+1)^0,f,c
  2481   00155A  5005               	movf	read_prec_or_width@c^0,w,c
  2482   00155C  2403               	addwf	??_read_prec_or_width^0,w,c
  2483   00155E  6E06               	movwf	read_prec_or_width@n^0,c
  2484   001560  0E00               	movlw	0
  2485   001562  2004               	addwfc	(??_read_prec_or_width+1)^0,w,c
  2486   001564  6E07               	movwf	(read_prec_or_width@n+1)^0,c
  2487   001566                     
  2488                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2489   001566  5001               	movf	read_prec_or_width@fmt^0,w,c
  2490   001568  6ED9               	movwf	fsr2l,c
  2491   00156A  6ADA               	clrf	fsr2h,c
  2492   00156C  2ADF               	incf	indf2,f,c
  2493   00156E                     l1703:
  2494                           
  2495                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2496   00156E  5001               	movf	read_prec_or_width@fmt^0,w,c
  2497   001570  6ED9               	movwf	fsr2l,c
  2498   001572  6ADA               	clrf	fsr2h,c
  2499   001574  006F FF7F FFF6     	movff	indf2,tblptrl
  2500   00157A                     	if	1	;There is more than 1 active tblptr byte
  2501   00157A  0E10               	movlw	high __smallconst
  2502   00157C  6EF7               	movwf	tblptrh,c
  2503   00157E                     	endif
  2504   00157E                     	if	0	;tblptru may be non-zero
  2505   00157E                     	endif
  2506   00157E                     	if	0	;tblptru may be non-zero
  2507   00157E                     	endif
  2508   00157E  0008               	tblrd		*
  2509   001580  50F5               	movf	tablat,w,c
  2510   001582  0FD0               	addlw	208
  2511   001584  6E05               	movwf	read_prec_or_width@c^0,c
  2512   001586  0E09               	movlw	9
  2513   001588  6405               	cpfsgt	read_prec_or_width@c^0,c
  2514   00158A  EFC9  F00A         	goto	u971
  2515   00158E  EFCB  F00A         	goto	u970
  2516   001592                     u971:
  2517   001592  EFA2  F00A         	goto	l1699
  2518   001596                     u970:
  2519   001596                     l1006:
  2520                           
  2521                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2522   001596  C006  F001         	movff	read_prec_or_width@n,?_read_prec_or_width
  2523   00159A  C007  F002         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2524   00159E  0012               	return		;funcret
  2525   0015A0                     __end_of_read_prec_or_width:
  2526                           	callstack 0
  2527                           
  2528 ;; *************** function _dtoa *****************
  2529 ;; Defined at:
  2530 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;  fp              1   20[COMRAM] PTR struct _IO_FILE
  2533 ;;		 -> sprintf@f(11), 
  2534 ;;  d               2   21[COMRAM] int 
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;  i               2   29[COMRAM] int 
  2537 ;;  w               2   26[COMRAM] int 
  2538 ;;  s               1   28[COMRAM] unsigned char 
  2539 ;;  p               1   25[COMRAM] _Bool 
  2540 ;; Return value:  Size  Location     Type
  2541 ;;                  1    wreg      void 
  2542 ;; Registers used:
  2543 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2544 ;; Tracked objects:
  2545 ;;		On entry : 0/0
  2546 ;;		On exit  : 0/0
  2547 ;;		Unchanged: 0/0
  2548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2549 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2550 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2552 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2553 ;;Total ram usage:       11 bytes
  2554 ;; Hardware stack levels used: 1
  2555 ;; Hardware stack levels required when called: 3
  2556 ;; This function calls:
  2557 ;;		___awdiv
  2558 ;;		___awmod
  2559 ;;		_abs
  2560 ;;		_pad
  2561 ;; This function is called by:
  2562 ;;		_vfpfcnvrt
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           	psect	text6
  2567   0012D6                     __ptext6:
  2568                           	callstack 0
  2569   0012D6                     _dtoa:
  2570                           	callstack 24
  2571   0012D6                     
  2572                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  2573   0012D6  0E01               	movlw	1
  2574   0012D8  6E1A               	movwf	dtoa@p^0,c
  2575   0012DA                     
  2576                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  2577   0012DA  BE17               	btfsc	(dtoa@d+1)^0,7,c
  2578   0012DC  EF72  F009         	goto	u861
  2579   0012E0  EF75  F009         	goto	u860
  2580   0012E4                     u861:
  2581   0012E4  0E01               	movlw	1
  2582   0012E6  EF76  F009         	goto	u870
  2583   0012EA                     u860:
  2584   0012EA  0E00               	movlw	0
  2585   0012EC                     u870:
  2586   0012EC  6E1D               	movwf	dtoa@s^0,c
  2587   0012EE                     
  2588                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  2589   0012EE  C04A  F01B         	movff	_width,dtoa@w
  2590   0012F2  C04B  F01C         	movff	_width+1,dtoa@w+1
  2591   0012F6                     
  2592                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 536:     if (s
  2593   0012F6  501D               	movf	dtoa@s^0,w,c
  2594   0012F8  B4D8               	btfsc	status,2,c
  2595   0012FA  EF81  F009         	goto	u881
  2596   0012FE  EF83  F009         	goto	u880
  2597   001302                     u881:
  2598   001302  EF98  F009         	goto	l989
  2599   001306                     u880:
  2600   001306                     
  2601                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 541:         --w;
  2602   001306  061B               	decf	dtoa@w^0,f,c
  2603   001308  A0D8               	btfss	status,0,c
  2604   00130A  061C               	decf	(dtoa@w+1)^0,f,c
  2605   00130C                     
  2606                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  2607   00130C  501D               	movf	dtoa@s^0,w,c
  2608   00130E  A4D8               	btfss	status,2,c
  2609   001310  EF8C  F009         	goto	u891
  2610   001314  EF8E  F009         	goto	u890
  2611   001318                     u891:
  2612   001318  EF93  F009         	goto	l1655
  2613   00131C                     u890:
  2614   00131C  6A19               	clrf	(_dtoa$1081+1)^0,c
  2615   00131E  0E2B               	movlw	43
  2616   001320  6E18               	movwf	_dtoa$1081^0,c
  2617   001322  EF96  F009         	goto	l1657
  2618   001326                     l1655:
  2619   001326  6A19               	clrf	(_dtoa$1081+1)^0,c
  2620   001328  0E2D               	movlw	45
  2621   00132A  6E18               	movwf	_dtoa$1081^0,c
  2622   00132C                     l1657:
  2623   00132C  C018  F01D         	movff	_dtoa$1081,dtoa@s
  2624   001330                     l989:
  2625                           
  2626                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  2627   001330  6A1F               	clrf	(dtoa@i+1)^0,c
  2628   001332  0E1F               	movlw	31
  2629   001334  6E1E               	movwf	dtoa@i^0,c
  2630   001336                     
  2631                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  2632   001336  0100               	movlb	0	; () banked
  2633   001338  6B7F               	clrf	(_dbuf+31)& (0+255),b
  2634                           
  2635                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  2636   00133A  EFC9  F009         	goto	l1671
  2637   00133E                     l1661:
  2638                           
  2639                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 564:         --i;
  2640   00133E  061E               	decf	dtoa@i^0,f,c
  2641   001340  A0D8               	btfss	status,0,c
  2642   001342  061F               	decf	(dtoa@i+1)^0,f,c
  2643   001344                     
  2644                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2645   001344  501E               	movf	dtoa@i^0,w,c
  2646   001346  0F60               	addlw	low _dbuf
  2647   001348  6ED9               	movwf	fsr2l,c
  2648   00134A  6ADA               	clrf	fsr2h,c
  2649   00134C  C016  F001         	movff	dtoa@d,___awmod@dividend
  2650   001350  C017  F002         	movff	dtoa@d+1,___awmod@dividend+1
  2651   001354  6A04               	clrf	(___awmod@divisor+1)^0,c
  2652   001356  0E0A               	movlw	10
  2653   001358  6E03               	movwf	___awmod@divisor^0,c
  2654   00135A  ECD0  F00A         	call	___awmod	;wreg free
  2655   00135E  C001  F007         	movff	?___awmod,abs@a
  2656   001362  C002  F008         	movff	?___awmod+1,abs@a+1
  2657   001366  EC46  F00D         	call	_abs	;wreg free
  2658   00136A  5007               	movf	?_abs^0,w,c
  2659   00136C  0F30               	addlw	48
  2660   00136E  6EDF               	movwf	indf2,c
  2661   001370                     
  2662                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  2663   001370  6A1A               	clrf	dtoa@p^0,c
  2664   001372                     
  2665                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 571:         --w;
  2666   001372  061B               	decf	dtoa@w^0,f,c
  2667   001374  A0D8               	btfss	status,0,c
  2668   001376  061C               	decf	(dtoa@w+1)^0,f,c
  2669   001378                     
  2670                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  2671   001378  C016  F001         	movff	dtoa@d,___awdiv@dividend
  2672   00137C  C017  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  2673   001380  6A04               	clrf	(___awdiv@divisor+1)^0,c
  2674   001382  0E0A               	movlw	10
  2675   001384  6E03               	movwf	___awdiv@divisor^0,c
  2676   001386  EC19  F00A         	call	___awdiv	;wreg free
  2677   00138A  C001  F016         	movff	?___awdiv,dtoa@d
  2678   00138E  C002  F017         	movff	?___awdiv+1,dtoa@d+1
  2679   001392                     l1671:
  2680                           
  2681                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  2682   001392  BE1F               	btfsc	(dtoa@i+1)^0,7,c
  2683   001394  EFD4  F009         	goto	u901
  2684   001398  501F               	movf	(dtoa@i+1)^0,w,c
  2685   00139A  E108               	bnz	u900
  2686   00139C  041E               	decf	dtoa@i^0,w,c
  2687   00139E  A0D8               	btfss	status,0,c
  2688   0013A0  EFD4  F009         	goto	u901
  2689   0013A4  EFD6  F009         	goto	u900
  2690   0013A8                     u901:
  2691   0013A8  EFFB  F009         	goto	l1681
  2692   0013AC                     u900:
  2693   0013AC  5016               	movf	dtoa@d^0,w,c
  2694   0013AE  1017               	iorwf	(dtoa@d+1)^0,w,c
  2695   0013B0  A4D8               	btfss	status,2,c
  2696   0013B2  EFDD  F009         	goto	u911
  2697   0013B6  EFDF  F009         	goto	u910
  2698   0013BA                     u911:
  2699   0013BA  EF9F  F009         	goto	l1661
  2700   0013BE                     u910:
  2701   0013BE  501A               	movf	dtoa@p^0,w,c
  2702   0013C0  A4D8               	btfss	status,2,c
  2703   0013C2  EFE5  F009         	goto	u921
  2704   0013C6  EFE7  F009         	goto	u920
  2705   0013CA                     u921:
  2706   0013CA  EF9F  F009         	goto	l1661
  2707   0013CE                     u920:
  2708   0013CE  BE1C               	btfsc	(dtoa@w+1)^0,7,c
  2709   0013D0  EFF2  F009         	goto	u931
  2710   0013D4  501C               	movf	(dtoa@w+1)^0,w,c
  2711   0013D6  E108               	bnz	u930
  2712   0013D8  041B               	decf	dtoa@w^0,w,c
  2713   0013DA  A0D8               	btfss	status,0,c
  2714   0013DC  EFF2  F009         	goto	u931
  2715   0013E0  EFF4  F009         	goto	u930
  2716   0013E4                     u931:
  2717   0013E4  EFFB  F009         	goto	l1681
  2718   0013E8                     u930:
  2719   0013E8  B24E               	btfsc	_flags^0,1,c
  2720   0013EA  EFF9  F009         	goto	u941
  2721   0013EE  EFFB  F009         	goto	u940
  2722   0013F2                     u941:
  2723   0013F2  EF9F  F009         	goto	l1661
  2724   0013F6                     u940:
  2725   0013F6                     l1681:
  2726                           
  2727                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  2728   0013F6  501D               	movf	dtoa@s^0,w,c
  2729   0013F8  B4D8               	btfsc	status,2,c
  2730   0013FA  EF01  F00A         	goto	u951
  2731   0013FE  EF03  F00A         	goto	u950
  2732   001402                     u951:
  2733   001402  EF0D  F00A         	goto	l1687
  2734   001406                     u950:
  2735   001406                     
  2736                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 577:         --i;
  2737   001406  061E               	decf	dtoa@i^0,f,c
  2738   001408  A0D8               	btfss	status,0,c
  2739   00140A  061F               	decf	(dtoa@i+1)^0,f,c
  2740   00140C                     
  2741                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  2742   00140C  501E               	movf	dtoa@i^0,w,c
  2743   00140E  0F60               	addlw	low _dbuf
  2744   001410  6ED9               	movwf	fsr2l,c
  2745   001412  6ADA               	clrf	fsr2h,c
  2746   001414  0060  F077  FFDF   	movff	dtoa@s,indf2
  2747   00141A                     l1687:
  2748                           
  2749                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2750   00141A  C015  F00E         	movff	dtoa@fp,pad@fp
  2751   00141E  501E               	movf	dtoa@i^0,w,c
  2752   001420  0F60               	addlw	low _dbuf
  2753   001422  6E0F               	movwf	pad@buf^0,c
  2754   001424  C01B  F010         	movff	dtoa@w,pad@p
  2755   001428  C01C  F011         	movff	dtoa@w+1,pad@p+1
  2756   00142C  EC7D  F00B         	call	_pad	;wreg free
  2757   001430  0012               	return		;funcret
  2758   001432                     __end_of_dtoa:
  2759                           	callstack 0
  2760                           
  2761 ;; *************** function _pad *****************
  2762 ;; Defined at:
  2763 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  2766 ;;		 -> sprintf@f(11), 
  2767 ;;  buf             1   14[COMRAM] PTR unsigned char 
  2768 ;;		 -> dbuf(32), 
  2769 ;;  p               2   15[COMRAM] int 
  2770 ;; Auto vars:     Size  Location     Type
  2771 ;;  i               2   18[COMRAM] int 
  2772 ;; Return value:  Size  Location     Type
  2773 ;;                  1    wreg      void 
  2774 ;; Registers used:
  2775 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2776 ;; Tracked objects:
  2777 ;;		On entry : 0/0
  2778 ;;		On exit  : 0/0
  2779 ;;		Unchanged: 0/0
  2780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2781 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2782 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2783 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2784 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2785 ;;Total ram usage:        7 bytes
  2786 ;; Hardware stack levels used: 1
  2787 ;; Hardware stack levels required when called: 2
  2788 ;; This function calls:
  2789 ;;		_fputc
  2790 ;;		_fputs
  2791 ;; This function is called by:
  2792 ;;		_dtoa
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796                           	psect	text7
  2797   0016FA                     __ptext7:
  2798                           	callstack 0
  2799   0016FA                     _pad:
  2800                           	callstack 24
  2801   0016FA                     
  2802                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  2803   0016FA  A04E               	btfss	_flags^0,0,c
  2804   0016FC  EF82  F00B         	goto	u811
  2805   001700  EF84  F00B         	goto	u810
  2806   001704                     u811:
  2807   001704  EF8A  F00B         	goto	l1625
  2808   001708                     u810:
  2809   001708                     
  2810                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  2811   001708  C00F  F009         	movff	pad@buf,fputs@s
  2812   00170C  C00E  F00A         	movff	pad@fp,fputs@fp
  2813   001710  ECF2  F00C         	call	_fputs	;wreg free
  2814   001714                     l1625:
  2815                           
  2816                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  2817   001714  BE11               	btfsc	(pad@p+1)^0,7,c
  2818   001716  EF91  F00B         	goto	u820
  2819   00171A  EF8F  F00B         	goto	u821
  2820   00171E                     u821:
  2821   00171E  EF94  F00B         	goto	l981
  2822   001722                     u820:
  2823   001722                     
  2824                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  2825   001722  6A11               	clrf	(pad@p+1)^0,c
  2826   001724  0E00               	movlw	0
  2827   001726  6E10               	movwf	pad@p^0,c
  2828   001728                     l981:
  2829                           
  2830                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  2831   001728  6A14               	clrf	(pad@i+1)^0,c
  2832   00172A  0E00               	movlw	0
  2833   00172C  6E13               	movwf	pad@i^0,c
  2834                           
  2835                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2836   00172E  EFA2  F00B         	goto	l1633
  2837   001732                     l1629:
  2838                           
  2839                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  2840   001732  6A02               	clrf	(fputc@c+1)^0,c
  2841   001734  0E20               	movlw	32
  2842   001736  6E01               	movwf	fputc@c^0,c
  2843   001738  C00E  F003         	movff	pad@fp,fputc@fp
  2844   00173C  EC27  F00B         	call	_fputc	;wreg free
  2845   001740                     
  2846                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 211:         ++i;
  2847   001740  4A13               	infsnz	pad@i^0,f,c
  2848   001742  2A14               	incf	(pad@i+1)^0,f,c
  2849   001744                     l1633:
  2850                           
  2851                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2852   001744  5010               	movf	pad@p^0,w,c
  2853   001746  5C13               	subwf	pad@i^0,w,c
  2854   001748  5014               	movf	(pad@i+1)^0,w,c
  2855   00174A  0A80               	xorlw	128
  2856   00174C  6E12               	movwf	??_pad^0,c
  2857   00174E  5011               	movf	(pad@p+1)^0,w,c
  2858   001750  0A80               	xorlw	128
  2859   001752  5812               	subwfb	??_pad^0,w,c
  2860   001754  A0D8               	btfss	status,0,c
  2861   001756  EFAF  F00B         	goto	u831
  2862   00175A  EFB1  F00B         	goto	u830
  2863   00175E                     u831:
  2864   00175E  EF99  F00B         	goto	l1629
  2865   001762                     u830:
  2866   001762                     
  2867                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  2868   001762  B04E               	btfsc	_flags^0,0,c
  2869   001764  EFB6  F00B         	goto	u841
  2870   001768  EFB8  F00B         	goto	u840
  2871   00176C                     u841:
  2872   00176C  EFBE  F00B         	goto	l986
  2873   001770                     u840:
  2874   001770                     
  2875                           ;C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  2876   001770  C00F  F009         	movff	pad@buf,fputs@s
  2877   001774  C00E  F00A         	movff	pad@fp,fputs@fp
  2878   001778  ECF2  F00C         	call	_fputs	;wreg free
  2879   00177C                     l986:
  2880   00177C  0012               	return		;funcret
  2881   00177E                     __end_of_pad:
  2882                           	callstack 0
  2883                           
  2884 ;; *************** function _fputs *****************
  2885 ;; Defined at:
  2886 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\nf_fputs.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;  s               1    8[COMRAM] PTR const unsigned char 
  2889 ;;		 -> dbuf(32), 
  2890 ;;  fp              1    9[COMRAM] PTR struct _IO_FILE
  2891 ;;		 -> sprintf@f(11), 
  2892 ;; Auto vars:     Size  Location     Type
  2893 ;;  i               2   11[COMRAM] int 
  2894 ;;  c               1   10[COMRAM] unsigned char 
  2895 ;; Return value:  Size  Location     Type
  2896 ;;                  2    8[COMRAM] int 
  2897 ;; Registers used:
  2898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2899 ;; Tracked objects:
  2900 ;;		On entry : 0/0
  2901 ;;		On exit  : 0/0
  2902 ;;		Unchanged: 0/0
  2903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2904 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2905 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2907 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2908 ;;Total ram usage:        5 bytes
  2909 ;; Hardware stack levels used: 1
  2910 ;; Hardware stack levels required when called: 1
  2911 ;; This function calls:
  2912 ;;		_fputc
  2913 ;; This function is called by:
  2914 ;;		_pad
  2915 ;; This function uses a non-reentrant model
  2916 ;;
  2917                           
  2918                           	psect	text8
  2919   0019E4                     __ptext8:
  2920                           	callstack 0
  2921   0019E4                     _fputs:
  2922                           	callstack 24
  2923   0019E4  6A0D               	clrf	(fputs@i+1)^0,c
  2924   0019E6  0E00               	movlw	0
  2925   0019E8  6E0C               	movwf	fputs@i^0,c
  2926   0019EA  EF00  F00D         	goto	l1539
  2927   0019EE                     l1535:
  2928   0019EE  C00B  F001         	movff	fputs@c,fputc@c
  2929   0019F2  6A02               	clrf	(fputc@c+1)^0,c
  2930   0019F4  C00A  F003         	movff	fputs@fp,fputc@fp
  2931   0019F8  EC27  F00B         	call	_fputc	;wreg free
  2932   0019FC  4A0C               	infsnz	fputs@i^0,f,c
  2933   0019FE  2A0D               	incf	(fputs@i+1)^0,f,c
  2934   001A00                     l1539:
  2935   001A00  5009               	movf	fputs@s^0,w,c
  2936   001A02  240C               	addwf	fputs@i^0,w,c
  2937   001A04  6ED9               	movwf	fsr2l,c
  2938   001A06  6ADA               	clrf	fsr2h,c
  2939   001A08  50DF               	movf	indf2,w,c
  2940   001A0A  6E0B               	movwf	fputs@c^0,c
  2941   001A0C  500B               	movf	fputs@c^0,w,c
  2942   001A0E  A4D8               	btfss	status,2,c
  2943   001A10  EF0C  F00D         	goto	u681
  2944   001A14  EF0E  F00D         	goto	u680
  2945   001A18                     u681:
  2946   001A18  EFF7  F00C         	goto	l1535
  2947   001A1C                     u680:
  2948   001A1C  0012               	return		;funcret
  2949   001A1E                     __end_of_fputs:
  2950                           	callstack 0
  2951                           
  2952 ;; *************** function _fputc *****************
  2953 ;; Defined at:
  2954 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\nf_fputc.c"
  2955 ;; Parameters:    Size  Location     Type
  2956 ;;  c               2    0[COMRAM] int 
  2957 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  2958 ;;		 -> sprintf@f(11), 
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;		None
  2961 ;; Return value:  Size  Location     Type
  2962 ;;                  2    0[COMRAM] int 
  2963 ;; Registers used:
  2964 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2970 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2972 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2973 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2974 ;;Total ram usage:        8 bytes
  2975 ;; Hardware stack levels used: 1
  2976 ;; This function calls:
  2977 ;;		_putch
  2978 ;; This function is called by:
  2979 ;;		_pad
  2980 ;;		_vfpfcnvrt
  2981 ;;		_fputs
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           	psect	text9
  2986   00164E                     __ptext9:
  2987                           	callstack 0
  2988   00164E                     _fputc:
  2989                           	callstack 24
  2990   00164E  5003               	movf	fputc@fp^0,w,c
  2991   001650  B4D8               	btfsc	status,2,c
  2992   001652  EF2D  F00B         	goto	u641
  2993   001656  EF2F  F00B         	goto	u640
  2994   00165A                     u641:
  2995   00165A  EF37  F00B         	goto	l1523
  2996   00165E                     u640:
  2997   00165E  5003               	movf	fputc@fp^0,w,c
  2998   001660  A4D8               	btfss	status,2,c
  2999   001662  EF35  F00B         	goto	u651
  3000   001666  EF37  F00B         	goto	u650
  3001   00166A                     u651:
  3002   00166A  EF3C  F00B         	goto	l1525
  3003   00166E                     u650:
  3004   00166E                     l1523:
  3005   00166E  5001               	movf	fputc@c^0,w,c
  3006   001670  ECB5  F00D         	call	_putch
  3007   001674  EF7C  F00B         	goto	l1050
  3008   001678                     l1525:
  3009   001678  5003               	movf	fputc@fp^0,w,c
  3010   00167A  6ED9               	movwf	fsr2l,c
  3011   00167C  6ADA               	clrf	fsr2h,c
  3012   00167E  0E09               	movlw	9
  3013   001680  26D9               	addwf	fsr2l,f,c
  3014   001682  50DE               	movf	postinc2,w,c
  3015   001684  10DE               	iorwf	postinc2,w,c
  3016   001686  B4D8               	btfsc	status,2,c
  3017   001688  EF48  F00B         	goto	u661
  3018   00168C  EF4A  F00B         	goto	u660
  3019   001690                     u661:
  3020   001690  EF63  F00B         	goto	l1529
  3021   001694                     u660:
  3022   001694  5003               	movf	fputc@fp^0,w,c
  3023   001696  6ED9               	movwf	fsr2l,c
  3024   001698  6ADA               	clrf	fsr2h,c
  3025   00169A  0E09               	movlw	9
  3026   00169C  26D9               	addwf	fsr2l,f,c
  3027   00169E  5003               	movf	fputc@fp^0,w,c
  3028   0016A0  6EE1               	movwf	fsr1l,c
  3029   0016A2  6AE2               	clrf	fsr1h,c
  3030   0016A4  0E02               	movlw	2
  3031   0016A6  26E1               	addwf	fsr1l,f,c
  3032   0016A8  50DE               	movf	postinc2,w,c
  3033   0016AA  5CE6               	subwf	postinc1,w,c
  3034   0016AC  50E6               	movf	postinc1,w,c
  3035   0016AE  0A80               	xorlw	128
  3036   0016B0  6E08               	movwf	(??_fputc+4)^0,c
  3037   0016B2  50DE               	movf	postinc2,w,c
  3038   0016B4  0A80               	xorlw	128
  3039   0016B6  5808               	subwfb	(??_fputc+4)^0,w,c
  3040   0016B8  B0D8               	btfsc	status,0,c
  3041   0016BA  EF61  F00B         	goto	u671
  3042   0016BE  EF63  F00B         	goto	u670
  3043   0016C2                     u671:
  3044   0016C2  EF7C  F00B         	goto	l1050
  3045   0016C6                     u670:
  3046   0016C6                     l1529:
  3047   0016C6  5003               	movf	fputc@fp^0,w,c
  3048   0016C8  6ED9               	movwf	fsr2l,c
  3049   0016CA  6ADA               	clrf	fsr2h,c
  3050   0016CC  0E02               	movlw	2
  3051   0016CE  26D9               	addwf	fsr2l,f,c
  3052   0016D0  50DF               	movf	indf2,w,c
  3053   0016D2  6E04               	movwf	??_fputc^0,c
  3054   0016D4  5003               	movf	fputc@fp^0,w,c
  3055   0016D6  6ED9               	movwf	fsr2l,c
  3056   0016D8  6ADA               	clrf	fsr2h,c
  3057   0016DA  50DF               	movf	indf2,w,c
  3058   0016DC  2404               	addwf	??_fputc^0,w,c
  3059   0016DE  6ED9               	movwf	fsr2l,c
  3060   0016E0  6ADA               	clrf	fsr2h,c
  3061   0016E2  0060  F007  FFDF   	movff	fputc@c,indf2
  3062   0016E8  5003               	movf	fputc@fp^0,w,c
  3063   0016EA  6ED9               	movwf	fsr2l,c
  3064   0016EC  6ADA               	clrf	fsr2h,c
  3065   0016EE  0E02               	movlw	2
  3066   0016F0  26D9               	addwf	fsr2l,f,c
  3067   0016F2  2ADE               	incf	postinc2,f,c
  3068   0016F4  0E00               	movlw	0
  3069   0016F6  22DD               	addwfc	postdec2,f,c
  3070   0016F8                     l1050:
  3071   0016F8  0012               	return		;funcret
  3072   0016FA                     __end_of_fputc:
  3073                           	callstack 0
  3074                           
  3075 ;; *************** function _putch *****************
  3076 ;; Defined at:
  3077 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\putch.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;  c               1    wreg     unsigned char 
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;  c               1    0[COMRAM] unsigned char 
  3082 ;; Return value:  Size  Location     Type
  3083 ;;                  1    wreg      void 
  3084 ;; Registers used:
  3085 ;;		wreg
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3095 ;;Total ram usage:        0 bytes
  3096 ;; Hardware stack levels used: 1
  3097 ;; This function calls:
  3098 ;;		Nothing
  3099 ;; This function is called by:
  3100 ;;		_fputc
  3101 ;; This function uses a non-reentrant model
  3102 ;;
  3103                           
  3104                           	psect	text10
  3105   001B6A                     __ptext10:
  3106                           	callstack 0
  3107   001B6A                     _putch:
  3108                           	callstack 23
  3109   001B6A  0012               	return		;funcret
  3110   001B6C                     __end_of_putch:
  3111                           	callstack 0
  3112                           
  3113 ;; *************** function _abs *****************
  3114 ;; Defined at:
  3115 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\abs.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;  a               2    6[COMRAM] int 
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;		None
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  2    6[COMRAM] int 
  3122 ;; Registers used:
  3123 ;;		wreg, status,2, status,0
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3129 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3131 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3132 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3133 ;;Total ram usage:        4 bytes
  3134 ;; Hardware stack levels used: 1
  3135 ;; This function calls:
  3136 ;;		Nothing
  3137 ;; This function is called by:
  3138 ;;		_dtoa
  3139 ;; This function uses a non-reentrant model
  3140 ;;
  3141                           
  3142                           	psect	text11
  3143   001A8C                     __ptext11:
  3144                           	callstack 0
  3145   001A8C                     _abs:
  3146                           	callstack 26
  3147   001A8C  BE08               	btfsc	(abs@a+1)^0,7,c
  3148   001A8E  EF4B  F00D         	goto	u851
  3149   001A92  EF4D  F00D         	goto	u850
  3150   001A96                     u851:
  3151   001A96  EF53  F00D         	goto	l1035
  3152   001A9A                     u850:
  3153   001A9A  C007  F007         	movff	abs@a,?_abs
  3154   001A9E  C008  F008         	movff	abs@a+1,?_abs+1
  3155   001AA2  EF5F  F00D         	goto	l1038
  3156   001AA6                     l1035:
  3157   001AA6  C007  F009         	movff	abs@a,??_abs
  3158   001AAA  C008  F00A         	movff	abs@a+1,??_abs+1
  3159   001AAE  1E09               	comf	??_abs^0,f,c
  3160   001AB0  1E0A               	comf	(??_abs+1)^0,f,c
  3161   001AB2  4A09               	infsnz	??_abs^0,f,c
  3162   001AB4  2A0A               	incf	(??_abs+1)^0,f,c
  3163   001AB6  C009  F007         	movff	??_abs,?_abs
  3164   001ABA  C00A  F008         	movff	??_abs+1,?_abs+1
  3165   001ABE                     l1038:
  3166   001ABE  0012               	return		;funcret
  3167   001AC0                     __end_of_abs:
  3168                           	callstack 0
  3169                           
  3170 ;; *************** function ___awmod *****************
  3171 ;; Defined at:
  3172 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\awmod.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;  dividend        2    0[COMRAM] int 
  3175 ;;  divisor         2    2[COMRAM] int 
  3176 ;; Auto vars:     Size  Location     Type
  3177 ;;  sign            1    5[COMRAM] unsigned char 
  3178 ;;  counter         1    4[COMRAM] unsigned char 
  3179 ;; Return value:  Size  Location     Type
  3180 ;;                  2    0[COMRAM] int 
  3181 ;; Registers used:
  3182 ;;		wreg, status,2, status,0
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3188 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3189 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3191 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3192 ;;Total ram usage:        6 bytes
  3193 ;; Hardware stack levels used: 1
  3194 ;; This function calls:
  3195 ;;		Nothing
  3196 ;; This function is called by:
  3197 ;;		_dtoa
  3198 ;; This function uses a non-reentrant model
  3199 ;;
  3200                           
  3201                           	psect	text12
  3202   0015A0                     __ptext12:
  3203                           	callstack 0
  3204   0015A0                     ___awmod:
  3205                           	callstack 26
  3206   0015A0  6A06               	clrf	___awmod@sign^0,c
  3207   0015A2  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  3208   0015A4  EFD8  F00A         	goto	u750
  3209   0015A8  EFD6  F00A         	goto	u751
  3210   0015AC                     u751:
  3211   0015AC  EFDE  F00A         	goto	l1593
  3212   0015B0                     u750:
  3213   0015B0  6C01               	negf	___awmod@dividend^0,c
  3214   0015B2  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3215   0015B4  B0D8               	btfsc	status,0,c
  3216   0015B6  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3217   0015B8  0E01               	movlw	1
  3218   0015BA  6E06               	movwf	___awmod@sign^0,c
  3219   0015BC                     l1593:
  3220   0015BC  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  3221   0015BE  EFE5  F00A         	goto	u760
  3222   0015C2  EFE3  F00A         	goto	u761
  3223   0015C6                     u761:
  3224   0015C6  EFE9  F00A         	goto	l1597
  3225   0015CA                     u760:
  3226   0015CA  6C03               	negf	___awmod@divisor^0,c
  3227   0015CC  1E04               	comf	(___awmod@divisor+1)^0,f,c
  3228   0015CE  B0D8               	btfsc	status,0,c
  3229   0015D0  2A04               	incf	(___awmod@divisor+1)^0,f,c
  3230   0015D2                     l1597:
  3231   0015D2  5003               	movf	___awmod@divisor^0,w,c
  3232   0015D4  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  3233   0015D6  B4D8               	btfsc	status,2,c
  3234   0015D8  EFF0  F00A         	goto	u771
  3235   0015DC  EFF2  F00A         	goto	u770
  3236   0015E0                     u771:
  3237   0015E0  EF16  F00B         	goto	l1613
  3238   0015E4                     u770:
  3239   0015E4  0E01               	movlw	1
  3240   0015E6  6E05               	movwf	___awmod@counter^0,c
  3241   0015E8  EFFA  F00A         	goto	l1603
  3242   0015EC                     l1601:
  3243   0015EC  90D8               	bcf	status,0,c
  3244   0015EE  3603               	rlcf	___awmod@divisor^0,f,c
  3245   0015F0  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  3246   0015F2  2A05               	incf	___awmod@counter^0,f,c
  3247   0015F4                     l1603:
  3248   0015F4  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  3249   0015F6  EFFF  F00A         	goto	u781
  3250   0015FA  EF01  F00B         	goto	u780
  3251   0015FE                     u781:
  3252   0015FE  EFF6  F00A         	goto	l1601
  3253   001602                     u780:
  3254   001602                     l1605:
  3255   001602  5003               	movf	___awmod@divisor^0,w,c
  3256   001604  5C01               	subwf	___awmod@dividend^0,w,c
  3257   001606  5004               	movf	(___awmod@divisor+1)^0,w,c
  3258   001608  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  3259   00160A  A0D8               	btfss	status,0,c
  3260   00160C  EF0A  F00B         	goto	u791
  3261   001610  EF0C  F00B         	goto	u790
  3262   001614                     u791:
  3263   001614  EF10  F00B         	goto	l1609
  3264   001618                     u790:
  3265   001618  5003               	movf	___awmod@divisor^0,w,c
  3266   00161A  5E01               	subwf	___awmod@dividend^0,f,c
  3267   00161C  5004               	movf	(___awmod@divisor+1)^0,w,c
  3268   00161E  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  3269   001620                     l1609:
  3270   001620  90D8               	bcf	status,0,c
  3271   001622  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  3272   001624  3203               	rrcf	___awmod@divisor^0,f,c
  3273   001626  2E05               	decfsz	___awmod@counter^0,f,c
  3274   001628  EF01  F00B         	goto	l1605
  3275   00162C                     l1613:
  3276   00162C  5006               	movf	___awmod@sign^0,w,c
  3277   00162E  B4D8               	btfsc	status,2,c
  3278   001630  EF1C  F00B         	goto	u801
  3279   001634  EF1E  F00B         	goto	u800
  3280   001638                     u801:
  3281   001638  EF22  F00B         	goto	l1617
  3282   00163C                     u800:
  3283   00163C  6C01               	negf	___awmod@dividend^0,c
  3284   00163E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3285   001640  B0D8               	btfsc	status,0,c
  3286   001642  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3287   001644                     l1617:
  3288   001644  C001  F001         	movff	___awmod@dividend,?___awmod
  3289   001648  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3290   00164C  0012               	return		;funcret
  3291   00164E                     __end_of___awmod:
  3292                           	callstack 0
  3293                           
  3294 ;; *************** function ___awdiv *****************
  3295 ;; Defined at:
  3296 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\awdiv.c"
  3297 ;; Parameters:    Size  Location     Type
  3298 ;;  dividend        2    0[COMRAM] int 
  3299 ;;  divisor         2    2[COMRAM] int 
  3300 ;; Auto vars:     Size  Location     Type
  3301 ;;  quotient        2    6[COMRAM] int 
  3302 ;;  sign            1    5[COMRAM] unsigned char 
  3303 ;;  counter         1    4[COMRAM] unsigned char 
  3304 ;; Return value:  Size  Location     Type
  3305 ;;                  2    0[COMRAM] int 
  3306 ;; Registers used:
  3307 ;;		wreg, status,2, status,0
  3308 ;; Tracked objects:
  3309 ;;		On entry : 0/0
  3310 ;;		On exit  : 0/0
  3311 ;;		Unchanged: 0/0
  3312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3313 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3314 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3316 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3317 ;;Total ram usage:        8 bytes
  3318 ;; Hardware stack levels used: 1
  3319 ;; This function calls:
  3320 ;;		Nothing
  3321 ;; This function is called by:
  3322 ;;		_dtoa
  3323 ;; This function uses a non-reentrant model
  3324 ;;
  3325                           
  3326                           	psect	text13
  3327   001432                     __ptext13:
  3328                           	callstack 0
  3329   001432                     ___awdiv:
  3330                           	callstack 26
  3331   001432  6A06               	clrf	___awdiv@sign^0,c
  3332   001434  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  3333   001436  EF21  F00A         	goto	u690
  3334   00143A  EF1F  F00A         	goto	u691
  3335   00143E                     u691:
  3336   00143E  EF27  F00A         	goto	l1549
  3337   001442                     u690:
  3338   001442  6C03               	negf	___awdiv@divisor^0,c
  3339   001444  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3340   001446  B0D8               	btfsc	status,0,c
  3341   001448  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3342   00144A  0E01               	movlw	1
  3343   00144C  6E06               	movwf	___awdiv@sign^0,c
  3344   00144E                     l1549:
  3345   00144E  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  3346   001450  EF2E  F00A         	goto	u700
  3347   001454  EF2C  F00A         	goto	u701
  3348   001458                     u701:
  3349   001458  EF34  F00A         	goto	l1555
  3350   00145C                     u700:
  3351   00145C  6C01               	negf	___awdiv@dividend^0,c
  3352   00145E  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3353   001460  B0D8               	btfsc	status,0,c
  3354   001462  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3355   001464  0E01               	movlw	1
  3356   001466  1A06               	xorwf	___awdiv@sign^0,f,c
  3357   001468                     l1555:
  3358   001468  6A08               	clrf	(___awdiv@quotient+1)^0,c
  3359   00146A  0E00               	movlw	0
  3360   00146C  6E07               	movwf	___awdiv@quotient^0,c
  3361   00146E  5003               	movf	___awdiv@divisor^0,w,c
  3362   001470  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3363   001472  B4D8               	btfsc	status,2,c
  3364   001474  EF3E  F00A         	goto	u711
  3365   001478  EF40  F00A         	goto	u710
  3366   00147C                     u711:
  3367   00147C  EF68  F00A         	goto	l1577
  3368   001480                     u710:
  3369   001480  0E01               	movlw	1
  3370   001482  6E05               	movwf	___awdiv@counter^0,c
  3371   001484  EF48  F00A         	goto	l1563
  3372   001488                     l1561:
  3373   001488  90D8               	bcf	status,0,c
  3374   00148A  3603               	rlcf	___awdiv@divisor^0,f,c
  3375   00148C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3376   00148E  2A05               	incf	___awdiv@counter^0,f,c
  3377   001490                     l1563:
  3378   001490  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3379   001492  EF4D  F00A         	goto	u721
  3380   001496  EF4F  F00A         	goto	u720
  3381   00149A                     u721:
  3382   00149A  EF44  F00A         	goto	l1561
  3383   00149E                     u720:
  3384   00149E                     l1565:
  3385   00149E  90D8               	bcf	status,0,c
  3386   0014A0  3607               	rlcf	___awdiv@quotient^0,f,c
  3387   0014A2  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3388   0014A4  5003               	movf	___awdiv@divisor^0,w,c
  3389   0014A6  5C01               	subwf	___awdiv@dividend^0,w,c
  3390   0014A8  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3391   0014AA  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3392   0014AC  A0D8               	btfss	status,0,c
  3393   0014AE  EF5B  F00A         	goto	u731
  3394   0014B2  EF5D  F00A         	goto	u730
  3395   0014B6                     u731:
  3396   0014B6  EF62  F00A         	goto	l1573
  3397   0014BA                     u730:
  3398   0014BA  5003               	movf	___awdiv@divisor^0,w,c
  3399   0014BC  5E01               	subwf	___awdiv@dividend^0,f,c
  3400   0014BE  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3401   0014C0  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3402   0014C2  8007               	bsf	___awdiv@quotient^0,0,c
  3403   0014C4                     l1573:
  3404   0014C4  90D8               	bcf	status,0,c
  3405   0014C6  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3406   0014C8  3203               	rrcf	___awdiv@divisor^0,f,c
  3407   0014CA  2E05               	decfsz	___awdiv@counter^0,f,c
  3408   0014CC  EF4F  F00A         	goto	l1565
  3409   0014D0                     l1577:
  3410   0014D0  5006               	movf	___awdiv@sign^0,w,c
  3411   0014D2  B4D8               	btfsc	status,2,c
  3412   0014D4  EF6E  F00A         	goto	u741
  3413   0014D8  EF70  F00A         	goto	u740
  3414   0014DC                     u741:
  3415   0014DC  EF74  F00A         	goto	l1581
  3416   0014E0                     u740:
  3417   0014E0  6C07               	negf	___awdiv@quotient^0,c
  3418   0014E2  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3419   0014E4  B0D8               	btfsc	status,0,c
  3420   0014E6  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3421   0014E8                     l1581:
  3422   0014E8  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3423   0014EC  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3424   0014F0  0012               	return		;funcret
  3425   0014F2                     __end_of___awdiv:
  3426                           	callstack 0
  3427                           
  3428 ;; *************** function _rtc_read *****************
  3429 ;; Defined at:
  3430 ;;		line 130 in file "EX3I2C26K83.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;  reg_adress      2    0[COMRAM] int 
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;  result          1    2[COMRAM] unsigned char 
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  1    wreg      unsigned char 
  3437 ;; Registers used:
  3438 ;;		wreg, status,2
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3444 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3445 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3447 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3448 ;;Total ram usage:        3 bytes
  3449 ;; Hardware stack levels used: 1
  3450 ;; This function calls:
  3451 ;;		Nothing
  3452 ;; This function is called by:
  3453 ;;		_main
  3454 ;; This function uses a non-reentrant model
  3455 ;;
  3456                           
  3457                           	psect	text14
  3458   00177E                     __ptext14:
  3459                           	callstack 0
  3460   00177E                     _rtc_read:
  3461                           	callstack 30
  3462   00177E                     
  3463                           ;EX3I2C26K83.c: 131:     I2C2CNT = 1;
  3464   00177E  0E01               	movlw	1
  3465   001780  013D               	movlb	61	; () banked
  3466   001782  6F56               	movwf	86,b	;volatile
  3467                           
  3468                           ;EX3I2C26K83.c: 132:     I2C2ADB1 = 0b11010000;
  3469   001784  0ED0               	movlw	208
  3470   001786  6F58               	movwf	88,b	;volatile
  3471   001788                     
  3472                           ; BSR set to: 61
  3473                           ;EX3I2C26K83.c: 133:     I2C2TXB = reg_adress;
  3474   001788  0060  F007  FD55   	movff	rtc_read@reg_adress,15701	;volatile
  3475   00178E                     
  3476                           ; BSR set to: 61
  3477                           ;EX3I2C26K83.c: 134:     I2C2CON0bits.S = 1;
  3478   00178E  8B5D               	bsf	93,5,b	;volatile
  3479   001790                     l134:
  3480                           
  3481                           ; BSR set to: 61
  3482   001790  A163               	btfss	99,0,b	;volatile
  3483   001792  EFCD  F00B         	goto	u1111
  3484   001796  EFCF  F00B         	goto	u1110
  3485   00179A                     u1111:
  3486   00179A  EFC8  F00B         	goto	l134
  3487   00179E                     u1110:
  3488   00179E                     
  3489                           ; BSR set to: 61
  3490                           ;EX3I2C26K83.c: 136:     I2C2PIRbits.SCIF = 0;
  3491   00179E  9163               	bcf	99,0,b	;volatile
  3492   0017A0                     l137:
  3493                           
  3494                           ; BSR set to: 61
  3495   0017A0  AB62               	btfss	98,5,b	;volatile
  3496   0017A2  EFD5  F00B         	goto	u1121
  3497   0017A6  EFD7  F00B         	goto	u1120
  3498   0017AA                     u1121:
  3499   0017AA  EFD0  F00B         	goto	l137
  3500   0017AE                     u1120:
  3501   0017AE                     l140:
  3502                           
  3503                           ; BSR set to: 61
  3504   0017AE  A563               	btfss	99,2,b	;volatile
  3505   0017B0  EFDC  F00B         	goto	u1131
  3506   0017B4  EFDE  F00B         	goto	u1130
  3507   0017B8                     u1131:
  3508   0017B8  EFD7  F00B         	goto	l140
  3509   0017BC                     u1130:
  3510   0017BC                     
  3511                           ; BSR set to: 61
  3512                           ;EX3I2C26K83.c: 139:     I2C2PIRbits.PCIF = 0;
  3513   0017BC  9563               	bcf	99,2,b	;volatile
  3514   0017BE                     
  3515                           ; BSR set to: 61
  3516                           ;EX3I2C26K83.c: 141:     I2C2ADB1 = 0b11010001;
  3517   0017BE  0ED1               	movlw	209
  3518   0017C0  6F58               	movwf	88,b	;volatile
  3519                           
  3520                           ;EX3I2C26K83.c: 142:     I2C2CNT = 1;
  3521   0017C2  0E01               	movlw	1
  3522   0017C4  6F56               	movwf	86,b	;volatile
  3523   0017C6                     
  3524                           ; BSR set to: 61
  3525                           ;EX3I2C26K83.c: 143:     I2C2CON0bits.S = 1;
  3526   0017C6  8B5D               	bsf	93,5,b	;volatile
  3527   0017C8                     l143:
  3528                           
  3529                           ; BSR set to: 61
  3530   0017C8  A163               	btfss	99,0,b	;volatile
  3531   0017CA  EFE9  F00B         	goto	u1141
  3532   0017CE  EFEB  F00B         	goto	u1140
  3533   0017D2                     u1141:
  3534   0017D2  EFE4  F00B         	goto	l143
  3535   0017D6                     u1140:
  3536   0017D6                     
  3537                           ; BSR set to: 61
  3538                           ;EX3I2C26K83.c: 145:     I2C2PIRbits.SCIF = 0;
  3539   0017D6  9163               	bcf	99,0,b	;volatile
  3540                           
  3541                           ;EX3I2C26K83.c: 146:     I2C2CON1bits.ACKCNT = 1;
  3542   0017D8  8F5E               	bsf	94,7,b	;volatile
  3543   0017DA                     l146:
  3544                           
  3545                           ; BSR set to: 61
  3546   0017DA  A162               	btfss	98,0,b	;volatile
  3547   0017DC  EFF2  F00B         	goto	u1151
  3548   0017E0  EFF4  F00B         	goto	u1150
  3549   0017E4                     u1151:
  3550   0017E4  EFED  F00B         	goto	l146
  3551   0017E8                     u1150:
  3552   0017E8                     
  3553                           ; BSR set to: 61
  3554                           ;EX3I2C26K83.c: 148:     char result = I2C2RXB;
  3555   0017E8  006F F550  F003    	movff	15700,rtc_read@result	;volatile
  3556   0017EE                     l149:
  3557                           
  3558                           ; BSR set to: 61
  3559   0017EE  A563               	btfss	99,2,b	;volatile
  3560   0017F0  EFFC  F00B         	goto	u1161
  3561   0017F4  EFFE  F00B         	goto	u1160
  3562   0017F8                     u1161:
  3563   0017F8  EFF7  F00B         	goto	l149
  3564   0017FC                     u1160:
  3565   0017FC                     
  3566                           ; BSR set to: 61
  3567                           ;EX3I2C26K83.c: 151:     I2C2PIRbits.PCIF = 0;
  3568   0017FC  9563               	bcf	99,2,b	;volatile
  3569   0017FE                     
  3570                           ; BSR set to: 61
  3571                           ;EX3I2C26K83.c: 152:     return result;
  3572   0017FE  5003               	movf	rtc_read@result^0,w,c
  3573   001800                     
  3574                           ; BSR set to: 61
  3575   001800  0012               	return		;funcret
  3576   001802                     __end_of_rtc_read:
  3577                           	callstack 0
  3578                           
  3579 ;; *************** function _bcd_to_dec *****************
  3580 ;; Defined at:
  3581 ;;		line 99 in file "EX3I2C26K83.c"
  3582 ;; Parameters:    Size  Location     Type
  3583 ;;  bcd             1    0[COMRAM] PTR unsigned char 
  3584 ;;		 -> main@minute(1), main@secondes(1), 
  3585 ;; Auto vars:     Size  Location     Type
  3586 ;;		None
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  1    wreg      void 
  3589 ;; Registers used:
  3590 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3596 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3598 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3599 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3600 ;;Total ram usage:        3 bytes
  3601 ;; Hardware stack levels used: 1
  3602 ;; This function calls:
  3603 ;;		Nothing
  3604 ;; This function is called by:
  3605 ;;		_main
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609                           	psect	text15
  3610   001AF0                     __ptext15:
  3611                           	callstack 0
  3612   001AF0                     _bcd_to_dec:
  3613                           	callstack 30
  3614   001AF0                     
  3615                           ;EX3I2C26K83.c: 100:     *bcd = ((*bcd >> 4) * 10) + (*bcd & 0x0F);
  3616   001AF0  5001               	movf	bcd_to_dec@bcd^0,w,c
  3617   001AF2  6ED9               	movwf	fsr2l,c
  3618   001AF4  6ADA               	clrf	fsr2h,c
  3619   001AF6  5001               	movf	bcd_to_dec@bcd^0,w,c
  3620   001AF8  6EE1               	movwf	fsr1l,c
  3621   001AFA  6AE2               	clrf	fsr1h,c
  3622   001AFC  50E7               	movf	indf1,w,c
  3623   001AFE  6E02               	movwf	??_bcd_to_dec^0,c
  3624   001B00  0E0F               	movlw	15
  3625   001B02  1602               	andwf	??_bcd_to_dec^0,f,c
  3626   001B04  5001               	movf	bcd_to_dec@bcd^0,w,c
  3627   001B06  6EE1               	movwf	fsr1l,c
  3628   001B08  6AE2               	clrf	fsr1h,c
  3629   001B0A  50E7               	movf	indf1,w,c
  3630   001B0C  6E03               	movwf	(??_bcd_to_dec+1)^0,c
  3631   001B0E  3803               	swapf	(??_bcd_to_dec+1)^0,w,c
  3632   001B10  0B0F               	andlw	15
  3633   001B12  0D0A               	mullw	10
  3634   001B14  50F3               	movf	243,w,c
  3635   001B16  2402               	addwf	??_bcd_to_dec^0,w,c
  3636   001B18  6EDF               	movwf	indf2,c
  3637   001B1A  0012               	return		;funcret
  3638   001B1C                     __end_of_bcd_to_dec:
  3639                           	callstack 0
  3640                           
  3641 ;; *************** function _Lcd_Write_String *****************
  3642 ;; Defined at:
  3643 ;;		line 94 in file "./lcd.h"
  3644 ;; Parameters:    Size  Location     Type
  3645 ;;  a               1    4[COMRAM] PTR unsigned char 
  3646 ;;		 -> main@buffer(6), 
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;  i               2    5[COMRAM] int 
  3649 ;; Return value:  Size  Location     Type
  3650 ;;                  1    wreg      void 
  3651 ;; Registers used:
  3652 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3653 ;; Tracked objects:
  3654 ;;		On entry : 0/0
  3655 ;;		On exit  : 0/0
  3656 ;;		Unchanged: 0/0
  3657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3658 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3659 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3661 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3662 ;;Total ram usage:        3 bytes
  3663 ;; Hardware stack levels used: 1
  3664 ;; Hardware stack levels required when called: 2
  3665 ;; This function calls:
  3666 ;;		_Lcd_Write_Char
  3667 ;; This function is called by:
  3668 ;;		_main
  3669 ;; This function uses a non-reentrant model
  3670 ;;
  3671                           
  3672                           	psect	text16
  3673   001A56                     __ptext16:
  3674                           	callstack 0
  3675   001A56                     _Lcd_Write_String:
  3676                           	callstack 28
  3677   001A56                     
  3678                           ;./lcd.h: 94: void Lcd_Write_String(char *a);./lcd.h: 95: {;./lcd.h: 96:  int i;;./lcd.h
      +                          : 97:  for(i=0;a[i]!='\0';i++)
  3679   001A56  6A07               	clrf	(Lcd_Write_String@i+1)^0,c
  3680   001A58  0E00               	movlw	0
  3681   001A5A  6E06               	movwf	Lcd_Write_String@i^0,c
  3682   001A5C  EF39  F00D         	goto	l1789
  3683   001A60                     l1785:
  3684                           
  3685                           ;./lcd.h: 98:     Lcd_Write_Char(a[i]);
  3686   001A60  5005               	movf	Lcd_Write_String@a^0,w,c
  3687   001A62  2406               	addwf	Lcd_Write_String@i^0,w,c
  3688   001A64  6ED9               	movwf	fsr2l,c
  3689   001A66  6ADA               	clrf	fsr2h,c
  3690   001A68  50DF               	movf	indf2,w,c
  3691   001A6A  EC0F  F00D         	call	_Lcd_Write_Char
  3692   001A6E  4A06               	infsnz	Lcd_Write_String@i^0,f,c
  3693   001A70  2A07               	incf	(Lcd_Write_String@i+1)^0,f,c
  3694   001A72                     l1789:
  3695   001A72  5005               	movf	Lcd_Write_String@a^0,w,c
  3696   001A74  2406               	addwf	Lcd_Write_String@i^0,w,c
  3697   001A76  6ED9               	movwf	fsr2l,c
  3698   001A78  6ADA               	clrf	fsr2h,c
  3699   001A7A  50DF               	movf	indf2,w,c
  3700   001A7C  A4D8               	btfss	status,2,c
  3701   001A7E  EF43  F00D         	goto	u1061
  3702   001A82  EF45  F00D         	goto	u1060
  3703   001A86                     u1061:
  3704   001A86  EF30  F00D         	goto	l1785
  3705   001A8A                     u1060:
  3706   001A8A  0012               	return		;funcret
  3707   001A8C                     __end_of_Lcd_Write_String:
  3708                           	callstack 0
  3709                           
  3710 ;; *************** function _Lcd_Write_Char *****************
  3711 ;; Defined at:
  3712 ;;		line 78 in file "./lcd.h"
  3713 ;; Parameters:    Size  Location     Type
  3714 ;;  a               1    wreg     unsigned char 
  3715 ;; Auto vars:     Size  Location     Type
  3716 ;;  a               1    3[COMRAM] unsigned char 
  3717 ;;  y               1    2[COMRAM] unsigned char 
  3718 ;;  temp            1    1[COMRAM] unsigned char 
  3719 ;; Return value:  Size  Location     Type
  3720 ;;                  1    wreg      void 
  3721 ;; Registers used:
  3722 ;;		wreg, status,2, status,0, cstack
  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/0
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3729 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3731 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3732 ;;Total ram usage:        3 bytes
  3733 ;; Hardware stack levels used: 1
  3734 ;; Hardware stack levels required when called: 1
  3735 ;; This function calls:
  3736 ;;		_Lcd_Port
  3737 ;; This function is called by:
  3738 ;;		_Lcd_Write_String
  3739 ;; This function uses a non-reentrant model
  3740 ;;
  3741                           
  3742                           	psect	text17
  3743   001A1E                     __ptext17:
  3744                           	callstack 0
  3745   001A1E                     _Lcd_Write_Char:
  3746                           	callstack 28
  3747                           
  3748                           ;incstack = 0
  3749                           ;Lcd_Write_Char@a stored from wreg
  3750   001A1E  6E04               	movwf	Lcd_Write_Char@a^0,c
  3751   001A20                     
  3752                           ;./lcd.h: 78: void Lcd_Write_Char(char a);./lcd.h: 79: {;./lcd.h: 80:    char temp,y;;./
      +                          lcd.h: 81:    temp = a&0x0F;
  3753   001A20  5004               	movf	Lcd_Write_Char@a^0,w,c
  3754   001A22  0B0F               	andlw	15
  3755   001A24  6E02               	movwf	Lcd_Write_Char@temp^0,c
  3756                           
  3757                           ;./lcd.h: 82:    y = a&0xF0;
  3758   001A26  5004               	movf	Lcd_Write_Char@a^0,w,c
  3759   001A28  0BF0               	andlw	240
  3760   001A2A  6E03               	movwf	Lcd_Write_Char@y^0,c
  3761   001A2C                     
  3762                           ;./lcd.h: 83:    PORTAbits.RA0 = 1;
  3763   001A2C  80CA               	bsf	202,0,c	;volatile
  3764   001A2E                     
  3765                           ;./lcd.h: 84:    Lcd_Port(y>>4);
  3766   001A2E  3803               	swapf	Lcd_Write_Char@y^0,w,c
  3767   001A30  0B0F               	andlw	15
  3768   001A32  ECA5  F00C         	call	_Lcd_Port
  3769   001A36                     
  3770                           ;./lcd.h: 85:    PORTAbits.RA1 = 1;
  3771   001A36  82CA               	bsf	202,1,c	;volatile
  3772   001A38                     
  3773                           ;./lcd.h: 86:    _delay((unsigned long)((40)*(64000000/4000000.0)));
  3774   001A38  0ED5               	movlw	213
  3775   001A3A                     u1257:
  3776   001A3A  2EE8               	decfsz	wreg,f,c
  3777   001A3C  D7FE               	bra	u1257
  3778   001A3E  0000               	nop	
  3779   001A40                     
  3780                           ;./lcd.h: 87:    PORTAbits.RA1 = 0;
  3781   001A40  92CA               	bcf	202,1,c	;volatile
  3782   001A42                     
  3783                           ;./lcd.h: 88:    Lcd_Port(temp);
  3784   001A42  5002               	movf	Lcd_Write_Char@temp^0,w,c
  3785   001A44  ECA5  F00C         	call	_Lcd_Port
  3786   001A48                     
  3787                           ;./lcd.h: 89:    PORTAbits.RA1 = 1;
  3788   001A48  82CA               	bsf	202,1,c	;volatile
  3789   001A4A                     
  3790                           ;./lcd.h: 90:    _delay((unsigned long)((40)*(64000000/4000000.0)));
  3791   001A4A  0ED5               	movlw	213
  3792   001A4C                     u1267:
  3793   001A4C  2EE8               	decfsz	wreg,f,c
  3794   001A4E  D7FE               	bra	u1267
  3795   001A50  0000               	nop	
  3796   001A52                     
  3797                           ;./lcd.h: 91:    PORTAbits.RA1 = 0;
  3798   001A52  92CA               	bcf	202,1,c	;volatile
  3799   001A54  0012               	return		;funcret
  3800   001A56                     __end_of_Lcd_Write_Char:
  3801                           	callstack 0
  3802                           
  3803 ;; *************** function _Lcd_Set_Cursor *****************
  3804 ;; Defined at:
  3805 ;;		line 38 in file "./lcd.h"
  3806 ;; Parameters:    Size  Location     Type
  3807 ;;  a               1    wreg     unsigned char 
  3808 ;;  b               1    3[COMRAM] unsigned char 
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;  a               1    4[COMRAM] unsigned char 
  3811 ;;  temp            1    7[COMRAM] unsigned char 
  3812 ;;  y               1    6[COMRAM] unsigned char 
  3813 ;;  z               1    5[COMRAM] unsigned char 
  3814 ;; Return value:  Size  Location     Type
  3815 ;;                  1    wreg      void 
  3816 ;; Registers used:
  3817 ;;		wreg, status,2, status,0, cstack
  3818 ;; Tracked objects:
  3819 ;;		On entry : 0/0
  3820 ;;		On exit  : 0/0
  3821 ;;		Unchanged: 0/0
  3822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3823 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3824 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3826 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3827 ;;Total ram usage:        5 bytes
  3828 ;; Hardware stack levels used: 1
  3829 ;; Hardware stack levels required when called: 1
  3830 ;; This function calls:
  3831 ;;		_Lcd_Cmd
  3832 ;; This function is called by:
  3833 ;;		_main
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837                           	psect	text18
  3838   0018E4                     __ptext18:
  3839                           	callstack 0
  3840   0018E4                     _Lcd_Set_Cursor:
  3841                           	callstack 29
  3842                           
  3843                           ;incstack = 0
  3844                           ;Lcd_Set_Cursor@a stored from wreg
  3845   0018E4  6E05               	movwf	Lcd_Set_Cursor@a^0,c
  3846   0018E6                     
  3847                           ;./lcd.h: 38: void Lcd_Set_Cursor(char a, char b);./lcd.h: 39: {;./lcd.h: 40:  char temp
      +                          ,z,y;;./lcd.h: 41:  if(a == 1)
  3848   0018E6  0405               	decf	Lcd_Set_Cursor@a^0,w,c
  3849   0018E8  A4D8               	btfss	status,2,c
  3850   0018EA  EF79  F00C         	goto	u1041
  3851   0018EE  EF7B  F00C         	goto	u1040
  3852   0018F2                     u1041:
  3853   0018F2  EF8C  F00C         	goto	l1775
  3854   0018F6                     u1040:
  3855   0018F6                     
  3856                           ;./lcd.h: 42:  {;./lcd.h: 43:    temp = 0x80 + b - 1;
  3857   0018F6  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  3858   0018F8  0F7F               	addlw	127
  3859   0018FA  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  3860                           
  3861                           ;./lcd.h: 44:   z = temp>>4;
  3862   0018FC  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  3863   0018FE  0B0F               	andlw	15
  3864   001900  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  3865                           
  3866                           ;./lcd.h: 45:   y = temp & 0x0F;
  3867   001902  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  3868   001904  0B0F               	andlw	15
  3869   001906  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  3870   001908                     
  3871                           ;./lcd.h: 46:   Lcd_Cmd(z);
  3872   001908  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  3873   00190A  EC9E  F00D         	call	_Lcd_Cmd
  3874   00190E                     
  3875                           ;./lcd.h: 47:   Lcd_Cmd(y);
  3876   00190E  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  3877   001910  EC9E  F00D         	call	_Lcd_Cmd
  3878                           
  3879                           ;./lcd.h: 48:  }
  3880   001914  EFA4  F00C         	goto	l95
  3881   001918                     l1775:
  3882   001918  0E02               	movlw	2
  3883   00191A  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  3884   00191C  A4D8               	btfss	status,2,c
  3885   00191E  EF93  F00C         	goto	u1051
  3886   001922  EF95  F00C         	goto	u1050
  3887   001926                     u1051:
  3888   001926  EFA4  F00C         	goto	l95
  3889   00192A                     u1050:
  3890   00192A                     
  3891                           ;./lcd.h: 50:  {;./lcd.h: 51:   temp = 0xC0 + b - 1;
  3892   00192A  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  3893   00192C  0FBF               	addlw	191
  3894   00192E  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  3895                           
  3896                           ;./lcd.h: 52:   z = temp>>4;
  3897   001930  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  3898   001932  0B0F               	andlw	15
  3899   001934  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  3900                           
  3901                           ;./lcd.h: 53:   y = temp & 0x0F;
  3902   001936  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  3903   001938  0B0F               	andlw	15
  3904   00193A  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  3905   00193C                     
  3906                           ;./lcd.h: 54:   Lcd_Cmd(z);
  3907   00193C  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  3908   00193E  EC9E  F00D         	call	_Lcd_Cmd
  3909   001942                     
  3910                           ;./lcd.h: 55:   Lcd_Cmd(y);
  3911   001942  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  3912   001944  EC9E  F00D         	call	_Lcd_Cmd
  3913   001948                     l95:
  3914   001948  0012               	return		;funcret
  3915   00194A                     __end_of_Lcd_Set_Cursor:
  3916                           	callstack 0
  3917                           
  3918 ;; *************** function _Lcd_Init *****************
  3919 ;; Defined at:
  3920 ;;		line 59 in file "./lcd.h"
  3921 ;; Parameters:    Size  Location     Type
  3922 ;;		None
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;		None
  3925 ;; Return value:  Size  Location     Type
  3926 ;;                  1    wreg      void 
  3927 ;; Registers used:
  3928 ;;		wreg, status,2, cstack
  3929 ;; Tracked objects:
  3930 ;;		On entry : 0/0
  3931 ;;		On exit  : 0/0
  3932 ;;		Unchanged: 0/0
  3933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3936 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3937 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3938 ;;Total ram usage:        2 bytes
  3939 ;; Hardware stack levels used: 1
  3940 ;; Hardware stack levels required when called: 1
  3941 ;; This function calls:
  3942 ;;		_Lcd_Cmd
  3943 ;;		_Lcd_Port
  3944 ;; This function is called by:
  3945 ;;		_main
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           
  3949                           	psect	text19
  3950   001802                     __ptext19:
  3951                           	callstack 0
  3952   001802                     _Lcd_Init:
  3953                           	callstack 29
  3954   001802                     
  3955                           ;./lcd.h: 61:   Lcd_Port(0x00);
  3956   001802  0E00               	movlw	0
  3957   001804  ECA5  F00C         	call	_Lcd_Port
  3958   001808                     
  3959                           ;./lcd.h: 62:    _delay((unsigned long)((20)*(64000000/4000.0)));
  3960   001808  0E02               	movlw	2
  3961   00180A  6E05               	movwf	(??_Lcd_Init+1)^0,c
  3962   00180C  0EA0               	movlw	160
  3963   00180E  6E04               	movwf	??_Lcd_Init^0,c
  3964   001810  0E92               	movlw	146
  3965   001812                     u1277:
  3966   001812  2EE8               	decfsz	wreg,f,c
  3967   001814  D7FE               	bra	u1277
  3968   001816  2E04               	decfsz	??_Lcd_Init^0,f,c
  3969   001818  D7FC               	bra	u1277
  3970   00181A  2E05               	decfsz	(??_Lcd_Init+1)^0,f,c
  3971   00181C  D7FA               	bra	u1277
  3972   00181E  D000               	nop2	
  3973   001820                     
  3974                           ;./lcd.h: 63:   Lcd_Cmd(0x03);
  3975   001820  0E03               	movlw	3
  3976   001822  EC9E  F00D         	call	_Lcd_Cmd
  3977   001826                     
  3978                           ;./lcd.h: 64:  _delay((unsigned long)((5)*(64000000/4000.0)));
  3979   001826  0E68               	movlw	104
  3980   001828  6E04               	movwf	??_Lcd_Init^0,c
  3981   00182A  0EE4               	movlw	228
  3982   00182C                     u1287:
  3983   00182C  2EE8               	decfsz	wreg,f,c
  3984   00182E  D7FE               	bra	u1287
  3985   001830  2E04               	decfsz	??_Lcd_Init^0,f,c
  3986   001832  D7FC               	bra	u1287
  3987   001834  D000               	nop2	
  3988   001836                     
  3989                           ;./lcd.h: 65:   Lcd_Cmd(0x03);
  3990   001836  0E03               	movlw	3
  3991   001838  EC9E  F00D         	call	_Lcd_Cmd
  3992   00183C                     
  3993                           ;./lcd.h: 66:  _delay((unsigned long)((11)*(64000000/4000.0)));
  3994   00183C  0EE5               	movlw	229
  3995   00183E  6E04               	movwf	??_Lcd_Init^0,c
  3996   001840  0E91               	movlw	145
  3997   001842                     u1297:
  3998   001842  2EE8               	decfsz	wreg,f,c
  3999   001844  D7FE               	bra	u1297
  4000   001846  2E04               	decfsz	??_Lcd_Init^0,f,c
  4001   001848  D7FC               	bra	u1297
  4002   00184A  0000               	nop	
  4003   00184C                     
  4004                           ;./lcd.h: 67:   Lcd_Cmd(0x03);
  4005   00184C  0E03               	movlw	3
  4006   00184E  EC9E  F00D         	call	_Lcd_Cmd
  4007   001852                     
  4008                           ;./lcd.h: 69:   Lcd_Cmd(0x02);
  4009   001852  0E02               	movlw	2
  4010   001854  EC9E  F00D         	call	_Lcd_Cmd
  4011   001858                     
  4012                           ;./lcd.h: 70:   Lcd_Cmd(0x02);
  4013   001858  0E02               	movlw	2
  4014   00185A  EC9E  F00D         	call	_Lcd_Cmd
  4015   00185E                     
  4016                           ;./lcd.h: 71:   Lcd_Cmd(0x08);
  4017   00185E  0E08               	movlw	8
  4018   001860  EC9E  F00D         	call	_Lcd_Cmd
  4019   001864                     
  4020                           ;./lcd.h: 72:   Lcd_Cmd(0x00);
  4021   001864  0E00               	movlw	0
  4022   001866  EC9E  F00D         	call	_Lcd_Cmd
  4023   00186A                     
  4024                           ;./lcd.h: 73:   Lcd_Cmd(0x0C);
  4025   00186A  0E0C               	movlw	12
  4026   00186C  EC9E  F00D         	call	_Lcd_Cmd
  4027   001870                     
  4028                           ;./lcd.h: 74:   Lcd_Cmd(0x00);
  4029   001870  0E00               	movlw	0
  4030   001872  EC9E  F00D         	call	_Lcd_Cmd
  4031   001876                     
  4032                           ;./lcd.h: 75:   Lcd_Cmd(0x06);
  4033   001876  0E06               	movlw	6
  4034   001878  EC9E  F00D         	call	_Lcd_Cmd
  4035   00187C  0012               	return		;funcret
  4036   00187E                     __end_of_Lcd_Init:
  4037                           	callstack 0
  4038                           
  4039 ;; *************** function _Lcd_Clear *****************
  4040 ;; Defined at:
  4041 ;;		line 32 in file "./lcd.h"
  4042 ;; Parameters:    Size  Location     Type
  4043 ;;		None
  4044 ;; Auto vars:     Size  Location     Type
  4045 ;;		None
  4046 ;; Return value:  Size  Location     Type
  4047 ;;                  1    wreg      void 
  4048 ;; Registers used:
  4049 ;;		wreg, status,2, cstack
  4050 ;; Tracked objects:
  4051 ;;		On entry : 0/0
  4052 ;;		On exit  : 0/0
  4053 ;;		Unchanged: 0/0
  4054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4059 ;;Total ram usage:        0 bytes
  4060 ;; Hardware stack levels used: 1
  4061 ;; Hardware stack levels required when called: 2
  4062 ;; This function calls:
  4063 ;;		_Lcd_Cmd
  4064 ;; This function is called by:
  4065 ;;		_main
  4066 ;; This function uses a non-reentrant model
  4067 ;;
  4068                           
  4069                           	psect	text20
  4070   001B5C                     __ptext20:
  4071                           	callstack 0
  4072   001B5C                     _Lcd_Clear:
  4073                           	callstack 28
  4074   001B5C                     
  4075                           ;./lcd.h: 34:  Lcd_Cmd(0);
  4076   001B5C  0E00               	movlw	0
  4077   001B5E  EC9E  F00D         	call	_Lcd_Cmd
  4078                           
  4079                           ;./lcd.h: 35:  Lcd_Cmd(1);
  4080   001B62  0E01               	movlw	1
  4081   001B64  EC9E  F00D         	call	_Lcd_Cmd
  4082   001B68  0012               	return		;funcret
  4083   001B6A                     __end_of_Lcd_Clear:
  4084                           	callstack 0
  4085                           
  4086 ;; *************** function _Lcd_Cmd *****************
  4087 ;; Defined at:
  4088 ;;		line 23 in file "./lcd.h"
  4089 ;; Parameters:    Size  Location     Type
  4090 ;;  a               1    wreg     unsigned char 
  4091 ;; Auto vars:     Size  Location     Type
  4092 ;;  a               1    2[COMRAM] unsigned char 
  4093 ;; Return value:  Size  Location     Type
  4094 ;;                  1    wreg      void 
  4095 ;; Registers used:
  4096 ;;		wreg, status,2, cstack
  4097 ;; Tracked objects:
  4098 ;;		On entry : 0/0
  4099 ;;		On exit  : 0/0
  4100 ;;		Unchanged: 0/0
  4101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4103 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4104 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4105 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4106 ;;Total ram usage:        2 bytes
  4107 ;; Hardware stack levels used: 1
  4108 ;; This function calls:
  4109 ;;		_Lcd_Port
  4110 ;; This function is called by:
  4111 ;;		_Lcd_Clear
  4112 ;;		_Lcd_Set_Cursor
  4113 ;;		_Lcd_Init
  4114 ;;		_Lcd_Shift_Right
  4115 ;;		_Lcd_Shift_Left
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           
  4119                           	psect	text21
  4120   001B3C                     __ptext21:
  4121                           	callstack 0
  4122   001B3C                     _Lcd_Cmd:
  4123                           	callstack 29
  4124                           
  4125                           ;incstack = 0
  4126                           ;Lcd_Cmd@a stored from wreg
  4127   001B3C  6E03               	movwf	Lcd_Cmd@a^0,c
  4128   001B3E                     
  4129                           ;./lcd.h: 23: void Lcd_Cmd(char a);./lcd.h: 24: {;./lcd.h: 25:  PORTAbits.RA0 = 0;
  4130   001B3E  90CA               	bcf	202,0,c	;volatile
  4131   001B40                     
  4132                           ;./lcd.h: 26:  Lcd_Port(a);
  4133   001B40  5003               	movf	Lcd_Cmd@a^0,w,c
  4134   001B42  ECA5  F00C         	call	_Lcd_Port
  4135   001B46                     
  4136                           ;./lcd.h: 27:  PORTAbits.RA1 = 1;
  4137   001B46  82CA               	bsf	202,1,c	;volatile
  4138   001B48                     
  4139                           ;./lcd.h: 28:     _delay((unsigned long)((4)*(64000000/4000.0)));
  4140   001B48  0E54               	movlw	84
  4141   001B4A  6E02               	movwf	??_Lcd_Cmd^0,c
  4142   001B4C  0E1C               	movlw	28
  4143   001B4E                     u1307:
  4144   001B4E  2EE8               	decfsz	wreg,f,c
  4145   001B50  D7FE               	bra	u1307
  4146   001B52  2E02               	decfsz	??_Lcd_Cmd^0,f,c
  4147   001B54  D7FC               	bra	u1307
  4148   001B56  D000               	nop2	
  4149   001B58                     
  4150                           ;./lcd.h: 29:     PORTAbits.RA1 = 0;
  4151   001B58  92CA               	bcf	202,1,c	;volatile
  4152   001B5A  0012               	return		;funcret
  4153   001B5C                     __end_of_Lcd_Cmd:
  4154                           	callstack 0
  4155                           
  4156 ;; *************** function _Lcd_Port *****************
  4157 ;; Defined at:
  4158 ;;		line 1 in file "./lcd.h"
  4159 ;; Parameters:    Size  Location     Type
  4160 ;;  a               1    wreg     unsigned char 
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;  a               1    0[COMRAM] unsigned char 
  4163 ;; Return value:  Size  Location     Type
  4164 ;;                  1    wreg      void 
  4165 ;; Registers used:
  4166 ;;		wreg
  4167 ;; Tracked objects:
  4168 ;;		On entry : 0/0
  4169 ;;		On exit  : 0/0
  4170 ;;		Unchanged: 0/0
  4171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4173 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4175 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4176 ;;Total ram usage:        1 bytes
  4177 ;; Hardware stack levels used: 1
  4178 ;; This function calls:
  4179 ;;		Nothing
  4180 ;; This function is called by:
  4181 ;;		_Lcd_Cmd
  4182 ;;		_Lcd_Init
  4183 ;;		_Lcd_Write_Char
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187                           	psect	text22
  4188   00194A                     __ptext22:
  4189                           	callstack 0
  4190   00194A                     _Lcd_Port:
  4191                           	callstack 28
  4192                           
  4193                           ;incstack = 0
  4194                           ;Lcd_Port@a stored from wreg
  4195   00194A  6E01               	movwf	Lcd_Port@a^0,c
  4196   00194C                     
  4197                           ;./lcd.h: 1: void Lcd_Port(char a);./lcd.h: 2: {;./lcd.h: 3:  if(a & 1)
  4198   00194C  A001               	btfss	Lcd_Port@a^0,0,c
  4199   00194E  EFAB  F00C         	goto	u351
  4200   001952  EFAD  F00C         	goto	u350
  4201   001956                     u351:
  4202   001956  EFB0  F00C         	goto	l75
  4203   00195A                     u350:
  4204   00195A                     
  4205                           ;./lcd.h: 4:   PORTAbits.RA2 = 1;
  4206   00195A  84CA               	bsf	202,2,c	;volatile
  4207   00195C  EFB1  F00C         	goto	l1253
  4208   001960                     l75:
  4209                           
  4210                           ;./lcd.h: 6:   PORTAbits.RA2 = 0;
  4211   001960  94CA               	bcf	202,2,c	;volatile
  4212   001962                     l1253:
  4213                           
  4214                           ;./lcd.h: 8:  if(a & 2)
  4215   001962  A201               	btfss	Lcd_Port@a^0,1,c
  4216   001964  EFB6  F00C         	goto	u361
  4217   001968  EFB8  F00C         	goto	u360
  4218   00196C                     u361:
  4219   00196C  EFBB  F00C         	goto	l77
  4220   001970                     u360:
  4221   001970                     
  4222                           ;./lcd.h: 9:   PORTAbits.RA3 = 1;
  4223   001970  86CA               	bsf	202,3,c	;volatile
  4224   001972  EFBC  F00C         	goto	l1257
  4225   001976                     l77:
  4226                           
  4227                           ;./lcd.h: 11:   PORTAbits.RA3 = 0;
  4228   001976  96CA               	bcf	202,3,c	;volatile
  4229   001978                     l1257:
  4230                           
  4231                           ;./lcd.h: 13:  if(a & 4)
  4232   001978  A401               	btfss	Lcd_Port@a^0,2,c
  4233   00197A  EFC1  F00C         	goto	u371
  4234   00197E  EFC3  F00C         	goto	u370
  4235   001982                     u371:
  4236   001982  EFC6  F00C         	goto	l79
  4237   001986                     u370:
  4238   001986                     
  4239                           ;./lcd.h: 14:   PORTAbits.RA4 = 1;
  4240   001986  88CA               	bsf	202,4,c	;volatile
  4241   001988  EFC7  F00C         	goto	l1261
  4242   00198C                     l79:
  4243                           
  4244                           ;./lcd.h: 16:   PORTAbits.RA4 = 0;
  4245   00198C  98CA               	bcf	202,4,c	;volatile
  4246   00198E                     l1261:
  4247                           
  4248                           ;./lcd.h: 18:  if(a & 8)
  4249   00198E  A601               	btfss	Lcd_Port@a^0,3,c
  4250   001990  EFCC  F00C         	goto	u381
  4251   001994  EFCE  F00C         	goto	u380
  4252   001998                     u381:
  4253   001998  EFD1  F00C         	goto	l81
  4254   00199C                     u380:
  4255   00199C                     
  4256                           ;./lcd.h: 19:   PORTAbits.RA5 = 1;
  4257   00199C  8ACA               	bsf	202,5,c	;volatile
  4258   00199E  EFD2  F00C         	goto	l83
  4259   0019A2                     l81:
  4260                           
  4261                           ;./lcd.h: 21:   PORTAbits.RA5 = 0;
  4262   0019A2  9ACA               	bcf	202,5,c	;volatile
  4263   0019A4                     l83:
  4264   0019A4  0012               	return		;funcret
  4265   0019A6                     __end_of_Lcd_Port:
  4266                           	callstack 0
  4267                           
  4268                           	psect	rparam
  4269   000001                     ___rparam_used  equ	1
  4270   000000                     ___param_bank   equ	0
  4271   000000                     __Lparam        equ	__Lrparam
  4272   000000                     __Hparam        equ	__Hrparam
  4273                           
  4274                           	psect	config
  4275                           
  4276                           ;Config register CONFIG1L @ 0x300000
  4277                           ;	External Oscillator Selection
  4278                           ;	FEXTOSC = OFF, Oscillator not enabled
  4279                           ;	Reset Oscillator Selection
  4280                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  4281   300000                     	org	3145728
  4282   300000  8C                 	db	140
  4283                           
  4284                           ;Config register CONFIG1H @ 0x300001
  4285                           ;	Clock out Enable bit
  4286                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  4287                           ;	PRLOCKED One-Way Set Enable bit
  4288                           ;	PR1WAY = OFF, PRLOCK bit can be set and cleared repeatedly
  4289                           ;	Clock Switch Enable bit
  4290                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  4291                           ;	Fail-Safe Clock Monitor Enable bit
  4292                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  4293   300001                     	org	3145729
  4294   300001  FD                 	db	253
  4295                           
  4296                           ;Config register CONFIG2L @ 0x300002
  4297                           ;	MCLR Enable bit
  4298                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  4299                           ;	Power-up timer selection bits
  4300                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  4301                           ;	Multi-vector enable bit
  4302                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  4303                           ;	IVTLOCK bit One-way set enable bit
  4304                           ;	IVT1WAY = OFF, IVTLOCK bit can be cleared and set repeatedly
  4305                           ;	Low Power BOR Enable bit
  4306                           ;	LPBOREN = OFF, ULPBOR disabled
  4307                           ;	Brown-out Reset Enable bits
  4308                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  4309   300002                     	org	3145730
  4310   300002  E7                 	db	231
  4311                           
  4312                           ;Config register CONFIG2H @ 0x300003
  4313                           ;	Brown-out Reset Voltage Selection bits
  4314                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  4315                           ;	ZCD Disable bit
  4316                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  4317                           ;	PPSLOCK bit One-Way Set Enable bit
  4318                           ;	PPS1WAY = OFF, PPSLOCK bit can be set and cleared repeatedly (subject to the unlock se
      +                          quence)
  4319                           ;	Stack Full/Underflow Reset Enable bit
  4320                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4321                           ;	Debugger Enable bit
  4322                           ;	DEBUG = OFF, Background debugger disabled
  4323                           ;	Extended Instruction Set Enable bit
  4324                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  4325   300003                     	org	3145731
  4326   300003  F7                 	db	247
  4327                           
  4328                           ;Config register CONFIG3L @ 0x300004
  4329                           ;	WDT Period selection bits
  4330                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4331                           ;	WDT operating mode
  4332                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  4333   300004                     	org	3145732
  4334   300004  9F                 	db	159
  4335                           
  4336                           ;Config register CONFIG3H @ 0x300005
  4337                           ;	WDT Window Select bits
  4338                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  4339                           ;	WDT input clock selector
  4340                           ;	WDTCCS = SC, Software Control
  4341   300005                     	org	3145733
  4342   300005  FF                 	db	255
  4343                           
  4344                           ;Config register CONFIG4L @ 0x300006
  4345                           ;	Boot Block Size selection bits
  4346                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  4347                           ;	Boot Block enable bit
  4348                           ;	BBEN = OFF, Boot block disabled
  4349                           ;	Storage Area Flash enable bit
  4350                           ;	SAFEN = OFF, SAF disabled
  4351                           ;	Application Block write protection bit
  4352                           ;	WRTAPP = OFF, Application Block not write protected
  4353   300006                     	org	3145734
  4354   300006  FF                 	db	255
  4355                           
  4356                           ;Config register CONFIG4H @ 0x300007
  4357                           ;	Boot Block Write Protection bit
  4358                           ;	WRTB = OFF, Boot Block not write-protected
  4359                           ;	Configuration Register Write Protection bit
  4360                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  4361                           ;	Data EEPROM Write Protection bit
  4362                           ;	WRTD = OFF, Data EEPROM not write-protected
  4363                           ;	SAF Write protection bit
  4364                           ;	WRTSAF = OFF, SAF not Write Protected
  4365                           ;	Low Voltage Programming Enable bit
  4366                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  4367   300007                     	org	3145735
  4368   300007  DF                 	db	223
  4369                           
  4370                           ;Config register CONFIG5L @ 0x300008
  4371                           ;	PFM and Data EEPROM Code Protection bit
  4372                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  4373   300008                     	org	3145736
  4374   300008  FF                 	db	255
  4375                           
  4376                           ;Config register CONFIG5H @ 0x300009
  4377                           ;	unspecified, using default values
  4378   300009                     	org	3145737
  4379   300009  FF                 	db	255
  4380                           tosu	equ	0x3FFF
  4381                           tosh	equ	0x3FFE
  4382                           tosl	equ	0x3FFD
  4383                           stkptr	equ	0x3FFC
  4384                           pclatu	equ	0x3FFB
  4385                           pclath	equ	0x3FFA
  4386                           pcl	equ	0x3FF9
  4387                           tblptru	equ	0x3FF8
  4388                           tblptrh	equ	0x3FF7
  4389                           tblptrl	equ	0x3FF6
  4390                           tablat	equ	0x3FF5
  4391                           prodh	equ	0x3FF4
  4392                           prodl	equ	0x3FF3
  4393                           indf0	equ	0x3FEF
  4394                           postinc0	equ	0x3FEE
  4395                           postdec0	equ	0x3FED
  4396                           preinc0	equ	0x3FEC
  4397                           plusw0	equ	0x3FEB
  4398                           fsr0h	equ	0x3FEA
  4399                           fsr0l	equ	0x3FE9
  4400                           wreg	equ	0x3FE8
  4401                           indf1	equ	0x3FE7
  4402                           postinc1	equ	0x3FE6
  4403                           postdec1	equ	0x3FE5
  4404                           preinc1	equ	0x3FE4
  4405                           plusw1	equ	0x3FE3
  4406                           fsr1h	equ	0x3FE2
  4407                           fsr1l	equ	0x3FE1
  4408                           bsr	equ	0x3FE0
  4409                           indf2	equ	0x3FDF
  4410                           postinc2	equ	0x3FDE
  4411                           postdec2	equ	0x3FDD
  4412                           preinc2	equ	0x3FDC
  4413                           plusw2	equ	0x3FDB
  4414                           fsr2h	equ	0x3FDA
  4415                           fsr2l	equ	0x3FD9
  4416                           status	equ	0x3FD8

Data Sizes:
    Strings     10
    Constant    0
    Data        0
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     73      78
    BANK0           160      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    bcd_to_dec@bcd	PTR unsigned char  size(1) Largest target is 1
		 -> main@minute(COMRAM[1]), main@secondes(COMRAM[1]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    f$.$buffer	PTR unsigned char  size(1) Largest target is 6
		 -> main@buffer(COMRAM[6]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 6
		 -> main@buffer(COMRAM[6]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 6
		 -> main@buffer(COMRAM[6]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S1002$buffer	PTR unsigned char  size(1) Largest target is 6
		 -> main@buffer(COMRAM[6]), 

    S1002$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[10]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 6
		 -> main@buffer(COMRAM[6]), 

    uart_send_string@s	PTR const unsigned char  size(1) Largest target is 6
		 -> main@buffer(COMRAM[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[10]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[10]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[10]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0    4185
                                             62 COMRAM    11    11      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                         _bcd_to_dec
                           _rtc_read
                            _sprintf
                   _uart_send_string
 ---------------------------------------------------------------------------------
 (1) _uart_send_string                                     1     0      1      46
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    14      6    3001
                                             44 COMRAM    18    12      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    2798
                                             40 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           10     7      3    2664
                                             31 COMRAM     9     6      3
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   7     5      2     182
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                11     8      3    1825
                                             20 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  7     3      4     747
                                             13 COMRAM     7     3      4
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                5     3      2     333
                                              8 COMRAM     5     3      2
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3     232
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2      67
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     302
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _rtc_read                                             3     1      2      47
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _bcd_to_dec                                           3     2      1      68
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     2      1     211
                                              4 COMRAM     3     2      1
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     120
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     360
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     135
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      75
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0      75
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      60
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _bcd_to_dec
   _rtc_read
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _read_prec_or_width
   _uart_send_string

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            4095      0       0      0.0%
BITBIGSFRh        1306      0       0      0.0%
BITBIGSFRlll       675      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBIGSFRlh        218      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0      32     20.0%
BITBIGSFRllh       102      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     73      78     82.1%
STACK                0      0       0      0.0%
DATA                 0      0     110      0.0%


Microchip Technology PIC18 Macro Assembler V3.10 build 20250813170317 
Symbol Table                                                                                   Fri Oct 10 10:03:03 2025

  __end_of_uart_send_string 18E4                          l81 19A2                          l83 19A4  
                        l75 1960                          l77 1976                          l86 1B5A  
                        l79 198C                          l95 1948                          l89 1B68  
                        l98 187C                ___awdiv@sign 0006                         l101 1A54  
                       l121 1882                         l107 1A8A                         l131 18E2  
                       l116 1B1A                         l140 17AE                         l125 18B6  
                       l142 17BC                         l134 1790                         l151 17FC  
                       l143 17C8                         l152 1800                         l136 179E  
                       l128 18CC                         l160 10A0                         l145 17D6  
                       l137 17A0                         l146 17DA                         l163 10B2  
                       l148 17E8                         l149 17EE                         l165 10C0  
                       l157 1090                         l159 109E                         l514 14F0  
                       l527 164C                         l961 1AEE                         l981 1728  
                       l984 1762                         l986 177C                         l989 1330  
                       u350 195A                         u351 1956                         u360 1970  
                       u361 196C                         u370 1986                         u371 1982  
                       u380 199C                         u700 145C                         u381 1998  
                       u701 1458                         u710 1480                         u711 147C  
                       u720 149E                         u800 163C                         u640 165E  
                       u721 149A                         u801 1638                         u641 165A  
                       u730 14BA                         u650 166E                         u810 1708  
                       u731 14B6                         u651 166A                         u811 1704  
                       u740 14E0                         u660 1694                         u820 1722  
                       u900 13AC                         u741 14DC                         u661 1690  
                       u821 171E                         u901 13A8                         u750 15B0  
                       u670 16C6                         u830 1762                         u910 13BE  
                       u751 15AC                         u671 16C2                         u831 175E  
                       u911 13BA                         u760 15CA                         u680 1A1C  
                       u840 1770                         u920 13CE                         u761 15C6  
                       u681 1A18                         u841 176C                         u921 13CA  
                       u690 1442                         u770 15E4                         u850 1A9A  
                       u930 13E8                         u691 143E                         u771 15E0  
                       u851 1A96                         u931 13E4                         u780 1602  
                       u940 13F6                         u860 12EA                         u781 15FE  
                       u941 13F2                         u861 12E4                         u790 1618  
                       u950 1406                         u870 12EC                         u791 1614  
                       u951 1402                         u880 1306                         u960 151C  
                       u881 1302                         u961 1518                         u890 131C  
                       u970 1596                         u891 1318                         u971 1592  
                       u980 1196                         u981 1192                         u990 11F8  
                       u991 11F4                         _abs 1A8C                         _pad 16FA  
              ___awmod@sign 0006                         wreg 3FE8                        l1002 1430  
                      l1010 159E                        l1006 1596                        l1031 19E2  
                      l1025 12D4                        l1050 16F8                        l1035 1AA6  
                      ?_abs 0007                        l1061 1B6A                        l1038 1ABE  
                      l1321 1B46                        l1401 1876                        l1058 1A1C  
                      l1251 195A                        l1323 1B48                        l1331 1A2E  
                      l1261 198E                        l1253 1962                        l1325 1B58  
                      l1317 1B3E                        l1341 1A48                        l1333 1A36  
                      l1263 199C                        l1255 1970                        l1319 1B40  
                      l1343 1A4A                        l1335 1A38                        l1327 1A20  
                      l1257 1978                        l1249 194C                        l1345 1A52  
                      l1337 1A40                        l1329 1A2C                        l1601 15EC  
                      l1521 165E                        l1259 1986                        l1339 1A42  
                      l1611 1626                        l1603 15F4                        l1523 166E  
                      l1357 1B5C                        l1381 1826                        l1541 1432  
                      l1605 1602                        l1613 162C                        l1525 1678  
                      l1533 19E4                        l1621 16FA                        l1701 1566  
                      l1391 1858                        l1383 1836                        l1375 1802  
                      l1551 145C                        l1543 1434                        l1615 163C  
                      l1607 1618                        l1527 1694                        l1519 164E  
                      l1535 19EE                        l1631 1740                        l1623 1708  
                      l1703 156E                        l1711 11A8                        l1393 185E  
                      l1385 183C                        l1377 1808                        l1561 1488  
                      l1553 1464                        l1545 1442                        l1617 1644  
                      l1609 1620                        l1529 16C6                        l1537 19FC  
                      l1633 1744                        l1625 1714                        l1641 12D6  
                      l1713 11AC                        l1705 1172                        l1801 18C6  
                      l1395 1864                        l1387 184C                        l1379 1820  
                      l1811 17BE                        l1571 14C2                        l1563 1490  
                      l1555 1468                        l1547 144A                        l1539 1A00  
                      l1635 1770                        l1627 1722                        l1651 130C  
                      l1643 12DA                        l1731 121A                        l1723 11C8  
                      l1715 11B2                        l1707 1196                        l1803 18DC  
                      l1397 186A                        l1389 1852                        l1813 17C6  
                      l1805 177E                        l1581 14E8                        l1573 14C4  
                      l1565 149E                        l1557 146E                        l1549 144E  
                      l1637 1A8C                        l1629 1732                        l1661 133E  
                      l1653 131C                        l1645 12EE                        l1741 1286  
                      l1733 1224                        l1717 11B4                        l1725 11E8  
                      l1709 119E                        l1821 1AC8                        l1399 1870  
                      l1815 17FE                        l1807 1788                        l1575 14CA  
                      l1567 14A4                        l1559 1480                        l1591 15B8  
                      l1639 1A9A                        l1663 1344                        l1671 1392  
                      l1655 1326                        l1647 12F6                        l1743 1290  
                      l1735 122E                        l1727 11F8                        l1719 11C0  
                      l1751 12B0                        l1823 1ACE                        l1831 100C  
                      l1809 178E                        l1569 14BA                        l1577 14D0  
                      l1593 15BC                        l1585 15A0                        l1673 13AC  
                      l1681 13F6                        l1665 1370                        l1657 132C  
                      l1649 1306                        l1737 124C                        l1729 120C  
                      l1761 19BE                        l1825 1AD4                        l1841 1020  
                      l1833 1010                        l1771 1908                        l1579 14E0  
                      l1595 15CA                        l1587 15A2                        l1683 1406  
                      l1675 13BE                        l1667 1372                        l1659 1336  
                      l1691 14F2                        l1747 12A4                        l1739 126A  
                      l1763 19DC                        l1827 1AE4                        l1819 1AC0  
                      l1851 1062                        l1843 1026                        l1835 1014  
                      l1781 1942                        l1773 190E                        l1597 15D2  
                      l1589 15B0                        l1685 140C                        l1677 13CE  
                      l1669 1378                        l1693 14F8                        l1757 19A6  
                      l1861 1088                        l1853 1066                        l1845 1028  
                      l1837 101A                        l1775 1918                        l1767 18E6  
                      l1783 1A56                        l1791 1AF0                        l1599 15E4  
                      l1687 141A                        l1679 13E8                        l1695 151C  
                      l1759 19AE                        l1871 10D4                        l1863 108C  
                      l1855 1068                        l1847 104C                        l1839 101E  
                      l1777 192A                        l1769 18F6                        l1785 1A60  
                      l1697 1524                        l1793 187E                        l1881 110E  
                      l1873 10E0                        l1865 108E                        l1857 1080  
                      l1849 105E                        l1779 193C                        l1787 1A6E  
                      l1699 1544                        l1795 1892                        l1891 115A  
                      l1883 1112                        l1875 10EC                        l1867 10AE  
                      l1859 1084                        l1789 1A72                        l1797 189E  
                      l1893 1162                        l1885 1134                        l1877 10F4  
                      l1869 10C4                        ?_pad 000E                        l1799 18A0  
                      l1887 114C                        l1879 10FC                        l1889 1150  
                      STR_1 1001                        u1000 121A                        u1001 1216  
                      u1010 124C                        u1011 1248                        u1020 126A  
                      u1100 18DC                        u1021 1266                        u1101 18D8  
                      u1110 179E                        u1030 19DC                        u1111 179A  
                      u1031 19D8                        u1040 18F6                        u1120 17AE  
                      u1200 110E                        u1041 18F2                        u1121 17AA  
                      u1201 110A                        u1050 192A                        u1130 17BC  
                      u1210 1124                        u1051 1926                        u1131 17B8  
                      u1211 111C                        u1060 1A8A                        u1140 17D6  
                      u1061 1A86                        u1141 17D2                        u1150 17E8  
                      u1070 1892                        u1151 17E4                        u1071 188E  
                      u1160 17FC                        u1080 18B6                        u1161 17F8  
                      u1081 18B2                        u1090 18C6                        u1170 109E  
                      u1307 1B4E                        u1091 18C2                        u1171 109A  
                      u1228 1126                        u1180 10AE                        u1181 10AA  
                      u1237 1072                        u1190 10C0                        u1247 10CA  
                      u1191 10BC                        u1257 1A3A                        u1267 1A4C  
                      u1277 1812                        u1287 182C                        u1297 1842  
                      abs@a 0007           ?_Lcd_Write_String 0005                        _dbuf 0060  
                      _main 100C                        _dtoa 12D6                        _prec 004C  
                      pad@i 0013                        pad@p 0010                        fsr1h 3FE2  
                      fsr2h 3FDA                        indf1 3FE7                        indf2 3FDF  
                      fsr1l 3FE1                        fsr2l 3FD9                        prodh 3FF4  
                      prodl 3FF3                        start FFFC          ??_Lcd_Write_String 0006  
           __end_of_Lcd_Cmd 1B5C                ___param_bank 0000                       ??_abs 0009  
                     ??_pad 0012                       ?_main 0001                       ?_dtoa 0015  
           __end_of___awdiv 14F2             __end_of___awmod 164E             ___awdiv@divisor 0003  
                     _U1BRG 3DF5                       _U1TXB 3DEA             ___awdiv@counter 0005  
              vfpfcnvrt@fmt 0021                       _PORTB 3FCB                       _PORTC 3FCC  
                     _TRISA 3FC2                       _TRISB 3FC3                       _TRISC 3FC4  
            rtc_read@result 0003                main@secondes 0049                       _flags 004E  
       read_prec_or_width@c 0005         read_prec_or_width@n 0006                       _fputc 164E  
                     _fputs 19E4                       pad@fp 000E                       _width 004A  
                     _putch 1B6A                       dtoa@d 0016                       dtoa@i 001E  
                     dtoa@p 001A                       dtoa@s 001D                       dtoa@w 001B  
                     tablat 3FF5                       status 3FD8             __end_of_sprintf 1AF0  
          __end_of_Lcd_Init 187E            __end_of_Lcd_Port 19A6             __initialization 1B1C  
              __end_of_main 1172                __end_of_dtoa 1432                      ??_main 003F  
                    ??_dtoa 0018               __activetblptr 0002  __end_of_read_prec_or_width 15A0  
                    ?_fputc 0001                      ?_fputs 0009            ___awdiv@dividend 0001  
                    _ANSELA 3A40                      ?_putch 0001                      _ANSELB 3A50  
                    _ANSELC 3A60                      _U1CON0 3DF2                      _U1CON1 3DF3  
                    _U1CON2 3DF4                      _RB1PPS 3A09                      _RB2PPS 3A0A  
                    _ODCONB 3A52                      _RC6PPS 3A16                   ??_Lcd_Cmd 0002  
             vfpfcnvrt@done 0027                vfprintf@cfmt 002C                   ??___awdiv 0005  
                 ??___awmod 0005        read_prec_or_width@ap 0002                      clear_0 1B22  
          ___awdiv@quotient 0007             ___awmod@divisor 0003                      isa$std 0001  
           ___awmod@counter 0005                      pad@buf 000F                      dtoa@fp 0015  
                    fputc@c 0001                      fputs@c 000B                      fputs@i 000C  
                    fputs@s 0009                __mediumconst 1000            __end_of_rtc_read 1802  
                    tblptrh 3FF7                      tblptrl 3FF6                      tblptru 3FF8  
                    putch@c 0001            __end_of_vfprintf 19E4                   ??_sprintf 0033  
           Lcd_Set_Cursor@a 0005             Lcd_Set_Cursor@b 0004             Lcd_Set_Cursor@y 0007  
           Lcd_Set_Cursor@z 0006                  __accesstop 0060     __end_of__initialization 1B32  
         __end_of_Lcd_Clear 1B6A               ___rparam_used 0001              __pcstackCOMRAM 0001  
             __end_of_fputc 16FA               __end_of_fputs 1A1E               __end_of_putch 1B6C  
         ?_uart_send_string 0001                  _bcd_to_dec 1AF0          ??_uart_send_string 0002  
            _Lcd_Set_Cursor 18E4                   ?_Lcd_Init 0001                   ?_Lcd_Port 0001  
                   ??_fputc 0004                     ??_fputs 000B                     ??_putch 0001  
                __pbssBANK0 0060                     _I2C2CLK 3D65                     _I2C2CNT 3D56  
                   _I2C2RXB 3D54                     _I2C2TXB 3D55      __end_of_Lcd_Set_Cursor 194A  
                   _U1RXPPS 3AE7                  ??_Lcd_Init 0004                  ??_Lcd_Port 0001  
            _Lcd_Write_Char 1A1E                     _Lcd_Cmd 1B3C                     __Hparam 0000  
                   __Lparam 0000                   ?_rtc_read 0001                     ___awdiv 1432  
                   ___awmod 15A0                   ?_vfprintf 0029                __psmallconst 1000  
                   __pcinit 1B1C                     __ramtop 1000             ?_Lcd_Set_Cursor 0004  
               ?_bcd_to_dec 0001                     __ptext0 100C                     __ptext1 187E  
                   __ptext2 1AC0                     __ptext3 19A6                     __ptext4 1172  
                   __ptext5 14F2                     __ptext6 12D6                     __ptext7 16FA  
                   __ptext8 19E4                     __ptext9 164E           uart_send_string@s 0001  
     read_prec_or_width@fmt 0001            ___awmod@dividend 0001                 _I2C2PIRbits 3D63  
                   _sprintf 1AC0      __end_of_Lcd_Write_Char 1A56        end_of_initialization 1B32  
                   fputc@fp 0003               __Lmediumconst 0000                     fputs@fp 000A  
        _read_prec_or_width 14F2           __end_of_vfpfcnvrt 12D6                  ??_rtc_read 0003  
                   postdec2 3FDD         ?_read_prec_or_width 0001                     postinc0 3FEE  
                   postinc1 3FE6                     postinc2 3FDE            vfpfcnvrt@convarg 0023  
                 Lcd_Port@a 0001          rtc_read@reg_adress 0001                  ??_vfprintf 002C  
                 _PORTAbits 3FCA                   _PORTBbits 3FCB                   _PORTCbits 3FCC  
      ??_read_prec_or_width 0003             ?_Lcd_Write_Char 0001           Lcd_Write_String@a 0005  
         Lcd_Write_String@i 0006                  main@buffer 0041                  main@minute 0048  
                 _Lcd_Clear 1B5C                 vfpfcnvrt@ap 0022                 vfpfcnvrt@cp 0028  
               vfpfcnvrt@fp 0020            _Lcd_Write_String 1A56         start_initialization 1B1C  
               __end_of_abs 1AC0                 __end_of_pad 177E                 vfprintf@fmt 002A  
                ?_Lcd_Clear 0001             Lcd_Write_Char@a 0004             Lcd_Write_Char@y 0003  
               __pbssCOMRAM 004A                    ?_Lcd_Cmd 0001                   _dtoa$1081 0018  
          ??_Lcd_Set_Cursor 0005                    ?___awdiv 0001                    ?___awmod 0001  
                  _I2C2ADB1 3D58                    _I2C2CON0 3D5D                ??_bcd_to_dec 0002  
               __smallconst 1000                    ?_sprintf 002D                  _I2C2SDAPPS 3AE6  
                _I2C2SCLPPS 3AE5          __end_of_bcd_to_dec 1B1C                    Lcd_Cmd@a 0003  
                  _PIR3bits 39A3                 ??_Lcd_Clear 0004               _I2C2STAT1bits 3D62  
                 _vfpfcnvrt 1172            ??_Lcd_Write_Char 0002                    _Lcd_Init 1802  
                  _Lcd_Port 194A            _uart_send_string 187E    __end_of_Lcd_Write_String 1A8C  
                  __Hrparam 0000                  vfprintf@ap 002B                    __Lrparam 0000  
                vfprintf@fp 0029                  ?_vfpfcnvrt 0020                  sprintf@fmt 002E  
             bcd_to_dec@bcd 0001                _I2C2CON0bits 3D5D                _I2C2CON1bits 3D5E  
                  __ptext10 1B6A                    __ptext11 1A8C                    __ptext20 1B5C  
                  __ptext12 15A0                    __ptext21 1B3C                    __ptext13 1432  
                  __ptext22 194A                    __ptext14 177E                    __ptext15 1AF0  
                  __ptext16 1A56                    __ptext17 1A1E                    __ptext18 18E4  
                  __ptext19 1802                    isa$xinst 0000                    _rtc_read 177E  
                  _vfprintf 19A6          Lcd_Write_Char@temp 0002                   sprintf@ap 0033  
               ??_vfpfcnvrt 0023          Lcd_Set_Cursor@temp 0008                    sprintf@f 0034  
                  sprintf@s 002D           main@last_secondes 0047  
